{"version":3,"sources":["./node_modules/igniteui-theming/sass/bem/_index.scss","./node_modules/igniteui-theming/sass/themes/charts/_category-chart-theme.scss","./node_modules/igniteui-theming/sass/themes/schemas/charts/light/_category-chart.scss","./node_modules/igniteui-theming/sass/themes/schemas/charts/light/_data-chart.scss","./node_modules/igniteui-theming/sass/themes/schemas/charts/light/_doughnut-chart.scss","./node_modules/igniteui-theming/sass/themes/schemas/charts/light/_financial-chart.scss","./node_modules/igniteui-theming/sass/themes/schemas/charts/light/_funnel-chart.scss","./node_modules/igniteui-theming/sass/themes/schemas/charts/light/_gauge.scss","./node_modules/igniteui-theming/sass/themes/schemas/charts/light/_geo-map.scss","./node_modules/igniteui-theming/sass/themes/schemas/charts/light/_graph.scss","./node_modules/igniteui-theming/sass/themes/schemas/charts/light/_pie-chart.scss","./node_modules/igniteui-theming/sass/themes/schemas/charts/light/_shape-chart.scss","./node_modules/igniteui-theming/sass/themes/schemas/charts/dark/_category-chart.scss","./node_modules/igniteui-theming/sass/themes/charts/_data-chart-theme.scss","./node_modules/igniteui-theming/sass/themes/charts/_financial-chart-theme.scss","./node_modules/igniteui-theming/sass/themes/charts/_funnel-chart-theme.scss","./node_modules/igniteui-theming/sass/themes/charts/_gauge-theme.scss","./node_modules/igniteui-theming/sass/themes/charts/_geo-map-theme.scss","./node_modules/igniteui-theming/sass/themes/charts/_graph-theme.scss","./node_modules/igniteui-theming/sass/themes/charts/_pie-chart-theme.scss","./node_modules/igniteui-theming/sass/themes/charts/_shape-chart-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/_common/_igx-display-container.scss","./src/styles.scss","./node_modules/igniteui-angular/lib/core/styles/components/_common/_igx-drag.scss","./node_modules/igniteui-angular/lib/core/styles/components/_common/_igx-vhelper.scss","./node_modules/igniteui-theming/sass/themes/schemas/components/light/_button.scss","./node_modules/igniteui-theming/sass/themes/schemas/components/light/_checkbox.scss","./node_modules/igniteui-theming/sass/themes/schemas/components/light/_combo.scss","./node_modules/igniteui-theming/sass/themes/schemas/components/light/_drop-down.scss","./node_modules/igniteui-theming/sass/themes/schemas/components/elevation/_input-group.scss","./node_modules/igniteui-theming/sass/themes/schemas/components/light/_input-group.scss","./node_modules/igniteui-theming/sass/themes/schemas/components/light/_rating.scss","./node_modules/igniteui-theming/sass/themes/schemas/components/light/_select.scss","./node_modules/igniteui-theming/sass/themes/schemas/components/light/_slider.scss","./node_modules/igniteui-theming/sass/themes/schemas/components/light/_switch.scss","./node_modules/igniteui-theming/sass/themes/schemas/components/light/_tabs.scss","./node_modules/igniteui-theming/sass/themes/schemas/components/light/_tree.scss","./node_modules/igniteui-theming/sass/themes/schemas/components/dark/_button.scss","./node_modules/igniteui-theming/sass/themes/schemas/components/dark/_combo.scss","./node_modules/igniteui-theming/sass/themes/schemas/components/dark/_drop-down.scss","./node_modules/igniteui-theming/sass/themes/schemas/components/dark/_input-group.scss","./node_modules/igniteui-theming/sass/themes/schemas/components/dark/_select.scss","./node_modules/igniteui-theming/sass/themes/schemas/components/dark/_slider.scss","./node_modules/igniteui-theming/sass/themes/schemas/components/dark/_switch.scss","./node_modules/igniteui-theming/sass/themes/schemas/components/dark/_tabs.scss","./node_modules/igniteui-theming/sass/themes/schemas/components/dark/_tree.scss","./node_modules/igniteui-theming/sass/animations/_mixins.scss","./node_modules/igniteui-theming/sass/elevations/presets/_material.scss","./node_modules/igniteui-theming/sass/typography/presets/_bootstrap.scss","./node_modules/igniteui-theming/sass/typography/presets/_material.scss","./node_modules/igniteui-theming/sass/typography/presets/_fluent.scss","./node_modules/igniteui-theming/sass/typography/presets/_indigo.scss","./node_modules/igniteui-theming/sass/color/presets/light/_material.scss","./node_modules/igniteui-theming/sass/color/presets/light/_bootstrap.scss","./node_modules/igniteui-theming/sass/color/presets/light/_fluent.scss","./node_modules/igniteui-theming/sass/color/presets/light/_indigo.scss","./node_modules/igniteui-theming/sass/color/presets/light/_extra.scss","./node_modules/igniteui-theming/sass/color/presets/dark/_material.scss","./node_modules/igniteui-theming/sass/color/presets/dark/_bootstrap.scss","./node_modules/igniteui-theming/sass/color/presets/dark/_fluent.scss","./node_modules/igniteui-theming/sass/color/presets/dark/_indigo.scss","./node_modules/igniteui-theming/sass/color/presets/dark/_extra.scss","./node_modules/igniteui-angular/lib/core/styles/themes/_core.scss","./node_modules/igniteui-theming/sass/themes/_mixins.scss","./node_modules/igniteui-angular/lib/core/styles/components/icon/_icon-component.scss","./node_modules/igniteui-angular/lib/core/styles/print/_index.scss","./node_modules/igniteui-angular/lib/core/styles/themes/generators/_base.scss","./node_modules/igniteui-theming/sass/color/_mixins.scss","./node_modules/igniteui-theming/sass/elevations/_mixins.scss","./node_modules/igniteui-angular/lib/core/styles/components/ripple/_ripple-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/button/_button-theme.scss","./node_modules/igniteui-theming/sass/animations/generic/_scale.scss","./node_modules/igniteui-theming/sass/animations/entrances/_scale.scss","./node_modules/igniteui-angular/lib/core/styles/components/checkbox/_checkbox-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/select/_select-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/dialog/_dialog-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/drop-down/_drop-down-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/icon/_icon-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/input/_input-group-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/overlay/_overlay-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/toast/_toast-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/tooltip/_tooltip-theme.scss","./node_modules/tailwindcss/base.css","./node_modules/tailwindcss/utilities.css"],"sourcesContent":["/* stylelint-disable max-line-length */\n@use 'sass:string';\n@use 'sass:meta';\n@use 'sass:list';\n@use 'sass:selector';\n\n////\n/// @group bem\n/// @author <a href=\"https://github.com/runningskull\" target=\"_blank\">Juan Patten</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @package theming\n////\n\n/// @type String - The Element separator used. Default '__'.\n/// @access private\n$bem--sep-elem: if(meta.variable-exists(bem--sep-elem), $bem--sep-elem, '__');\n\n/// @type String - The Modifier separator used. Default '--'.\n/// @access private\n$bem--sep-mod: if(meta.variable-exists(bem--sep-mod), $bem--sep-mod, '--');\n\n/// @type String - The Modifier Value separator used. Default '-'.\n/// @access private\n$bem--sep-mod-val: if(meta.variable-exists(bem--sep-mod-val), $bem--sep-mod-val, '-');\n\n/// Converts a passed selector value into plain string.\n/// @access private\n/// @param {String} $s - The selector to be converted.\n@function bem--selector-to-string($s) {\n    @if not($s) {\n        @return '';\n    }\n\n    @return string.slice(meta.inspect($s), 2, -3);\n}\n\n/// Prepends a dot to the passed BEM selector.\n/// @access private\n/// @param {String} $x - The BEM selector to prepend a dot to.\n@function bem--with-dot($x) {\n    $first: string.slice($x, 0, 1);\n\n    @return if($first == '.', $x, string.insert($x, '.', -100));\n}\n\n/// Converts a key-value map into a modifier string.\n/// @access private\n@function bem--mod-str($m) {\n    @if meta.type-of($m) == 'map' {\n        $mm: list.nth($m, 1);\n\n        @return list.nth($mm, 1) + $bem--sep-mod-val + list.nth($mm, 2);\n    } @else {\n        @return $m;\n    }\n}\n\n/// Prefixes the block name to an element selector string,\n/// with the element separator string used as a divider.\n/// @access private\n/// @param {String} $b - The block name.\n/// @param {String} $e - The element name.\n@function bem--elem-str($b, $e) {\n    @return $b + $bem--sep-elem + $e;\n}\n\n/// Returns a block selector string affixed by the modifier selector,\n/// followed by the element selector string.\n/// @access private\n/// @param {String} $block - The block name.\n/// @param {String} $elem - The sub-element name.\n/// @param {String} $mod - The modifier name.\n@function bem--bem-str($block, $elem, $mod) {\n    $elem: if($elem, ' ' + $elem, '');\n\n    @return ($block + $bem--sep-mod + bem--mod-str($mod) + $elem);\n}\n\n/// Checks if the element separator string is part of the passed string.\n/// @access private\n/// @param {String} $x - The string to check.\n/// @returns {number|null} Will return the index of the occurance,\n/// or null if the element separator name is not part of the passed string.\n@function bem--contains-elem($x) {\n    // if you set the separators to common strings, this could fail\n    @return string.index($x, $bem--sep-elem);\n}\n\n/// Checks if the modifier separator string is part of the passed string.\n/// @access private\n/// @param {String} $x - The string to check.\n/// @returns {number|null} Will return the index of the occurance,\n/// or null if the modifier separator string is not part of the passed string.\n@function bem--contains-mod($x) {\n    // if you set the separators to common strings, this could fail\n    @return string.index($x, $bem--sep-mod);\n}\n\n/// Checks if the passed selector string contains a colon.\n/// @access private\n/// @param {String} $x - The string to check for colons.\n/// @returns {number|null} Will return the index of the occurance,\n/// or null if the string does not contain any colons.\n@function bem--contains-pseudo($x) {\n    @return string.index($x, ':');\n}\n\n/// Returns the BEM block-name that generated `$x`. Does not include leading \".\".\n/// @access private\n/// @param {String} $x - The block name.\n@function bem--extract-block($x) {\n    @if bem--contains-mod($x) {\n        @return string.slice($x, 1, string.index($x, $bem--sep-mod) - 1);\n    } @else if bem--contains-elem($x) {\n        @return string.slice($x, 1, string.index($x, $bem--sep-elem) - 1);\n    } @else if bem--contains-pseudo($x) {\n        @return string.slice($x, 1, string.index($x, ':') - 1);\n    }\n\n    @return $x;\n}\n\n/// Returns the first selector of a nested selector string.\n/// @access private\n@function bem--extract-first-selector($x) {\n    $eow: string.index($x, ' ') or -1;\n\n    @return string.slice($x, 1, $eow);\n}\n\n/// Generates a full BEM selector.\n/// @access private\n/// @param {String} $block - Required. A string block name.\n/// @param {String|List} $elem - Optional. A sub-element name. If `$mod` is not present, it is\n/// joined with $block. If $mod is present, it is nested under `$block--$mod`.\n/// @param {String|Map} $mod - Optional. A block modifier.\n/// @example scss Include a block\n///   @include bem-selector(block); // outputs .block\n/// @example scss Include a block and an element\n///   @include bem-selector(block, $e:elem); // outputs .block__elem\n/// @example scss Include block, element, and element modifier\n///   @include bem-selector(block, $e:(elem, $mod); // outputs .block__elem-emod\n/// @example scss Include block and block modifier\n///   @include bem-selector(block, $m:mod) // outputs .block--mod\n/// @example scss Include block and modifier value\n///   @include bem-selector(block, $m:(mod:val)); // outputs .block--mod-val\n/// @example scss Include block modifier followed by block sub-element\n///   @include bem-selector(block, $m:mod, $e:elem); // outputs .block--mod .block__elem\n@function bem-selector($block, $e: null, $elem: null, $m: null, $mod: null, $mods: null) {\n    $block: bem--with-dot($block);\n    $elem: $e or $elem;\n\n    // Return early if possible\n    $mods: $m or $mod or $mods;\n\n    @if not($elem or $mods) {\n        @return $block;\n    }\n\n    @if $elem {\n        // User passed an element-specific modifier\n        @if meta.type-of($elem) == list and list.nth($elem, 2) {\n            // For now we don't support multiple elem-mods at once\n            @if meta.type-of(list.nth($elem, 2)) == 'list' {\n                @error 'Only one element-modifier allowed.';\n            }\n\n            $elem: string.slice(bem-selector(list.nth($elem, 1), $m: list.nth($elem, 2)), 2);\n        }\n\n        $elem: bem--elem-str($block, $elem);\n    }\n\n    @if not $mods {\n        @return bem--with-dot($elem);\n    }\n\n    @if meta.type-of($mods) != 'list' {\n        $mods: ($mods);\n    }\n\n    $bemcls: '';\n\n    @for $i from 1 to list.length($mods) {\n        $bemcls: $bemcls + bem--bem-str($block, $elem, list.nth($mods, $i)) + ', ';\n    }\n\n    $bemcls: $bemcls + bem--bem-str($block, $elem, list.nth($mods, -1));\n\n    @return $bemcls;\n}\n\n/// Simply unrolls into a class-selector. The main purpose of using this mixin\n/// is to clearly denote the start of a BEM block.\n/// @access public scss\n/// @param {String} $block - The block name.\n/// @example\n///   @include bem-block(block) {\n///      background: green;\n///   }\n///   // Return\n///   .block { background: green; }\n@mixin bem-block($block) {\n    @at-root {\n        #{bem-selector($block)} {\n            @content;\n        }\n    }\n}\n\n/// Unrolls into a proper BEM element selector, depending on the context.\n/// Inside just a block, yields a root-level `.block__elem`.\n/// Inside a mod or pseudo-selector, yields a nested `.block--mod .block__elem`.\n/// If $mod is included, it is appended to the block selector. Multiple\n/// $mods are not supported.\n/// @access public\n/// @param {String} $elem - The sub-element name.\n/// @param {String} $m - The modifier name.\n/// @param {String} $mod - An alias of `$m`.\n/// @example scss\n///   @include bem-block(block) {\n///      @include bem-elem(element) {\n///        background: blue;\n///      }\n///   }\n///   // Return\n///   .block__element { background: blue; }\n@mixin bem-elem($elem, $m: null, $mod: null, $mods: null) {\n    $this: bem--selector-to-string(&);\n    $block: bem--extract-block($this);\n    $first: bem--extract-first-selector($this);\n    $nested: bem--contains-pseudo($this) or bem--contains-mod($this);\n    $mod: $m or $mod;\n    $mx: ();\n\n    @if $this == '' {\n        @error 'Detected an Element that is not inside a Block: #{$elem}';\n    }\n\n    @if bem--contains-elem($this) {\n        @error 'Detected a multi-level nested Element (#{$this} #{$elem})! Bem doesn\\'t support nested ' + 'elements because they do not have BEM nature (www.getbem.com/faq/#css-nested-elements). ' + 'If you must do it, use a hardcoded selector like &__subsubelem ';\n    }\n\n    @if $mods != null and meta.type-of($mods) == 'list' {\n        @each $i in $mods {\n            $mx: list.append($mx, #{bem-selector($block, $e: ($elem, $i))});\n        }\n    }\n\n    @if not($nested) {\n        // Normal case, no pseudo-selector present or mod, so no nesting.\n        // .block__elem { ... }\n        @at-root {\n            @if not($mods) {\n                #{bem-selector($block, $e: ($elem, $mod))} {\n                    @content;\n                }\n            } @else {\n                #{selector.append($mx...)} {\n                    @content;\n                }\n            }\n        }\n    } @else {\n        // pseudo-element or mod present, so we have nesting.\n        // .block:active .block__elem { ... }\n        // .block--mod .block__elem { ... }\n        @at-root {\n            $selector: $first + ' ' + bem-selector($block, $e: ($elem, $mod));\n\n            @if not($mods) {\n                #{$selector} {\n                    @content;\n                }\n            } @else {\n                #{$first} #{selector.append($mx...)} {\n                    @content;\n                }\n            }\n        }\n    }\n}\n\n/// Unrolls into a BEM block-modifier selector.\n/// This mixin does not generate element-modifiers, the bem-elem mixin instead.\n/// Nesting bem-mod inside a pseudo-selector is not supported, because what\n/// that should mean isn't clear.\n/// @access public\n/// @param {String} $mod - The modifier name.\n/// @example scss\n///   @include bem-block(block) {\n///      @include bem-mod(modifier) {\n///        background: red;\n///      }\n///   }\n///   // Return\n///   .block--modifier { background: red; }\n@mixin bem-mod($mod) {\n    $skip: false;\n    $this: bem--selector-to-string(&);\n\n    @if $this == '' {\n        @error 'Detected a Modifier that is not inside a Block: ' + $mod;\n    }\n\n    @if bem--contains-elem($this) {\n        @error 'Nesting a Modifier inside an Element (#{$this} #{$mod}) ' + 'is not supported. Instead, use bem-elem(myelem, elem-mod) syntax.';\n    }\n\n    @if bem--contains-pseudo($this) {\n        @error 'Nesting a Modifier inside a pseudo-selector is not supported: #{$this} #{$mod}';\n    }\n\n    @at-root {\n        #{bem-selector($this, $m: $mod)} {\n            @content;\n        }\n    }\n}\n\n/// Unrolls into a block--modifier.[block--modifier...] .block__el\n/// This mixin is useful when we want to apply classes to a block,\n/// or block element when two or more modifiers are applied in tandem\n/// @access public\n/// @param {List} $mods - A list of modifiers\n/// @example scss\n///   @include bem-block(block) {\n///      @include bem-mods(error, warn) {\n///        position: absolute;\n///      }\n///   }\n///   // Return\n///   .block--error,\n///   .block--warn {\n///       position: absolute;\n///    }\n///\n@mixin bem-mods($mods...) {\n    $this: bem--selector-to-string(&);\n    $mod-classes: ();\n\n    @each $mod in $mods {\n        @if $this == '' {\n            @error 'Detected a Modifier that is not inside a Block: ' + $mod;\n        }\n\n        @if bem--contains-elem($this) {\n            @error 'Nesting a Modifier inside an Element (#{$this} #{$mod}) ' + 'is not supported. Instead, use bem-elem(myelem, elem-mod) syntax.';\n        }\n\n        @if bem--contains-pseudo($this) {\n            @error 'Nesting a Modifier inside a pseudo-selector is not supported: #{$this} #{$mod}';\n        }\n\n        $mod-classes: list.append(\n            $mod-classes,\n            #{bem-selector(\n                    $block: $this,\n                    $m: $mod,\n                )}\n        );\n    }\n\n    @at-root {\n        #{selector.append($mod-classes...)} {\n            @content;\n        }\n    }\n}\n\n/// @alias bem-selector\n/// @see bem-selector\n@mixin bem($block, $e: null, $elem: null, $m: null, $mod: null, $mods: null) {\n    #{bem-selector($block, $e: $e, $elem: $elem, $m: $m, $mod: $mod, $mods: $mods)} {\n        @content;\n    }\n}\n\n/// @alias bem-block\n/// @see bem-block\n@mixin block($block) {\n    @include bem-block($block) {\n        @content;\n    }\n}\n\n/// @alias bem-elem\n/// @see bem-elem\n@mixin elem($elem, $m: null, $mod: null, $mods: null) {\n    @include bem-elem($elem, $m: $m, $mod: $mod, $mods: $mods) {\n        @content;\n    }\n}\n\n/// @alias bem-mod\n/// @see bem-mod\n@mixin mod($mod) {\n    @include bem-mod($mod) {\n        @content;\n    }\n}\n\n/// @alias bem-mods\n/// @see bem-mods\n@mixin mods($mods...) {\n    @include bem-mods($mods...) {\n        @content;\n    }\n}\n\n/// @alias bem-block\n/// @see bem-block\n@mixin b($block) {\n    @include bem-block($block) {\n        @content;\n    }\n}\n\n/// @alias bem-elem\n/// @see bem-elem\n@mixin e($elem, $m: null, $mod: null, $mods: null) {\n    @include bem-elem($elem, $m: $m, $mod: $mod, $mods: $mods) {\n        @content;\n    }\n}\n\n/// @alias bem-mod\n/// @see bem-mod\n@mixin m($mod) {\n    @include bem-mod($mod) {\n        @content;\n    }\n}\n\n/// @alias bem-mods\n/// @see bem-mods\n@mixin mx($mods...) {\n    @include bem-mods($mods...) {\n        @content;\n    }\n}\n","/* stylelint-disable max-line-length */\n@use 'sass:map';\n@use '../mixins' as *;\n@use '../functions' as *;\n@use '../schemas/charts' as *;\n@use '../../utils' as *;\n@use '../../typography/mixins' as *;\n@use '../../typography/functions' as *;\n\n////\n/// @package theming\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/SisIvanova\" target=\"_blank\">Silvia Ivanova</a>\n////\n\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Map} $target ['angular'] - The target platform to be used when scoping the theme variables.\n/// @param {List} $margin [null] - Sets the margin (top, right, bottom, left) of the chart content.\n/// @param {List} $brushes [series] - Defines the palette from which automatically assigned series brushes colors are selected.\n/// @param {List} $marker-brushes [series]- Defines the palette from which automatically assigned series marker brushes colors are selected.\n/// @param {List} $negative-brushes [series] - Defines the palette used for coloring negative items in a chart type with contextual coloring, such as Waterfall.\n/// @param {List} $outlines [series] - Defines the palette from which automatically assigned series outline colors are selected.\n/// @param {List} $marker-outlines [series] - Defines the palette from which automatically assigned series marker outline colors are selected.\n/// @param {List} $negative-outlines [series] - Defines the brushes used for drawing negative elements in a chart type with contextual coloring, such as Waterfall.\n/// @param {String} $title-alignment [null] - The horizontal alignment to use for the title.\n/// @param {List} $title-margin [null] - Sets the margin (top, right, bottom, left) of the chart title.\n/// @param {Color} $title-text-color [null] - Sets the color of the chart title.\n/// @param {String} $title-text-style [null] - Sets the CSS font property of the chart title.\n/// @param {List} $subtitle-margin [null] - Sets the margins (top, right, bottom, left) of the chart subtitle.\n/// @param {String} $subtitle-alignment [null] - The horizontal alignment to use for the subtitle.\n/// @param {Color} $subtitle-text-color [null] - Sets the color of the chart subtitle.\n/// @param {String} $subtitle-text-style [null] - Sets the CSS font property of the chart subtitle.\n/// @param {Number} $thickness [null] - Sets the thickness for all series in a chart.\n/// @param {List} $trend-line-brushes [series] - Defines the palette of brushes used for coloring trend lines in a chart.\n/// @param {Number} $trend-line-thickness [null] - Sets the thickness of the trend lines in a chart of type point, line, spline or bubble.\n/// @param {List} $x-axis-label-margin [null] - Sets the margin (top, right, bottom, left) of labels on the X-axis.\n/// @param {Color} $x-axis-label-text-color [null] - Sets the color of labels on the X-axis.\n/// @param {String} $x-axis-label-text-style [null] - Sets the CSS font property for labels on X-axis.\n/// @param {String} $x-axis-label-vertical-alignment [null] - Sets the vertical alignment of X-axis labels.\n/// @param {Color} $x-axis-major-stroke [null] - Sets the color to apply to major gridlines along the X-axis.\n/// @param {Number} $x-axis-major-stroke-thickness [null] - Sets the thickness to apply to major gridlines along the X-axis.\n/// @param {Color} $x-axis-minor-stroke [null] - Sets the color to apply to minor gridlines along the X-axis.\n/// @param {Number} $x-axis-minor-stroke-thickness [null] - Sets the thickness to apply to minor gridlines along the X-axis.\n/// @param {Color} $x-axis-strip [null] - Sets the color to apply to stripes along the X-axis.\n/// @param {Color} $x-axis-stroke [null] - Sets the color to apply to the X-axis line.\n/// @param {Number} $x-axis-stroke-thickness [null] - Sets the thickness to apply to the X-axis line.\n/// @param {Number} $x-axis-tick-length [null] - Sets the length of tickmarks along the X-axis.\n/// @param {Color} $x-axis-tick-stroke [null] - Sets the color to apply to tickmarks along the X-axis.\n/// @param {Number} $x-axis-tick-stroke-thickness [null] - Sets the thickness to apply to tickmarks along the X-axis.\n/// @param {String} $x-axis-title-alignment [null] - Sets the horizontal alignment of the X-axis title.\n/// @param {List} $x-axis-title-margin [null] - Sets the margin (top, right, bottom, left) of a title on the X-axis.\n/// @param {Color} $x-axis-title-text-color [null] - Sets the color of the title on the X-axis.\n/// @param {String} $x-axis-title-text-style [null] - Sets the CSS font property for the title on the X-axis.\n/// @param {List} $y-axis-label-margin [null] - Sets the margin (top, right, bottom, left) of labels on the Y-axis.\n/// @param {Color} $y-axis-label-text-color [null] - Sets the color of labels on the Y-axis.\n/// @param {String} $y-axis-label-text-style [null] - Sets the CSS font property for labels on Y-axis.\n/// @param {String} $y-axis-label-vertical-alignment [null] - Sets the vertical alignment of Y-axis labels.\n/// @param {Color} $y-axis-major-stroke [null] - Sets the color to apply to major gridlines along the y-axis.\n/// @param {Number} $y-axis-major-stroke-thickness [null] - Sets the thickness to apply to major gridlines along the Y-axis.\n/// @param {Color} $y-axis-minor-stroke [null] - Sets the color to apply to minor gridlines along the Y-axis.\n/// @param {Number} $y-axis-minor-stroke-thickness [null] - Sets the thickness to apply to minor gridlines along the Y-axis.\n/// @param {Color} $y-axis-strip [null] - Sets the color to apply to stripes along the Y-axis.\n/// @param {Color} $y-axis-stroke [null] - Sets the color to apply to the Y-axis line.\n/// @param {Number} $y-axis-stroke-thickness [null] - Sets the thickness to apply to the Y-axis line.\n/// @param {String} $y-axis-title-alignment [null] - Sets the horizontal alignment of the Y-axis title.\n/// @param {List} $y-axis-title-margin [null] - Sets the margin (top, right, bottom, left) of a title on the Y-axis.\n/// @param {Color} $y-axis-title-text-color [null] - Sets the color of a title on the Y-axis.\n/// @param {String} $y-axis-title-text-style [null] - Sets the CSS font property for the title on the Y-axis.\n/// @param {Number} $y-axis-tick-length [null] - Sets the length of tickmarks along the Y-axis.\n/// @param {Color} $y-axis-tick-stroke [null] - Sets the color to apply to tickmarks along the Y-axis.\n/// @param {Number} $y-axis-tick-stroke-thickness [null] - Sets the thickness to apply to tickmarks along the Y-axis.\n/// @requires $light-material-schema\n/// @requires extend\n///\n/// @example scss\n///   $custom-chart-theme: category-chart-theme($brushes: (red, green, blue));\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($custom-chart-theme);\n@function category-chart-theme(\n    $schema: $light-material-schema,\n    $target: 'angular',\n\n    $margin: null,\n    $brushes: null,\n    $marker-brushes: null,\n    $negative-brushes: null,\n    $outlines: null,\n    $marker-outlines: null,\n    $negative-outlines: null,\n    $title-margin: null,\n    $title-alignment: null,\n    $title-text-color: null,\n    $title-text-style: null,\n    $subtitle-margin: null,\n    $subtitle-alignment: null,\n    $subtitle-text-color: null,\n    $subtitle-text-style: null,\n    $thickness: null,\n    $trend-line-brushes: null,\n    $trend-line-thickness: null,\n    $x-axis-label-margin: null,\n    $x-axis-label-text-color: null,\n    $x-axis-label-text-style: null,\n    $x-axis-label-vertical-alignment: null,\n    $x-axis-major-stroke: null,\n    $x-axis-major-stroke-thickness: null,\n    $x-axis-minor-stroke: null,\n    $x-axis-minor-stroke-thickness: null,\n    $x-axis-strip: null,\n    $x-axis-stroke: null,\n    $x-axis-stroke-thickness: null,\n    $x-axis-tick-length: null,\n    $x-axis-tick-stroke: null,\n    $x-axis-tick-stroke-thickness: null,\n    $x-axis-title-alignment: null,\n    $x-axis-title-margin: null,\n    $x-axis-title-text-color: null,\n    $x-axis-title-text-style: null,\n    $y-axis-label-margin: null,\n    $y-axis-label-text-color: null,\n    $y-axis-label-text-style: null,\n    $y-axis-label-vertical-alignment: null,\n    $y-axis-major-stroke: null,\n    $y-axis-major-stroke-thickness: null,\n    $y-axis-minor-stroke: null,\n    $y-axis-minor-stroke-thickness: null,\n    $y-axis-strip: null,\n    $y-axis-stroke: null,\n    $y-axis-stroke-thickness: null,\n    $y-axis-title-alignment: null,\n    $y-axis-title-margin: null,\n    $y-axis-title-text-color: null,\n    $y-axis-title-text-style: null,\n    $y-axis-tick-length: null,\n    $y-axis-tick-stroke: null,\n    $y-axis-tick-stroke-thickness: null\n) {\n    $name: 'category-chart';\n    $selector: map.get(\n        (\n            'angular': 'igx-category-chart',\n            'webc': 'igc-category-chart',\n            'blazor': 'igb-category-chart',\n        ),\n        $target\n    );\n    $chart-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $chart-schema: map.get($schema, $name);\n    } @else {\n        $chart-schema: $schema;\n    }\n\n    $theme: digest-schema($chart-schema);\n    $margin-default: map.get($theme, 'margin');\n    $title-margin-default: map.get($theme, 'title-margin');\n    $subtitle-margin-default: map.get($theme, 'subtitle-margin');\n    $x-axis-label-margin-default: map.get($theme, 'x-axis-label-margin');\n    $x-axis-title-margin-default: map.get($theme, 'x-axis-title-margin');\n    $y-axis-label-margin-default: map.get($theme, 'y-axis-label-margin');\n    $y-axis-title-margin-default: map.get($theme, 'y-axis-title-margin');\n\n    @if not($margin) {\n        $margin: $margin-default;\n    } @else {\n        $margin: expand-shorthand(($margin));\n    }\n\n    @if not($title-margin) {\n        $title-margin: $title-margin-default;\n    } @else {\n        $title-margin: map-keys-prefix(expand-shorthand(($title-margin)), 'title');\n    }\n\n    @if not($subtitle-margin) {\n        $subtitle-margin: $subtitle-margin-default;\n    } @else {\n        $subtitle-margin: map-keys-prefix(expand-shorthand(($subtitle-margin)), 'subtitle');\n    }\n\n    @if not($x-axis-label-margin) {\n        $x-axis-label-margin: $x-axis-label-margin-default;\n    } @else {\n        $x-axis-label-margin: map-keys-prefix(expand-shorthand(($x-axis-label-margin)), 'x-axis-label');\n    }\n\n    @if not($x-axis-title-margin) {\n        $x-axis-title-margin: $x-axis-title-margin-default;\n    } @else {\n        $x-axis-title-margin: map-keys-prefix(expand-shorthand(($x-axis-title-margin)), 'x-axis-title');\n    }\n\n    @if not($y-axis-label-margin) {\n        $y-axis-label-margin: $y-axis-label-margin-default;\n    } @else {\n        $y-axis-label-margin: map-keys-prefix(expand-shorthand(($y-axis-label-margin)), 'y-axis-label');\n    }\n\n    @if not($y-axis-title-margin) {\n        $y-axis-title-margin: $y-axis-title-margin-default;\n    } @else {\n        $y-axis-title-margin: map-keys-prefix(expand-shorthand(($y-axis-title-margin)), 'y-axis-title');\n    }\n\n    @return extend(\n        $theme,\n        $margin,\n        $title-margin,\n        $subtitle-margin,\n        $x-axis-label-margin,\n        $x-axis-title-margin,\n        $y-axis-label-margin,\n        $y-axis-title-margin,\n        (\n            name: $name,\n            selector: $selector,\n            brushes: $brushes,\n            marker-brushes: $marker-brushes,\n            negative-brushes: $negative-brushes,\n            outlines: $outlines,\n            marker-outlines: $marker-outlines,\n            negative-outlines: $negative-outlines,\n            title-alignment: $title-alignment,\n            title-text-color: $title-text-color,\n            title-text-style: $title-text-style,\n            subtitle-alignment: $subtitle-alignment,\n            subtitle-text-color: $subtitle-text-color,\n            subtitle-text-style: $subtitle-text-style,\n            thickness: $thickness,\n            trend-line-brushes: $trend-line-brushes,\n            trend-line-thickness: $trend-line-thickness,\n            x-axis-label-text-color: $x-axis-label-text-color,\n            x-axis-label-text-style: $x-axis-label-text-style,\n            x-axis-label-vertical-alignment: $x-axis-label-vertical-alignment,\n            x-axis-major-stroke: $x-axis-major-stroke,\n            x-axis-major-stroke-thickness: $x-axis-major-stroke-thickness,\n            x-axis-minor-stroke: $x-axis-minor-stroke,\n            x-axis-minor-stroke-thickness: $x-axis-minor-stroke-thickness,\n            x-axis-strip: $x-axis-strip,\n            x-axis-stroke: $x-axis-stroke,\n            x-axis-stroke-thickness: $x-axis-stroke-thickness,\n            x-axis-tick-length: $x-axis-tick-length,\n            x-axis-tick-stroke: $x-axis-tick-stroke,\n            x-axis-tick-stroke-thickness: $x-axis-tick-stroke-thickness,\n            x-axis-title-alignment: $x-axis-title-alignment,\n            x-axis-title-text-color: $x-axis-title-text-color,\n            x-axis-title-text-style: $x-axis-title-text-style,\n            y-axis-label-text-color: $y-axis-label-text-color,\n            y-axis-label-text-style: $y-axis-label-text-style,\n            y-axis-label-vertical-alignment: $y-axis-label-vertical-alignment,\n            y-axis-major-stroke: $y-axis-major-stroke,\n            y-axis-major-stroke-thickness: $y-axis-major-stroke-thickness,\n            y-axis-minor-stroke: $y-axis-minor-stroke,\n            y-axis-minor-stroke-thickness: $y-axis-minor-stroke-thickness,\n            y-axis-strip: $y-axis-strip,\n            y-axis-stroke: $y-axis-stroke,\n            y-axis-stroke-thickness: $y-axis-stroke-thickness,\n            y-axis-title-alignment: $y-axis-title-alignment,\n            y-axis-title-text-color: $y-axis-title-text-color,\n            y-axis-title-text-style: $y-axis-title-text-style,\n            y-axis-tick-length: $y-axis-tick-length,\n            y-axis-tick-stroke: $y-axis-tick-stroke,\n            y-axis-tick-stroke-thickness: $y-axis-tick-stroke-thickness,\n        )\n    );\n}\n\n/// Adds typography styles for the category-chart component.\n/// Uses the 'h6', 'subtitle-1' and 'body-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by type-scale.\n/// @param {Map} $categories [(\n/// 'title': 'h6',\n/// 'subtitle': 'subtitle-1,\n/// 'x-axis-label-text-style': 'body-2',\n/// 'y-axis-label-text-style': 'body-2',\n/// 'x-axis-title-text-style': 'body-2',\n/// 'y-axis-title-text-style': 'body-2',\n/// )] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} type-style\n@mixin category-chart-typography(\n    $type-scale,\n    $categories: (\n        'title': 'h6',\n        'subtitle': 'subtitle-1',\n        'x-axis-label-text-style': 'body-2',\n        'x-axis-title-text-style': 'body-2',\n        'y-axis-label-text-style': 'body-2',\n        'y-axis-title-text-style': 'body-2'\n    ),\n    $target: 'angular'\n) {\n    $name: 'category-chart';\n    $selector: map.get(\n        (\n            'angular': 'igx-category-chart',\n            'webc': 'igc-category-chart',\n            'blazor': 'igb-category-chart',\n        ),\n        $target\n    );\n    $title: map.get($categories, 'title');\n    $subtitle: map.get($categories, 'subtitle');\n    $x-axis-label-text-style: map.get($categories, 'x-axis-label-text-style');\n    $x-axis-title-text-style: map.get($categories, 'x-axis-title-text-style');\n    $y-axis-label-text-style: map.get($categories, 'y-axis-label-text-style');\n    $y-axis-title-text-style: map.get($categories, 'y-axis-title-text-style');\n    $title-styles: type-scale-category($type-scale, $title);\n    $subtitle-styles: type-scale-category($type-scale, $subtitle);\n    $x-axis-label-styles: type-scale-category($type-scale, $x-axis-label-text-style);\n    $x-axis-title-styles: type-scale-category($type-scale, $x-axis-title-text-style);\n    $y-axis-label-styles: type-scale-category($type-scale, $y-axis-label-text-style);\n    $y-axis-title-styles: type-scale-category($type-scale, $y-axis-title-text-style);\n\n    #{$selector} {\n        @include font-var('title-text-style', $title-styles, $name);\n        @include font-var('subtitle-text-style', $subtitle-styles, $name);\n        @include font-var('x-axis-label-text-style', $x-axis-label-styles, $name);\n        @include font-var('x-axis-title-text-style', $x-axis-title-styles, $name);\n        @include font-var('y-axis-label-text-style', $y-axis-label-styles, $name);\n        @include font-var('y-axis-title-text-style', $y-axis-title-styles, $name);\n    }\n}\n","/* stylelint-disable max-line-length */\n////\n/// @package theming\n/// @group schemas\n/// @access public\n/// @author <a href=\"https://github.com/SisIvanova\" target=\"_blank\">Silvia Ivanova</a>\n////\n\n/// Generates a material category chart schema.\n/// @type {Map}\n/// @property {List} margin [null] - Sets the margin (top, right, bottom, left) of the chart content.\n/// @property {List} brushes [series] - Defines the palette from which automatically assigned series brushes colors are selected.\n/// @property {List} marker-brushes [series]- Defines the palette from which automatically assigned series marker brushes colors are selected.\n/// @property {List} negative-brushes [hsl(347, 82%, 64%)] - Defines the palette used for coloring negative items in a chart type with contextual coloring, such as Waterfall.\n/// @property {List} negative-outlines [hsl(347, 82%, 64%)] - Defines the brushes used for drawing negative elements in a chart type with contextual coloring, such as Waterfall.\n/// @property {List} outlines [series] - Defines the palette from which automatically assigned series outline colors are selected.\n/// @property {List} marker-outlines [series] - Defines the palette from which automatically assigned series marker outline colors are selected.\n/// @property {String} title-alignment [null] - The horizontal alignment to use for the title.\n/// @property {List} title-margin [null] - Sets the margin (top, right, bottom, left) of the chart title.\n/// @property {Color} title-text-color [color: ('gray', 900)] - Sets the color of the chart title.\n/// @property {String} title-text-style [null] - Sets the CSS font property of the chart title.\n/// @property {List} subtitle-margin [null] - Sets the margins (top, right, bottom, left) of the chart subtitle.\n/// @property {String} subtitle-alignment [null] - The horizontal alignment to use for the subtitle.\n/// @property {Color} subtitle-text-color [color: ('gray', 700)] - Sets the color of the chart subtitle.\n/// @property {String} subtitle-text-style [null] - Sets the CSS font property of the chart subtitle.\n/// @property {Number} thickness [null] - Sets the thickness for all series in a chart.\n/// @property {List} trend-line-brushes [series] - Defines the palette of brushes used for coloring trend lines in a chart.\n/// @property {Number} trend-line-thickness [null] - Sets the thickness of the trend lines in a chart of type point, line, spline or bubble.\n/// @property {List} x-axis-label-margin [null] - Sets the margin (top, right, bottom, left) of labels on the X-axis.\n/// @property {Color} x-axis-label-text-color [color: ('gray', 700)] - Sets the color of labels on the X-axis.\n/// @property {String} x-axis-label-text-style [null] - Sets the CSS font property for labels on X-axis.\n/// @property {String} x-axis-label-vertical-alignment [null] - Sets the vertical alignment of X-axis labels.\n/// @property {Color} x-axis-major-stroke [null] - Sets the color to apply to major gridlines along the X-axis.\n/// @property {Number} x-axis-major-stroke-thickness [null] - Sets the thickness to apply to major gridlines along the X-axis.\n/// @property {Color} x-axis-minor-stroke [null] - Sets the color to apply to minor gridlines along the X-axis.\n/// @property {Number} x-axis-minor-stroke-thickness [null] - Sets the thickness to apply to minor gridlines along the X-axis.\n/// @property {Color} x-axis-strip [null] - Sets the color to apply to stripes along the X-axis.\n/// @property {Color} x-axis-stroke [color: ('gray', 500)] - Sets the color to apply to the X-axis line.\n/// @property {Number} x-axis-stroke-thickness [null] - Sets the thickness to apply to the X-axis line.\n/// @property {Number} x-axis-tick-length [null] - Sets the length of tickmarks along the X-axis.\n/// @property {Color} x-axis-tick-stroke [color: ('gray', 500)] - Sets the color to apply to tickmarks along the X-axis.\n/// @property {Number} x-axis-tick-stroke-thickness [null] - Sets the thickness to apply to tickmarks along the X-axis.\n/// @property {String} x-axis-title-alignment [null] - Sets the horizontal alignment of the X-axis title.\n/// @property {List} x-axis-title-margin [null] - Sets the margin (top, right, bottom, left) of a title on the X-axis.\n/// @property {Color} x-axis-title-text-color [color: ('gray', 900)] - Sets the color of the title on the X-axis.\n/// @property {String} x-axis-title-text-style [null] - Sets the CSS font property for the title on the X-axis.\n/// @property {List} y-axis-label-margin [null] - Sets the margin (top, right, bottom, left) of labels on the Y-axis.\n/// @property {Color} y-axis-label-text-color [color: ('gray', 700)] - Sets the color of labels on the Y-axis.\n/// @property {String} y-axis-label-text-style [null] - Sets the CSS font property for labels on Y-axis.\n/// @property {String} y-axis-label-vertical-alignment [null] - Sets the vertical alignment of Y-axis labels.\n/// @property {Color} y-axis-major-stroke [color: ('gray', 300)] - Sets the color to apply to major gridlines along the y-axis.\n/// @property {Number} y-axis-major-stroke-thickness [null] - Sets the thickness to apply to major gridlines along the Y-axis.\n/// @property {Color} y-axis-minor-stroke [null] - Sets the color to apply to minor gridlines along the Y-axis.\n/// @property {Number} y-axis-minor-stroke-thickness [null] - Sets the thickness to apply to minor gridlines along the Y-axis.\n/// @property {Color} y-axis-strip [null] - Sets the color to apply to stripes along the Y-axis.\n/// @property {Color} y-axis-stroke [null] - Sets the color to apply to the Y-axis line.\n/// @property {Number} y-axis-stroke-thickness [null] - Sets the thickness to apply to the Y-axis line.\n/// @property {String} y-axis-title-alignment [null] - Sets the horizontal alignment of the Y-axis title.\n/// @property {List} y-axis-title-margin [null] - Sets the margin (top, right, bottom, left) of a title on the Y-axis.\n/// @property {Color} y-axis-title-text-color [color: ('gray', 900)] - Sets the color of a title on the Y-axis.\n/// @property {String} y-axis-title-text-style [null] - Sets the CSS font property for the title on the Y-axis.\n/// @property {Number} y-axis-tick-length [null] - Sets the length of tickmarks along the Y-axis.\n/// @property {Color} y-axis-tick-stroke [color: ('gray', 500)] - Sets the color to apply to tickmarks along the Y-axis.\n/// @property {Number} y-axis-tick-stroke-thickness [null] - Sets the thickness to apply to tickmarks along the Y-axis.\n$material-category-chart: (\n    'margin': (\n        expand-shorthand: (\n            null,\n        ),\n    ),\n    'brushes': series,\n    'marker-brushes': series,\n    'negative-brushes': hsl(347deg 82% 64%),\n    'outlines': series,\n    'marker-outlines': series,\n    'negative-outlines': hsl(347deg 82% 64%),\n    'title-alignment': null,\n    'title-margin': (\n        expand-shorthand: (\n            null,\n        ),\n        map-keys-prefix: 'title',\n    ),\n    'title-text-color': (\n        color: (\n            'gray',\n            900,\n        ),\n    ),\n    'title-text-style': null,\n    'subtitle-margin': (\n        expand-shorthand: (\n            null,\n        ),\n        map-keys-prefix: 'subtitle',\n    ),\n    'subtitle-alignment': null,\n    'subtitle-text-color': (\n        color: (\n            'gray',\n            700,\n        ),\n    ),\n    'subtitle-text-style': null,\n    'thickness': null,\n    'trend-line-brushes': series,\n    'trend-line-thickness': null,\n    'x-axis-label-margin': (\n        expand-shorthand: (\n            null,\n        ),\n        map-keys-prefix: 'x-axis-label',\n    ),\n    'x-axis-label-text-color': (\n        color: (\n            'gray',\n            700,\n        ),\n    ),\n    'x-axis-label-text-style': null,\n    'x-axis-label-vertical-alignment': null,\n    'x-axis-major-stroke': null,\n    'x-axis-major-stroke-thickness': null,\n    'x-axis-minor-stroke': null,\n    'x-axis-minor-stroke-thickness': null,\n    'x-axis-strip': null,\n    'x-axis-stroke': (\n        color: (\n            'gray',\n            500,\n        ),\n    ),\n    'x-axis-stroke-thickness': null,\n    'x-axis-tick-length': null,\n    'x-axis-tick-stroke': (\n        color: (\n            'gray',\n            500,\n        ),\n    ),\n    'x-axis-tick-stroke-thickness': null,\n    'x-axis-title-alignment': null,\n    'x-axis-title-margin': (\n        expand-shorthand: (\n            null,\n        ),\n        map-keys-prefix: 'x-axis-title',\n    ),\n    'x-axis-title-text-color': (\n        color: (\n            'gray',\n            900,\n        ),\n    ),\n    'x-axis-title-text-style': null,\n    'y-axis-label-margin': (\n        expand-shorthand: (\n            null,\n        ),\n        map-keys-prefix: 'y-axis-label',\n    ),\n    'y-axis-label-text-color': (\n        color: (\n            'gray',\n            700,\n        ),\n    ),\n    'y-axis-label-text-style': null,\n    'y-axis-label-vertical-alignment': null,\n    'y-axis-major-stroke': (\n        color: (\n            'gray',\n            300,\n        ),\n    ),\n    'y-axis-major-stroke-thickness': null,\n    'y-axis-minor-stroke': null,\n    'y-axis-minor-stroke-thickness': null,\n    'y-axis-strip': null,\n    'y-axis-stroke': null,\n    'y-axis-stroke-thickness': null,\n    'y-axis-title-alignment': null,\n    'y-axis-title-margin': (\n        expand-shorthand: (\n            null,\n        ),\n        map-keys-prefix: 'y-axis-title',\n    ),\n    'y-axis-title-text-color': (\n        color: (\n            'gray',\n            900,\n        ),\n    ),\n    'y-axis-title-text-style': null,\n    'y-axis-tick-length': null,\n    'y-axis-tick-stroke': (\n        color: (\n            'gray',\n            500,\n        ),\n    ),\n    'y-axis-tick-stroke-thickness': null,\n);\n\n/// Generates a fluent category-chart schema.\n/// @type {Map}\n/// @requires {function} extend\n/// @requires {Map} $material-category-chart\n$fluent-category-chart: $material-category-chart;\n\n/// Generates a bootstrap category-chart schema.\n/// @type {Map}\n/// @requires {function} extend\n/// @requires {Map} $material-category-chart\n$bootstrap-category-chart: $material-category-chart;\n\n/// Generates an indigo category-chart schema.\n/// @type {Map}\n/// @requires {function} extend\n/// @requires {Map} $material-category-chart\n$indigo-category-chart: $material-category-chart;\n","/* stylelint-disable max-line-length */\n////\n/// @package theming\n/// @group schemas\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// Generates a material base data chart schema.\n/// @type {Map}\n/// @property {List} margin [null] - Sets the margin (top, right, bottom, left) of the chart content.\n/// @property {Color} title-text-color [color: ('gray', 900)] - Sets the color of the chart title.\n/// @property {List} title-margin [null] - Sets the margin (top, right, bottom, left) of the chart title.\n/// @property {Color} subtitle-text-color [color: ('gray', 600)] - Sets the color of the chart subtitle.\n/// @property {List} subtitle-margin [null] - Sets the margins (top, right, bottom, left) of the chart subtitle.\n/// @property {List} brushes [series] - Defines the palette from which automatically assigned series colors are selected.\n/// @property {List} marker-brushes [series] - Defines the palette from which automatically assigned marker brushes are selected.\n/// @property {List} outlines [series] - Defines the palette from which automatically assigned series outline colors are selected.\n/// @property {List} marker-outlines [series] - Defines the palette from which automatically assigned marker outlines are selected.\n/// @property {Color} plot-area-background [color: ('surface', 500)] - Sets the brush used as the background for the current Chart object's plot area.\n/// @property {String} title-horizontal-alignment [null] - The horizontal alignment to use for the title.\n/// @property {String} subtitle-horizontal-alignment [null] - The horizontal alignment to use for the subtitle.\n$material-data-chart: (\n    'margin': null,\n    'title-text-color': (\n        color: (\n            'gray',\n            900,\n        ),\n    ),\n    'title-margin': null,\n    'subtitle-text-color': (\n        color: (\n            'gray',\n            600,\n        ),\n    ),\n    'subtitle-margin': null,\n    'brushes': series,\n    'marker-brushes': series,\n    'outlines': series,\n    'marker-outlines': series,\n    'plot-area-background': (\n        color: (\n            'surface',\n            500,\n        ),\n    ),\n    'title-horizontal-alignment': null,\n    'subtitle-horizontal-alignment': null,\n);\n\n/// Generates a fluent data-chart schema.\n/// @type {Map}\n/// @requires {function} extend\n/// @requires {Map} $material-data-chart\n$fluent-data-chart: $material-data-chart;\n\n/// Generates a bootstrap data-chart schema.\n/// @type {Map}\n/// @requires {function} extend\n/// @requires {Map} $material-data-chart\n$bootstrap-data-chart: $material-data-chart;\n\n/// Generates an indigo data-chart schema.\n/// @type {Map}\n/// @requires {function} extend\n/// @requires {Map} $material-data-chart\n$indigo-data-chart: $material-data-chart;\n","/* stylelint-disable max-line-length */\n////\n/// @package theming\n/// @group schemas\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// Generates a material base doughnut chart schema.\n/// @type {Map}\n/// @property {List} brushes [series] - Defines the palette from which automatically assigned series colors are selected.\n/// @property {List} outlines [series] - Defines the palette from which automatically assigned series outline colors are selected.\n/// @property {Color} others-category-fill [null] - Sets the fill color for others category.\n/// @property {Number} others-category-opacity [null] - Sets the opacity for others category.\n/// @property {Color} others-category-stroke [null] - Sets the others category stroke color.\n/// @property {Number} others-category-stroke-thickness [null] - Sets the others category stroke thickness.\n/// @property {Color} selected-slice-fill [null] - Sets the fill color of the selected slice.\n/// @property {Number} selected-slice-opacity [null] - Sets the opacity of the selected slice.\n/// @property {Color} selected-slice-stroke [null] - Sets the stroke color of the selected slice.\n/// @property {Number} selected-slice-stroke-thickness [null] - Sets the stroke thickness of the selected slice.\n$material-doughnut-chart: (\n    'brushes': series,\n    'outlines': series,\n    'others-category-fill': null,\n    'others-category-opacity': null,\n    'others-category-stroke': null,\n    'others-category-stroke-thickness': null,\n    'selected-slice-fill': null,\n    'selected-slice-opacity': null,\n    'selected-slice-stroke': null,\n    'selected-slice-stroke-thickness': null,\n);\n\n/// Generates a fluent doughnut-chart schema.\n/// @type {Map}\n/// @requires {function} extend\n/// @requires {Map} $material-doughnut-chart\n$fluent-doughnut-chart: $material-doughnut-chart;\n\n/// Generates a bootstrap doughnut-chart schema.\n/// @type {Map}\n/// @requires {function} extend\n/// @requires {Map} $material-doughnut-chart\n$bootstrap-doughnut-chart: $material-doughnut-chart;\n\n/// Generates an indigo doughnut-chart schema.\n/// @type {Map}\n/// @requires {function} extend\n/// @requires {Map} $material-doughnut-chart\n$indigo-doughnut-chart: $material-doughnut-chart;\n","/* stylelint-disable max-line-length */\n////\n/// @package theming\n/// @group schemas\n/// @access public\n/// @author <a href=\"https://github.com/didimmova\" target=\"_blank\">Dilyana Dimova</a>\n////\n\n/// Generates a material base chart schema.\n/// @type {Map}\n/// @prop {List} margin [null] - Sets the margin (top, right, bottom, left) of the chart content.\n/// @prop {String} title-alignment [null] - The horizontal alignment to use for the title.\n/// @prop {Color} title-text-color [null] - Sets the color of the chart title.\n/// @prop {List} title-margin [null] - Sets the margin (top, right, bottom, left) of the chart title.\n/// @prop {Color} subtitle-text-color [null] - Sets the color of the chart subtitle.\n/// @prop {List} subtitle-margin [null] - Sets the margins (top, right, bottom, left) of the chart subtitle.\n/// @prop {String} subtitle-alignment [null] - Gets or sets horizontal alignment which determines the subtitle position, relative to the left and right edges of the control.\n/// @prop {List} brushes [series] - Defines the palette from which automatically assigned series brushes colors are selected.\n/// @prop {List} marker-brushes [series]- Defines the palette from which automatically assigned series marker brushes colors are selected.\n/// @prop {List} negative-brushes [series] - Defines the palette used for coloring negative items in a chart type with contextual coloring, such as Waterfall.\n/// @prop {List} outlines [series] - Defines the palette from which automatically assigned series outline colors are selected.\n/// @prop {List} marker-outlines [series] - Defines the palette from which automatically assigned series marker outline colors are selected.\n/// @prop {List} negative-outlines [series] - Defines the brushes used for drawing negative elements in a chart type with contextual coloring, such as Waterfall.\n/// @prop {List} indicator-brushes [series] - Defines the brushes used for financial indicators.\n/// @prop {List} indicator-negative-brushes [series] - Defines the brushes used for negative elements in financial indicators.\n/// @prop {Number} indicator-thickness [null]- Defines the palette from which automatically assigned series marker brushes colors are selected.\n/// @prop {Color} plot-area-background [null]- Gets or sets the brush used as the background for the current Chart object's plot area.\n/// @prop {Number} thickness [null] - Sets the thickness for all series in a chart.\n/// @prop {Number} toolbar-height [null] - Sets the height of the tooolbar.\n/// @prop {List} trend-line-brushes [series] - Defines the palette of brushes used for coloring trend lines in a chart.\n/// @prop {Number} trend-line-thickness [null] - Sets the thickness of the trend lines in a chart of type point, line, spline or bubble.\n/// @prop {List} volume-brushes [series]- Defines the brushes to use for filling volume series in the volume pane.\n/// @prop {List} volume-outlines [series] - Defines the brushes to use for outlining volume series in the volume pane.\n/// @prop {Number} volume-thickness [null]- Defines the outline thickness of volume series in the volume pane.\n/// @prop {List} x-axis-label-margin [null] - Sets the margin (top, right, bottom, left) of labels on the X-axis.\n/// @prop {Color} x-axis-label-text-color [null] - Sets the color of labels on the X-axis.\n/// @prop {String} x-axis-label-vertical-alignment [null] - Sets the vertical alignment of X-axis labels.\n/// @prop {Color} x-axis-major-stroke [null] - Sets the color to apply to major gridlines along the X-axis.\n/// @prop {Number} x-axis-major-stroke-thickness [null] - Sets the thickness to apply to major gridlines along the X-axis.\n/// @prop {Color} x-axis-minor-stroke [null] - Sets the color to apply to minor gridlines along the X-axis.\n/// @prop {Number} x-axis-minor-stroke-thickness [null] - Sets the thickness to apply to minor gridlines along the X-axis.\n/// @prop {Color} x-axis-strip [null] - Sets the color to apply to stripes along the X-axis.\n/// @prop {Color} x-axis-stroke [null] - Sets the color to apply to the X-axis line.\n/// @prop {Number} x-axis-stroke-thickness [null] - Sets the thickness to apply to the X-axis line.\n/// @prop {Number} x-axis-tick-length [null] - Sets the length of tickmarks along the X-axis.\n/// @prop {Color} x-axis-tick-stroke [null] - Sets the color to apply to tickmarks along the X-axis.\n/// @prop {Number} x-axis-tick-stroke-thickness [null] - Sets the thickness to apply to tickmarks along the X-axis.\n/// @prop {String} x-axis-title-alignment [null] - Sets the horizontal alignment of the X-axis title.\n/// @prop {List} x-axis-title-margin [null] - Sets the margin (top, right, bottom, left) of a title on the X-axis.\n/// @prop {Color} x-axis-title-text-color [null] - Sets the color of the title on the X-axis.\n/// @prop {List} y-axis-label-margin [null] - Sets the margin (top, right, bottom, left) of labels on the Y-axis.\n/// @prop {Color} y-axis-label-text-color [null] - Sets the color of labels on the Y-axis.\n/// @prop {String} y-axis-label-vertical-alignment [null] - Sets the vertical alignment of Y-axis labels.\n/// @prop {Color} y-axis-major-stroke [null] - Sets the color to apply to major gridlines along the y-axis.\n/// @prop {Number} y-axis-major-stroke-thickness [null] - Sets the thickness to apply to major gridlines along the Y-axis.\n/// @prop {Color} y-axis-minor-stroke [null] - Sets the color to apply to minor gridlines along the Y-axis.\n/// @prop {Number} y-axis-minor-stroke-thickness [null] - Sets the thickness to apply to minor gridlines along the Y-axis.\n/// @prop {Color} y-axis-strip [null] - Sets the color to apply to stripes along the Y-axis.\n/// @prop {Color} y-axis-stroke [null] - Sets the color to apply to the Y-axis line.\n/// @prop {Number} y-axis-stroke-thickness [null] - Sets the thickness to apply to the Y-axis line.\n/// @prop {String} y-axis-title-alignment [null] - Sets the horizontal alignment of the Y-axis title.\n/// @prop {List} y-axis-title-margin [null] - Sets the margin (top, right, bottom, left) of a title on the Y-axis.\n/// @prop {Color} y-axis-title-text-color [null] - Sets the color of a title on the Y-axis.\n/// @prop {Number} y-axis-tick-length [null] - Sets the length of tickmarks along the Y-axis.\n/// @prop {Color} y-axis-tick-stroke [null] - Sets the color to apply to tickmarks along the Y-axis.\n/// @prop {Number} y-axis-tick-stroke-thickness [null] - Sets the thickness to apply to tickmarks along the Y-axis.\n/// @prop {String} zoom-slider-x-axis-major-stroke [null] - Gets or sets stroke brush of major gridlines on x-axis of the zoom slider pane.\n/// @prop {Number} zoom-slider-x-axis-major-stroke-thickness [null] - Gets or sets thickness of major gridlines on x-axis of the zoom slider pane.\n$material-financial-chart: (\n    'margin': null,\n    'title-alignment': null,\n    'title-text-color': null,\n    'title-margin': null,\n    'subtitle-text-color': null,\n    'subtitle-margin': null,\n    'subtitle-alignment': null,\n    'brushes': series,\n    'outlines': series,\n    'marker-brushes': series,\n    'marker-outlines': series,\n    'plot-area-background': null,\n    'indicator-brushes': series,\n    'indicator-negative-brushes': series,\n    'indicator-thickness': null,\n    'negative-brushes': series,\n    'negative-outlines': series,\n    'overlay-brushes': series,\n    'overlay-outlines': series,\n    'overlay-thickness': series,\n    'thickness': null,\n    'toolbar-height': null,\n    'trend-line-brushes': series,\n    'trend-line-thickness': null,\n    'volume-brushes': series,\n    'volume-outlines': series,\n    'volume-thickness': null,\n    'x-axis-label-margin': null,\n    'x-axis-label-text-color': null,\n    'x-axis-label-vertical-alignment': null,\n    'x-axis-major-stroke': null,\n    'x-axis-major-stroke-thickness': null,\n    'x-axis-minor-stroke': null,\n    'x-axis-minor-stroke-thickness': null,\n    'x-axis-strip': null,\n    'x-axis-stroke': null,\n    'x-axis-stroke-thickness': null,\n    'x-axis-title-alignment': null,\n    'x-axis-title-margin': null,\n    'x-axis-title-text-color': null,\n    'y-axis-label-margin': null,\n    'y-axis-label-text-color': null,\n    'y-axis-label-vertical-alignment': null,\n    'y-axis-major-stroke': null,\n    'y-axis-major-stroke-thickness': null,\n    'y-axis-minor-stroke': null,\n    'y-axis-minor-stroke-thickness': null,\n    'y-axis-strip': null,\n    'y-axis-stroke': null,\n    'y-axis-stroke-thickness': null,\n    'y-axis-title-alignment': null,\n    'y-axis-title-margin': null,\n    'y-axis-title-text-color': null,\n    'zoom-slider-x-axis-major-stroke': null,\n    'zoom-slider-x-axis-major-stroke-thickness': null,\n);\n\n/// Generates a fluent financial-chart schema.\n/// @type {Map}\n/// @requires {Map} $material-financial-chart\n$fluent-financial-chart: $material-financial-chart;\n\n/// Generates a bootstrap financial-chart schema.\n/// @type {Map}\n/// @requires {Map} $material-financial-chart\n$bootstrap-financial-chart: $material-financial-chart;\n\n/// Generates an indigo financial-chart schema.\n/// @type {Map}\n/// @requires {Map} $material-financial-chart\n$indigo-financial-chart: $material-financial-chart;\n","/* stylelint-disable max-line-length */\n////\n/// @package theming\n/// @group schemas\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Generates a material funnel chart schema.\n/// @type {Map}\n/// @property {List} brushes [series] - Defines the palette from which automatically assigned series colors are selected.\n/// @property {List} outlines [series] - Defines the palette from which automatically assigned series outline colors are selected.\n/// @property {String} outer-label-alignment [null] - Sets which side of the chart the outer labels should appear.\n/// @property {Color} outer-label-text-color [null] - Sets the Color used for the outer labels.\n/// @property {String} outer-label-text-style [null] - Sets the text style for outer labels.\n/// @property {Color} outer-label-visibility [null] - Sets whether the outer labels are visible.\n/// @property {Number} outline-thickness [null] - Sets the thickness of outline around slices.\n/// @property {Color} text-color [null] - Sets the Color used for the inner labels.\n/// @property {String} text-style [null] - Sets the text style for inner labels.\n$material-funnel-chart: (\n    'brushes': series,\n    'outlines': series,\n    'outer-label-alignment': null,\n    'outer-label-text-color': null,\n    'outer-label-text-style': null,\n    'outer-label-visibility': null,\n    'outline-thickness': null,\n    'text-color': null,\n    'text-style': null,\n);\n\n/// Generates a fluent funnel-chart schema.\n/// @type {Map}\n/// @requires {function} extend\n/// @requires {Map} $material-funnel-chart\n$fluent-funnel-chart: $material-funnel-chart;\n\n/// Generates a bootstrap funnel-chart schema.\n/// @type {Map}\n/// @requires {function} extend\n/// @requires {Map} $material-funnel-chart\n$bootstrap-funnel-chart: $material-funnel-chart;\n\n/// Generates an indigo funnel-chart schema.\n/// @type {Map}\n/// @requires {function} extend\n/// @requires {Map} $material-funnel-chart\n$indigo-funnel-chart: $material-funnel-chart;\n","/* stylelint-disable max-line-length */\n@use '../../../../utils/map' as *;\n\n////\n/// @package theming\n/// @group schemas\n/// @access public\n/// @author <a href=\"https://github.com/SisIvanova\" target=\"_blank\">Silvia Ivanova</a>\n////\n\n/// Generates a material gauge schema.\n/// @type {Map}\n/// @property {Color} backing-brush [(color: 'surface', darken: 8%)] - Sets the color to use to fill the backing of the linear gauge.\n/// @property {Color} backing-outline [(color: 'surface', darken: 8%)] - Sets the color to use for the outline of the backing.\n/// @property {Number} backing-stroke-thickness [null] - Sets the stroke thickness of the backing outline.\n/// @property {Color} font-brush [(color: 'surface', rgba: .62)] - Sets the color to use for the label font.\n/// @property {Color} minor-tick-brush [(color: 'surface', rgba: .62)] - Sets the color to use for the major tickmarks.\n/// @property {Number} minor-tick-stroke-thickness [null] - Sets the stroke thickness to use when rendering minor ticks.\n/// @property {Color} needle-brush [(color: 'primary')] - Sets the color to use for the needle element.\n/// @property {Color} needle-outline [(color: 'surface')] - Sets the color to use for the outline of needle element.\n/// @property {Number} needle-stroke-thickness [null] - Sets the stroke thickness to use when rendering single actual value element.\n/// @property {List} range-brushes [series] - Sets a collection of colors to be used as the palette for linear gauge ranges.\n/// @property {List} range-outlines [series] - Sets a collection of colors to be used as the palette for linear gauge outlines.\n/// @property {Color} scale-brush [(color: 'surface', darken: 8%)] - Sets the color to use to fill the scale of the linear gauge.\n/// @property {Color} tick-brush [(color: 'surface', rgba: .62)] - Sets the color to use for the major tickmarks.\n/// @property {Number} tick-stroke-thickness [null] - Sets the stroke thickness to use when rendering ticks.\n$material-gauge: (\n    'backing-brush': (\n        color: 'surface',\n    ),\n    'backing-outline': (\n        color: 'surface',\n    ),\n    'backing-stroke-thickness': null,\n    'font-brush': (\n        contrast-color: (\n            'surface',\n            500,\n        ),\n    ),\n    'minor-tick-brush': (\n        contrast-color: (\n            'surface',\n            500,\n        ),\n    ),\n    'minor-tick-stroke-thickness': null,\n    'needle-brush': (\n        color: 'primary',\n    ),\n    'needle-outline': (\n        color: 'surface',\n    ),\n    'needle-stroke-thickness': null,\n    'range-brushes': series,\n    'range-outlines': series,\n    'scale-brush': (\n        color: 'surface',\n    ),\n    'tick-brush': (\n        contrast-color: (\n            'surface',\n            500,\n        ),\n    ),\n    'tick-stroke-thickness': null,\n);\n\n/// Generates a material linear gauge schema.\n/// @type {Map}\n/// @property {Number} needle-breadth [null] - Sets the needle breadth.\n/// @property {Number} needle-inner-base-width [null] - Sets the width of the needle's inner base.\n/// @property {Number} needle-inner-point-width [null] - Sets the width of the needle's inner point.\n/// @property {Number} needle-outer-base-width [null] - Sets the width of the needle's outer base.\n/// @property {Number} needle-outer-point-width [null] - Sets the width of the needle's outer point.\n/// @property {Color} scale-outline [(color: 'surface', darken: 8%)] - Sets the color to use for the outline of the scale.\n/// @property {Number} scale-stroke-thickness [null] - Sets the stroke thickness of the scale outline.\n/// @requires {function} extend\n/// @requires {Map} $material-gauge\n$material-linear-gauge: extend(\n    $material-gauge,\n    (\n        needle-breadth: null,\n        needle-inner-base-width: null,\n        needle-inner-point-width: null,\n        needle-outer-base-width: null,\n        needle-outer-point-width: null,\n        scale-outline: (\n            color: 'surface',\n        ),\n        scale-stroke-thickness: null,\n    )\n);\n\n/// Generates a material radial gauge schema.\n/// @type {Map}\n/// @property {Color} needle-pivot-brush [color: 'primary'] - Sets the color of the needle pivot point.\n/// @property {Color} needle-pivot-outline [color: 'surface'] - Sets the outline color of the needle pivot point.\n/// @requires {function} extend\n/// @requires {Map} $material-gauge\n$material-radial-gauge: extend(\n    $material-gauge,\n    (\n        needle-pivot-brush: (\n            color: 'primary',\n        ),\n        needle-pivot-outline: (\n            color: 'surface',\n        ),\n    )\n);\n\n/// Generates a material fluent gauge schemas.\n/// @type {Map}\n/// @requires {Map} $material-linear-gauge\n$fluent-linear-gauge: $material-linear-gauge;\n\n/// Generates a material fluent gauge schemas.\n/// @type {Map}\n/// @requires {Map} $material-radial-gauge\n$fluent-radial-gauge: $material-radial-gauge;\n\n/// Generates a material bootstrap gauge schemas.\n/// @type {Map}\n/// @requires {Map} $material-linear-gauge\n$bootstrap-linear-gauge: $material-linear-gauge;\n\n/// Generates a material bootstrap gauge schemas.\n/// @type {Map}\n/// @requires {Map} $material-radial-gauge\n$bootstrap-radial-gauge: $material-radial-gauge;\n\n/// Generates a material indigo gauge schemas.\n/// @type {Map}\n/// @requires {Map} $material-linear-gauge\n$indigo-linear-gauge: $material-linear-gauge;\n\n/// Generates a material indigo gauge schemas.\n/// @type {Map}\n/// @requires {Map} $material-radial-gauge\n$indigo-radial-gauge: $material-radial-gauge;\n","/* stylelint-disable max-line-length */\n\n////\n/// @package theming\n/// @group schemas\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// Generates a material geo map schema.\n/// @type {Map}\n/// @prop {String} plot-area-background [null] - Gets or sets the brush used as the background for the current Map object's plot area.\n$material-geo-map: (\n    'plot-area-background': (\n        color: 'surface',\n    ),\n);\n\n/// Generates a fluent geo map schema.\n/// @type {Map}\n/// @requires {function} extend\n/// @requires {Map} $material-geo-map\n$fluent-geo-map: $material-geo-map;\n\n/// Generates a bootstrap geo map schema.\n/// @type {Map}\n/// @requires {function} extend\n/// @requires {Map} $material-geo-map\n$bootstrap-geo-map: $material-geo-map;\n\n/// Generates an indigo geo map schema.\n/// @type {Map}\n/// @requires {function} extend\n/// @requires {Map} $material-geo-map\n$indigo-geo-map: $material-geo-map;\n","/* stylelint-disable max-line-length */\n\n////\n/// @package theming\n/// @group schemas\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// Generates a material graph schema.\n/// @type {Map}\n/// @prop {Color} backing-brush [(color: 'surface', darken: 5%)] - Sets the brush to use to fill the backing of the bullet graph.\n/// @prop {Color} backing-outline [(color: 'surface', darken: 8%)] - Sets the brush to use for the outline of the backing.\n/// @prop {Number} backing-stroke-thickness [null] - Sets the stroke thickness of the backing outline.\n/// @prop {Color} font-brush [(contrast-color: 'surface')] - Sets the brush to use for the label font.\n/// @prop {Color} minor-tick-brush [(contrast-color: 'surface')] - Sets the brush to use for the minor tickmarks.\n/// @prop {Number} minor-tick-thickness [null] - Stroke thickness to use when rendering minor ticks.\n/// @prop {List} range-brushes [series] - Sets a collection of brushes to be used as the palette for bullet graph ranges.\n/// @prop {List} range-outlines [series] - Sets a collection of brushes to be used as the palette for bullet graph outlines.\n/// @prop {Color} scale-background-brush [(color: 'primary')] - Sets the background brush for the scale.\n/// @prop {Color} scale-background-outline [(color: 'surface')] - Sets the background outline for the scale.\n/// @prop {Number} scale-background-thickness [null] - Sets the background outline thickness for the scale.\n/// @prop {Number} target-value-breadth [null] - Sets the breadth of the target value element.\n/// @prop {Color} target-value-brush [color('gray', 800)] - Sets the brush to use when rendering the fill of the comparative marker.\n/// @prop {Color} target-value-outline [null] - Sets the brush to use when rendering the outline of the target value.\n/// @prop {Number} target-value-thickness [null] - Sets the stroke thickness of the outline of the target value bar.\n/// @prop {Color} tick-brush [(contrast-color: 'surface')] - Sets the brush to use for the major tickmarks.\n/// @prop {Number} tick-stroke-thickness [null] - Sets the stroke thickness to use when rendering ticks.\n/// @prop {Color} value-brush [(color: ('gray', 800))] - Sets the brush to use for the actual value element.\n/// @prop {Color} value-outline [null] - Sets the brush to use for the outline of actual value element.\n/// @prop {Number} value-stroke-thickness [null] - Sets the stroke thickness to use when rendering single actual value element.\n$material-graph: (\n    'backing-brush': (\n        color: 'surface',\n    ),\n    'backing-outline': (\n        color: 'surface',\n    ),\n    'backing-stroke-thickness': null,\n    'font-brush': (\n        contrast-color: (\n            'surface',\n            500,\n        ),\n    ),\n    'minor-tick-brush': (\n        contrast-color: (\n            'surface',\n            500,\n        ),\n    ),\n    'minor-tick-thickness': null,\n    'range-brushes': series,\n    'range-outlines': series,\n    'scale-background-brush': (\n        color: 'primary',\n    ),\n    'scale-background-outline': (\n        color: 'surface',\n    ),\n    'scale-background-thickness': null,\n    'target-value-breadth': null,\n    'target-value-brush': (\n        color: (\n            'gray',\n            800,\n        ),\n    ),\n    'target-value-outline': null,\n    'target-value-thickness': null,\n    'tick-brush': (\n        contrast-color: (\n            'surface',\n            500,\n        ),\n    ),\n    'tick-stroke-thickness': null,\n    'value-brush': (\n        color: (\n            'gray',\n            800,\n        ),\n    ),\n    'value-outline': null,\n    'value-stroke-thickness': null,\n);\n\n/// Generates a fluent graph schema.\n/// @type {Map}\n/// @requires {Map} $material-graph\n$fluent-graph: $material-graph;\n\n/// Generates a bootstrap graph schema.\n/// @type {Map}\n/// @requires {Map} $material-graph\n$bootstrap-graph: $material-graph;\n\n/// Generates an indigo graph schema.\n/// @type {Map}\n/// @requires {Map} $material-graph\n$indigo-graph: $material-graph;\n","/* stylelint-disable max-line-length */\n////\n/// @package theming\n/// @group schemas\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// Generates a material pie chart schema.\n/// @type {Map}\n/// @property {List} brushes [series] - Defines the palette from which automatically assigned series colors are selected.\n/// @property {List} outlines [series] - Defines the palette from which automatically assigned series outline colors are selected.\n/// @property {Number} label-extent [30] - Sets the pixel amount by which the labels are offset from the edge of the slices.\n/// @property {Color} label-inner-color [null] - Sets the color for labels rendered inside of the pie chart.\n/// @property {Color} label-outer-color [color: ('gray', 700)] - Sets the color for labels rendered outside of the pie chart.\n/// @property {String} labels-position [null] - Sets the position of chart labels. Valid values are: 'none', 'center', 'insideEnd', 'outsideEnd', and 'bestFit'.\n/// @property {Number} leader-line-margin [null] - Sets the margin between a label and the end of its leader line.\n/// @property {String} leader-line-type [null] - Sets what type of leader lines will be used for the outside end labels. Valid values are: 'straight', 'spline', and 'arc'.\n/// @property {String} leader-line-visibility [null] - Sets whether the leader lines are visible. Valid values are: 'visible' and 'collapsed'.\n/// @property {Number} radius-factor [null] - Sets the scaling factor of the chart's radius. Value between 0 and 1.\n$material-pie-chart: (\n    'brushes': series,\n    'outlines': series,\n    'label-extent': 30,\n    'label-inner-color': null,\n    'label-outer-color': (\n        color: (\n            'gray',\n            700,\n        ),\n    ),\n    'labels-position': null,\n    'leader-line-margin': null,\n    'leader-line-type': null,\n    'leader-line-visibility': null,\n    'radius-factor': null,\n);\n\n/// Generates a fluent pie chart schema.\n/// @type {Map}\n/// @requires {Map} $material-pie-chart\n/// @see $material-pie-chart\n$fluent-pie-chart: $material-pie-chart;\n\n/// Generates a bootstrap pie chart schema.\n/// @type {Map}\n/// @requires {Map} $material-pie-chart\n/// @see $material-pie-chart\n$bootstrap-pie-chart: $material-pie-chart;\n\n/// Generates an indigo pie chart schema.\n/// @type {Map}\n/// @requires {Map} $material-pie-chart\n/// @see $material-pie-chart\n$indigo-pie-chart: $material-pie-chart;\n","/* stylelint-disable max-line-length */\n////\n/// @package theming\n/// @group schemas\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// Generates a material base shape chart schema.\n/// @type {Map}\n/// @property {List} margin [null] - Sets the margin (top, right, bottom, left) of the chart content.\n/// @property {Color} title-alignment [null] - Sets horizontal alignment which determines the title position, relative to the left and right edges of the control.\n/// @property {Color} title-text-color [null] - Sets the color of the chart title.\n/// @property {List} title-margin [null] - Sets the margin (top, right, bottom, left) of the chart title.\n/// @property {String} subtitle-alignment [null] - Sets horizontal alignment which determines the subtitle position, relative to the left and right edges of the control.\n/// @property {Color} subtitle-text-color [null] - Sets the color of the chart subtitle.\n/// @property {List} subtitle-margin [null] - Sets the margins (top, right, bottom, left) of the chart subtitle.\n/// @property {List} brushes [series] - Defines the palette from which automatically assigned series colors are selected.\n/// @property {List} marker-brushes [series] - Sets the palette of brushes used for rendering fill area of data point markers.\n/// @property {List} outlines [series] - Sets the palette of brushes to use for outlines on the chart series.\n/// @property {List} marker-outlines [series] - Sets the palette of brushes used for rendering outlines of data point markers.\n///\n/// @property {Number} thickness [null] - Sets the thickness for all series in this chart.\n/// @property {List} trend-line-brushes [series] - Sets the palette of brushes to used for coloring trend lines in this chart.\n/// @property {Number} trend-line-thickness [null] - Sets the thickness of the trend lines in this chart. This property applies only to these chart types: point, line, spline, and bubble.\n/// @property {List} x-axis-label-margin [null] - Sets the margin of labels on the X-axis.\n/// @property {Color} x-axis-label-text-color [null] - Sets color of labels on the X-axis.\n/// @property {String} x-axis-label-vertical-alignment [null] - Sets Vertical alignment of X-axis labels.\n/// @property {Color} x-axis-major-stroke [null] - Sets the color to apply to major gridlines along the X-axis.\n/// @property {Number} x-axis-major-stroke-thickness [null] - Sets the thickness to apply to major gridlines along the X-axis.\n/// @property {Color} x-axis-minor-stroke [null] - Sets the color to apply to minor gridlines along the X-axis.\n/// @property {Number} x-axis-minor-stroke-thickness [null] - Sets the thickness to apply to minor gridlines along the X-axis.\n/// @property {Color} x-axis-strip [null] - Sets the color to apply to stripes along the X-axis.\n/// @property {Color} x-axis-stroke [null] - Sets the color to apply to the X-axis line.\n/// @property {Number} x-axis-stroke-thickness [null] - Sets the thickness to apply to the X-axis line.\n/// @property {String} x-axis-title-alignment [null] - Sets Horizontal alignment of the X-axis title.\n/// @property {Color} x-axis-title-color [null] - Sets color of title on the X-axis.\n/// @property {List} x-axis-title-margin [null] - Sets the margin around the title on the X-axis.\n/// @property {List} y-axis-label-margin [null] - Sets the margin of labels on the Y-axis.\n/// @property {Color} y-axis-label-text-color [null] - Sets color of labels on the Y-axis.\n/// @property {String} y-axis-label-vertical-alignment [null] - Sets Vertical alignment of Y-axis labels.\n/// @property {Color} y-axis-major-stroke [null] - Sets the color to apply to major gridlines along the Y-axis.\n/// @property {Number} y-axis-major-stroke-thickness [null] - Sets the thickness to apply to major gridlines along the Y-axis.\n/// @property {Color} y-axis-minor-stroke [null] - Sets the color to apply to minor gridlines along the Y-axis.\n/// @property {Number} y-axis-minor-stroke-thickness [null] - Sets the thickness to apply to minor gridlines along the Y-axis.\n/// @property {Color} y-axis-strip [null] - Sets the color to apply to stripes along the Y-axis.\n/// @property {Color} y-axis-stroke [null] - Sets the color to apply to the Y-axis line.\n/// @property {Number} y-axis-stroke-thickness [null] - Sets the thickness to apply to the Y-axis line.\n/// @property {String} y-axis-title-alignment [null] - Sets Horizontal alignment of the Y-axis title.\n/// @property {Color} y-axis-title-color [null] - Sets color of title on the Y-axis.\n/// @property {List} y-axis-title-margin [null] - Sets the margin around the title on the Y-axis.\n$material-shape-chart: (\n    'margin': null,\n    'title-alignment': null,\n    'title-text-color': (\n        color: (\n            'gray',\n            900,\n        ),\n    ),\n    'title-margin': null,\n    'subtitle-alignment': null,\n    'subtitle-text-color': (\n        color: (\n            'gray',\n            600,\n        ),\n    ),\n    'subtitle-margin': null,\n    'brushes': series,\n    'marker-brushes': series,\n    'outlines': series,\n    'marker-outlines': series,\n    'thickness': null,\n    'trend-line-brushes': series,\n    'trend-line-thickness': null,\n    'x-axis-label-margin': null,\n    'x-axis-label-text-color': null,\n    'x-axis-label-vertical-alignment': null,\n    'x-axis-major-stroke': null,\n    'x-axis-major-stroke-thickness': null,\n    'x-axis-minor-stroke': null,\n    'x-axis-minor-stroke-thickness': null,\n    'x-axis-strip': null,\n    'x-axis-stroke': null,\n    'x-axis-stroke-thickness': null,\n    'x-axis-title-alignment': null,\n    'x-axis-title-color': null,\n    'x-axis-title-margin': null,\n    'y-axis-label-margin': null,\n    'y-axis-label-text-color': null,\n    'y-axis-label-vertical-alignment': null,\n    'y-axis-major-stroke': null,\n    'y-axis-major-stroke-thickness': null,\n    'y-axis-minor-stroke': null,\n    'y-axis-minor-stroke-thickness': null,\n    'y-axis-strip': null,\n    'y-axis-stroke': null,\n    'y-axis-stroke-thickness': null,\n    'y-axis-title-alignment': null,\n    'y-axis-title-color': null,\n    'y-axis-title-margin': null,\n);\n\n/// Generates a fluent shaep-chart schema.\n/// @type {Map}\n/// @requires {function} extend\n/// @requires {Map} $material-shape-chart\n$fluent-shape-chart: $material-shape-chart;\n\n/// Generates a bootstrap shape-chart schema.\n/// @type {Map}\n/// @requires {function} extend\n/// @requires {Map} $material-shape-chart\n$bootstrap-shape-chart: $material-shape-chart;\n\n/// Generates an indigo shape-chart schema.\n/// @type {Map}\n/// @requires {function} extend\n/// @requires {Map} $material-shape-chart\n$indigo-shape-chart: $material-shape-chart;\n","/* stylelint-disable max-line-length */\n@use '../light/category-chart' as *;\n\n////\n/// @package theming\n/// @group schemas\n/// @access public\n/// @author <a href=\"https://github.com/SisIvanova\" target=\"_blank\">Silvia Ivanova</a>\n////\n\n/// Generates a dark category-chart schema based on a mix of $material-category-chart and $base-dark-category-chart\n/// @type {Map}\n/// @requires $material-category-chart\n$dark-material-category-chart: $material-category-chart;\n\n/// Generates a dark fluent category-chart schema based on a mix of $fluent-category-chart and $base-dark-category-chart\n/// @type {Map}\n/// @requires $fluent-category-chart\n$dark-fluent-category-chart: $fluent-category-chart;\n\n/// Generates a bootstrap category-chart schema based on a mix of $bootstrap-category-chart and $base-dark-category-chart\n/// @type {Map}\n/// @requires $bootstrap-category-chart\n$dark-bootstrap-category-chart: $bootstrap-category-chart;\n\n/// Generates an indigo category-chart schema based on a mix of $indigo-category-chart and $base-dark-category-chart\n/// @type {Map}\n/// @requires $indigo-category-chart\n$dark-indigo-category-chart: $indigo-category-chart;\n","/* stylelint-disable max-line-length */\n@use 'sass:map';\n@use '../mixins' as *;\n@use '../functions' as *;\n@use '../schemas/charts' as *;\n@use '../../utils' as *;\n@use '../../typography/mixins' as *;\n@use '../../typography/functions' as *;\n\n////\n/// @package theming\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Map} $target ['angular'] - The target platform to be used when scoping the theme variables.\n/// @param {List} $margin [null] - Sets the margin (top, right, bottom, left) of the chart content.\n/// @param {Color} $title-text-color [null] - Sets the color of the chart title.\n/// @param {List} $title-margin [null] - Sets the margin (top, right, bottom, left) of the chart title.\n/// @param {Color} $subtitle-text-color [null] - Sets the color of the chart subtitle.\n/// @param {List} $subtitle-margin [null] - Sets the margins (top, right, bottom, left) of the chart subtitle.\n/// @param {List} $brushes [null] - Defines the palette from which automatically assigned series colors are selected.\n/// @param {List} $marker-brushes [null] - Defines the palette from which automatically assigned marker brushes are selected.\n/// @param {List} $outlines [null] - Defines the palette from which automatically assigned series outline colors are selected.\n/// @param {List} $marker-outlines [null] - Defines the palette from which automatically assigned marker outlines are selected.\n/// @param {Color} $plot-area-background [null] - Sets the brush used as the background for the current Chart object's plot area.\n/// @param {String} $title-horizontal-alignment [null] - The horizontal alignment to use for the title. Valid options are 'left', 'center', and 'right';\n/// @param {String} $subtitle-horizontal-alignment [null] - The horizontal alignment to use for the subtitle. Valid options are 'left', 'center', and 'right';\n/// @requires $light-material-schema\n/// @requires extend\n///\n/// @example scss\n///   $my-chart-theme: data-chart-theme($brushes: (orange, blue, pink));\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($my-chart-theme);\n@function data-chart-theme(\n    $schema: $light-material-schema,\n    $target: 'angular',\n\n    $margin: null,\n    $title-text-color: null,\n    $title-margin: null,\n    $subtitle-text-color: null,\n    $subtitle-margin: null,\n    $brushes: null,\n    $outlines: null,\n    $marker-brushes: null,\n    $marker-outlines: null,\n    $plot-area-background: null,\n    $title-horizontal-alignment: null,\n    $subtitle-horizontal-alignment: null\n) {\n    $name: 'data-chart';\n    $selector: map.get(\n        (\n            'angular': 'igx-data-chart',\n            'webc': 'igc-data-chart',\n            'blazor': 'igb-data-chart',\n        ),\n        $target\n    );\n    $chart-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $chart-schema: map.get($schema, $name);\n    } @else {\n        $chart-schema: $schema;\n    }\n\n    $theme: digest-schema($chart-schema);\n    $margin-default: map.get($theme, 'margin');\n    $title-margin-default: map.get($theme, 'title-margin');\n    $subtitle-margin-default: map.get($theme, 'subtitle-margin');\n\n    @if not($margin) {\n        $margin: $margin-default;\n    } @else {\n        $margin: expand-shorthand(($margin));\n    }\n\n    @if not($title-margin) {\n        $title-margin: $title-margin-default;\n    } @else {\n        $title-margin: map-keys-prefix(expand-shorthand(($title-margin)), 'title');\n    }\n\n    @if not($subtitle-margin) {\n        $subtitle-margin: $subtitle-margin-default;\n    } @else {\n        $subtitle-margin: map-keys-prefix(expand-shorthand(($subtitle-margin)), 'subtitle');\n    }\n\n    @return extend(\n        $theme,\n        $margin,\n        $title-margin,\n        $subtitle-margin,\n        (\n            name: $name,\n            selector: $selector,\n            title-text-color: $title-text-color,\n            subtitle-text-color: null,\n            brushes: $brushes,\n            outlines: $outlines,\n            marker-brushes: $marker-brushes,\n            marker-outlines: $marker-outlines,\n            plot-area-background: $plot-area-background,\n            title-horizontal-alignment: $title-horizontal-alignment,\n            subtitle-horizontal-alignment: $subtitle-horizontal-alignment,\n        )\n    );\n}\n\n/// Adds typography styles for the data-chart component.\n/// Uses the 'h6' and 'subtitle-1'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by type-scale.\n/// @param {Map} $categories [(title: 'h6', subtitle: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} type-style\n@mixin data-chart-typography($type-scale, $categories: (title: 'h6', subtitle: 'subtitle-1'), $target: 'angular') {\n    $name: 'data-chart';\n    $title: map.get($categories, 'title');\n    $subtitle: map.get($categories, 'subtitle');\n    $title-styles: type-scale-category($type-scale, $title);\n    $subtitle-styles: type-scale-category($type-scale, $subtitle);\n    $selector: map.get(\n        (\n            'angular': 'igx-data-chart',\n            'webc': 'igc-data-chart',\n            'blazor': 'igb-data-chart',\n        ),\n        $target\n    );\n\n    #{$selector} {\n        @include font-var('title-text-style', $title-styles, $name);\n        @include font-var('subtitle-text-style', $subtitle-styles, $name);\n    }\n}\n","/* stylelint-disable max-line-length */\n@use 'sass:map';\n@use '../mixins' as *;\n@use '../functions' as *;\n@use '../schemas/charts' as *;\n@use '../../utils' as *;\n@use '../../typography/mixins' as *;\n@use '../../typography/functions' as *;\n\n////\n/// @package theming\n/// @group themes\n/// @access private\n/// @author <a href=\"https://github.com/didimmova\" target=\"_blank\">Dilyana Dimova</a>\n////\n\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Map} $target ['angular'] - The target platform to be used when scoping the theme variables.\n/// @param {List} $margin [null] - Sets the margin (top, right, bottom, left) of the chart content.\n/// @param {String} $title-alignment [null] - The horizontal alignment to use for the title.\n/// @param {Color} $title-text-color [null] - Sets the color of the chart title.\n/// @param {List} $title-margin [null] - Sets the margin (top, right, bottom, left) of the chart title.\n/// @param {Color} $subtitle-text-color [null] - Sets the color of the chart subtitle.\n/// @param {List} $subtitle-margin [null] - Sets the margins (top, right, bottom, left) of the chart subtitle.\n/// @param {String} $subtitle-alignment [null] - Gets or sets horizontal alignment which determines the subtitle position, relative to the left and right edges of the control.\n/// @param {List} $brushes [null] - Defines the palette from which automatically assigned series brushes colors are selected.\n/// @param {List} $marker-brushes [null]- Defines the palette from which automatically assigned series marker brushes colors are selected.\n/// @param {List} $negative-brushes [null] - Defines the palette used for coloring negative items in a chart type with contextual coloring, such as Waterfall.\n/// @param {List} $outlines [null] - Defines the palette from which automatically assigned series outline colors are selected.\n/// @param {List} $marker-outlines [null] - Defines the palette from which automatically assigned series marker outline colors are selected.\n/// @param {List} $negative-outlines [null] - Defines the brushes used for drawing negative elements in a chart type with contextual coloring, such as Waterfall.\n/// @param {List} $indicator-brushes [null] - Defines the brushes used for financial indicators.\n/// @param {List} $indicator-negative-brushes [null] - Defines the brushes used for negative elements in financial indicators.\n/// @param {Number} $indicator-thickness [null]- Defines the palette from which automatically assigned series marker brushes colors are selected.\n/// @param {Color} $plot-area-background [null]- Gets or sets the brush used as the background for the current Chart object's plot area.\n/// @param {Number} $thickness [null] - Sets the thickness for all series in a chart.\n/// @param {Number} $toolbar-height [null] - Sets the height of the tooolbar.\n/// @param {List} $trend-line-brushes [null] - Defines the palette of brushes used for coloring trend lines in a chart.\n/// @param {Number} $trend-line-thickness [null] - Sets the thickness of the trend lines in a chart of type point, line, spline or bubble.\n/// @param {List} $volume-brushes [null]- Defines the brushes to use for filling volume series in the volume pane.\n/// @param {List} $volume-outlines [null] - Defines the brushes to use for outlining volume series in the volume pane.\n/// @param {Number} $volume-thickness [null]- Defines the outline thickness of volume series in the volume pane.\n/// @param {List} $x-axis-label-margin [null] - Sets the margin (top, right, bottom, left) of labels on the X-axis.\n/// @param {Color} $x-axis-label-text-color [null] - Sets the color of labels on the X-axis.\n/// @param {String} $x-axis-label-vertical-alignment [null] - Sets the vertical alignment of X-axis labels.\n/// @param {Color} $x-axis-major-stroke [null] - Sets the color to apply to major gridlines along the X-axis.\n/// @param {Number} $x-axis-major-stroke-thickness [null] - Sets the thickness to apply to major gridlines along the X-axis.\n/// @param {Color} $x-axis-minor-stroke [null] - Sets the color to apply to minor gridlines along the X-axis.\n/// @param {Number} $x-axis-minor-stroke-thickness [null] - Sets the thickness to apply to minor gridlines along the X-axis.\n/// @param {Color} $x-axis-strip [null] - Sets the color to apply to stripes along the X-axis.\n/// @param {Color} $x-axis-stroke [null] - Sets the color to apply to the X-axis line.\n/// @param {Number} $x-axis-stroke-thickness [null] - Sets the thickness to apply to the X-axis line.\n/// @param {Number} $x-axis-tick-length [null] - Sets the length of tickmarks along the X-axis.\n/// @param {Color} $x-axis-tick-stroke [null] - Sets the color to apply to tickmarks along the X-axis.\n/// @param {Number} $x-axis-tick-stroke-thickness [null] - Sets the thickness to apply to tickmarks along the X-axis.\n/// @param {String} $x-axis-title-alignment [null] - Sets the horizontal alignment of the X-axis title.\n/// @param {List} $x-axis-title-margin [null] - Sets the margin (top, right, bottom, left) of a title on the X-axis.\n/// @param {Color} $x-axis-title-text-color [null] - Sets the color of the title on the X-axis.\n/// @param {List} $y-axis-label-margin [null] - Sets the margin (top, right, bottom, left) of labels on the Y-axis.\n/// @param {Color} $y-axis-label-text-color [null] - Sets the color of labels on the Y-axis.\n/// @param {String} $y-axis-label-vertical-alignment [null] - Sets the vertical alignment of Y-axis labels.\n/// @param {Color} $y-axis-major-stroke [null] - Sets the color to apply to major gridlines along the y-axis.\n/// @param {Number} $y-axis-major-stroke-thickness [null] - Sets the thickness to apply to major gridlines along the Y-axis.\n/// @param {Color} $y-axis-minor-stroke [null] - Sets the color to apply to minor gridlines along the Y-axis.\n/// @param {Number} $y-axis-minor-stroke-thickness [null] - Sets the thickness to apply to minor gridlines along the Y-axis.\n/// @param {Color} $y-axis-strip [null] - Sets the color to apply to stripes along the Y-axis.\n/// @param {Color} $y-axis-stroke [null] - Sets the color to apply to the Y-axis line.\n/// @param {Number} $y-axis-stroke-thickness [null] - Sets the thickness to apply to the Y-axis line.\n/// @param {String} $y-axis-title-alignment [null] - Sets the horizontal alignment of the Y-axis title.\n/// @param {List} $y-axis-title-margin [null] - Sets the margin (top, right, bottom, left) of a title on the Y-axis.\n/// @param {Color} $y-axis-title-text-color [null] - Sets the color of a title on the Y-axis.\n/// @param {Number} $y-axis-tick-length [null] - Sets the length of tickmarks along the Y-axis.\n/// @param {Color} $y-axis-tick-stroke [null] - Sets the color to apply to tickmarks along the Y-axis.\n/// @param {Number} $y-axis-tick-stroke-thickness [null] - Sets the thickness to apply to tickmarks along the Y-axis.\n/// @param {String} $zoom-slider-x-axis-major-stroke [null] - Gets or sets stroke brush of major gridlines on x-axis of the zoom slider pane.\n/// @param {Number} $zoom-slider-x-axis-major-stroke-thickness [null] - Gets or sets thickness of major gridlines on x-axis of the zoom slider pane.\n/// @requires $light-material-schema\n/// @requires extend\n///\n/// @example scss\n///   $my-chart-theme: financial-chart-theme($title-alignment: left, $brushes: red, blue, yellow, pink);\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($my-chart-theme);\n@function financial-chart-theme(\n    $schema: $light-material-schema,\n    $target: 'angular',\n\n    $margin: null,\n    $title-alignment: null,\n    $title-text-color: null,\n    $title-margin: null,\n    $subtitle-text-color: null,\n    $subtitle-margin: null,\n    $subtitle-alignment: null,\n    $brushes: null,\n    $outlines: null,\n    $marker-brushes: null,\n    $marker-outlines: null,\n    $plot-area-background: null,\n    $indicator-brushes: null,\n    $indicator-negative-brushes: null,\n    $indicator-thickness: null,\n    $negative-brushes: null,\n    $negative-outlines: null,\n    $overlay-brushes: null,\n    $overlay-outlines: null,\n    $overlay-thickness: null,\n    $thickness: null,\n    $toolbar-height: null,\n    $trend-line-brushes: null,\n    $trend-line-thickness: null,\n    $volume-brushes: null,\n    $volume-outlines: null,\n    $volume-thickness: null,\n    $x-axis-label-margin: null,\n    $x-axis-label-text-color: null,\n    $x-axis-label-vertical-alignment: null,\n    $x-axis-major-stroke: null,\n    $x-axis-major-stroke-thickness: null,\n    $x-axis-minor-stroke: null,\n    $x-axis-minor-stroke-thickness: null,\n    $x-axis-strip: null,\n    $x-axis-stroke: null,\n    $x-axis-stroke-thickness: null,\n    $x-axis-title-alignment: null,\n    $x-axis-title-margin: null,\n    $x-axis-title-text-color: null,\n    $y-axis-label-margin: null,\n    $y-axis-label-text-color: null,\n    $y-axis-label-vertical-alignment: null,\n    $y-axis-major-stroke: null,\n    $y-axis-major-stroke-thickness: null,\n    $y-axis-minor-stroke: null,\n    $y-axis-minor-stroke-thickness: null,\n    $y-axis-strip: null,\n    $y-axis-stroke: null,\n    $y-axis-stroke-thickness: null,\n    $y-axis-title-alignment: null,\n    $y-axis-title-margin: null,\n    $y-axis-title-text-color: null,\n    $zoom-slider-x-axis-major-stroke: null,\n    $zoom-slider-x-axis-major-stroke-thickness: null\n) {\n    $name: 'financial-chart';\n    $selector: map.get(\n        (\n            'angular': 'igx-financial-chart',\n            'webc': 'igc-financial-chart',\n            'blazor': 'igb-financial-chart',\n        ),\n        $target\n    );\n    $chart-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $chart-schema: map.get($schema, $name);\n    } @else {\n        $chart-schema: $schema;\n    }\n\n    $theme: digest-schema($chart-schema);\n    $title-margin-default: map.get($theme, 'title-margin');\n    $subtitle-margin-default: map.get($theme, 'subtitle-margin');\n    $x-axis-label-margin-default: map.get($theme, 'x-axis-label-margin');\n    $x-axis-title-margin-default: map.get($theme, 'x-axis-title-margin');\n    $y-axis-label-margin-default: map.get($theme, 'y-axis-label-margin');\n    $y-axis-title-margin-default: map.get($theme, 'x-axis-title-margin');\n\n    @if not($title-margin) {\n        $title-margin: $title-margin-default;\n    } @else {\n        $title-margin: map-keys-prefix(expand-shorthand(($title-margin)), 'title');\n    }\n\n    @if not($subtitle-margin) {\n        $subtitle-margin: $subtitle-margin-default;\n    } @else {\n        $subtitle-margin: map-keys-prefix(expand-shorthand(($subtitle-margin)), 'subtitle');\n    }\n\n    @if not($x-axis-label-margin) {\n        $x-axis-label-margin: $x-axis-label-margin-default;\n    } @else {\n        $x-axis-label-margin: map-keys-prefix(expand-shorthand(($x-axis-label-margin)), 'x-axis-label');\n    }\n\n    @if not($x-axis-title-margin) {\n        $x-axis-title-margin: $x-axis-title-margin-default;\n    } @else {\n        $x-axis-title-margin: map-keys-prefix(expand-shorthand(($x-axis-title-margin)), 'x-axis-title');\n    }\n\n    @if not($y-axis-label-margin) {\n        $y-axis-label-margin: $y-axis-label-margin-default;\n    } @else {\n        $y-axis-label-margin: map-keys-prefix(expand-shorthand(($y-axis-label-margin)), 'y-axis-label');\n    }\n\n    @if not($y-axis-title-margin) {\n        $y-axis-title-margin: $y-axis-title-margin-default;\n    } @else {\n        $y-axis-title-margin: map-keys-prefix(expand-shorthand(($y-axis-title-margin)), 'y-axis-title');\n    }\n\n    @return extend(\n        $theme,\n        $margin,\n        $title-margin,\n        $subtitle-margin,\n        $x-axis-label-margin,\n        $x-axis-title-margin,\n        $y-axis-label-margin,\n        $y-axis-title-margin,\n        (\n            name: $name,\n            selector: $selector,\n            margin: $margin,\n            title-alignment: $title-alignment,\n            title-text-color: $title-text-color,\n            title-margin: $title-margin,\n            subtitle-text-color: $subtitle-text-color,\n            subtitle-margin: $subtitle-margin,\n            subtitle-alignment: $subtitle-alignment,\n            brushes: $brushes,\n            outlines: $outlines,\n            marker-brushes: $marker-brushes,\n            marker-outlines: $marker-outlines,\n            plot-area-background: $plot-area-background,\n            indicator-brushes: $indicator-brushes,\n            indicator-negative-brushes: $indicator-negative-brushes,\n            indicator-thickness: $indicator-thickness,\n            negative-brushes: $negative-brushes,\n            negative-outlines: $negative-outlines,\n            overlay-brushes: $overlay-brushes,\n            overlay-outlines: $overlay-outlines,\n            overlay-thickness: $overlay-thickness,\n            thickness: $thickness,\n            toolbar-height: $toolbar-height,\n            trend-line-brushes: $trend-line-brushes,\n            trend-line-thickness: $trend-line-thickness,\n            volume-brushes: $volume-brushes,\n            volume-outlines: $volume-outlines,\n            volume-thickness: $volume-thickness,\n            x-axis-label-margin: $x-axis-label-margin,\n            x-axis-label-text-color: $x-axis-label-text-color,\n            x-axis-label-vertical-alignment: $x-axis-label-vertical-alignment,\n            x-axis-major-stroke: $x-axis-major-stroke,\n            x-axis-major-stroke-thickness: $x-axis-major-stroke-thickness,\n            x-axis-minor-stroke: $x-axis-minor-stroke,\n            x-axis-minor-stroke-thickness: $x-axis-minor-stroke-thickness,\n            x-axis-strip: $x-axis-strip,\n            x-axis-stroke: $x-axis-stroke,\n            x-axis-stroke-thickness: $x-axis-stroke-thickness,\n            x-axis-title-alignment: $x-axis-title-alignment,\n            x-axis-title-margin: $x-axis-title-margin,\n            x-axis-title-text-color: $x-axis-title-text-color,\n            y-axis-label-margin: $y-axis-label-margin,\n            y-axis-label-text-color: $y-axis-label-text-color,\n            y-axis-label-vertical-alignment: $y-axis-label-vertical-alignment,\n            y-axis-major-stroke: $y-axis-major-stroke,\n            y-axis-major-stroke-thickness: $y-axis-major-stroke-thickness,\n            y-axis-minor-stroke: $y-axis-minor-stroke,\n            y-axis-minor-stroke-thickness: $y-axis-minor-stroke-thickness,\n            y-axis-strip: $y-axis-strip,\n            y-axis-stroke: $y-axis-stroke,\n            y-axis-stroke-thickness: $y-axis-stroke-thickness,\n            y-axis-title-alignment: $y-axis-title-alignment,\n            y-axis-title-margin: $y-axis-title-margin,\n            y-axis-title-text-color: $y-axis-title-text-color,\n            zoom-slider-x-axis-major-stroke: $zoom-slider-x-axis-major-stroke,\n            zoom-slider-x-axis-major-stroke-thicknes: $zoom-slider-x-axis-major-stroke-thickness,\n        )\n    );\n}\n\n/// Adds typography styles for the financial-chart component.\n/// Uses the 'h6', 'subtitle-1' and 'body-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by type-scale.\n/// @param {Map} $categories [(\n/// 'title': 'h6',\n/// 'subtitle': 'subtitle-1,\n/// 'x-axis-label-text-style': 'body-2',\n/// 'y-axis-label-text-style': 'body-2',\n/// 'x-axis-title-text-style': 'body-2',\n/// 'y-axis-title-text-style': 'body-2',\n/// )] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} type-style\n@mixin financial-chart-typography(\n    $type-scale,\n    $categories: (\n        'title': 'h6',\n        'subtitle': 'subtitle-1',\n        'x-axis-label-text-style': 'body-2',\n        'x-axis-title-text-style': 'body-2',\n        'y-axis-label-text-style': 'body-2',\n        'y-axis-title-text-style': 'body-2'\n    ),\n    $target: 'angular'\n) {\n    $name: 'financial-chart';\n    $selector: map.get(\n        (\n            'angular': 'igx-financial-chart',\n            'webc': 'igc-financial-chart',\n            'blazor': 'igb-financial-chart',\n        ),\n        $target\n    );\n    $title: map.get($categories, 'title');\n    $subtitle: map.get($categories, 'subtitle');\n    $x-axis-label-text-style: map.get($categories, 'x-axis-label-text-style');\n    $x-axis-title-text-style: map.get($categories, 'x-axis-title-text-style');\n    $y-axis-label-text-style: map.get($categories, 'y-axis-label-text-style');\n    $y-axis-title-text-style: map.get($categories, 'y-axis-title-text-style');\n    $title-styles: type-scale-category($type-scale, $title);\n    $subtitle-styles: type-scale-category($type-scale, $subtitle);\n    $x-axis-label-styles: type-scale-category($type-scale, $x-axis-label-text-style);\n    $x-axis-title-styles: type-scale-category($type-scale, $x-axis-title-text-style);\n    $y-axis-label-styles: type-scale-category($type-scale, $y-axis-label-text-style);\n    $y-axis-title-styles: type-scale-category($type-scale, $y-axis-title-text-style);\n\n    #{$selector} {\n        @include font-var('title-text-style', $title-styles, $name);\n        @include font-var('subtitle-text-style', $subtitle-styles, $name);\n        @include font-var('x-axis-label-text-style', $x-axis-label-styles, $name);\n        @include font-var('x-axis-title-text-style', $x-axis-title-styles, $name);\n        @include font-var('y-axis-label-text-style', $y-axis-label-styles, $name);\n        @include font-var('y-axis-title-text-style', $y-axis-title-styles, $name);\n    }\n}\n","/* stylelint-disable max-line-length */\n@use 'sass:map';\n@use '../mixins' as *;\n@use '../functions' as *;\n@use '../schemas/charts' as *;\n@use '../../utils' as *;\n@use '../../typography/mixins' as *;\n@use '../../typography/functions' as *;\n\n////\n/// @package theming\n/// @group themes\n/// @access private\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Map} $target ['angular'] - The target platform to be used when scoping the theme variables.\n///\n/// @param {List} $brushes [null] - Defines the palette from which automatically assigned series colors are nelected.\n/// @param {List} $outlines [null] - Defines the palette from which automatically assigned series outline colors are selected.\n/// @param {String} $outer-label-alignment [null] - Sets which side of the chart the outer labels should appear.\n/// @param {Color} $outer-label-text-color [null] - Sets the Color used for the outer labels.\n/// @param {Color} $outer-label-visibility [null] - Sets whether the outer labels are visible.\n/// @param {Number} $outline-thickness [null] - Sets the thickness of outline around slices.\n/// @param {Color} $text-color - [null] Sets the Color used for the inner labels.\n///\n/// @requires $light-material-schema\n/// @requires extend\n///\n/// @example scss\n///   $my-chart-theme: funnel-chart-theme($brushes: (orange, blue, pink));\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($my-chart-theme);\n@function funnel-chart-theme(\n    $schema: $light-material-schema,\n    $target: 'angular',\n\n    $brushes: null,\n    $outlines: null,\n    $outer-label-alignment: null,\n    $outer-label-text-color: null,\n    $outer-label-visibility: null,\n    $outline-thickness: null,\n    $text-color: null\n) {\n    $name: 'funnel-chart';\n    $selector: map.get(\n        (\n            'angular': 'igx-funnel-chart',\n            'webc': 'igc-funnel-chart',\n            'blazor': 'igb-funnel-chart',\n        ),\n        $target\n    );\n    $chart-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $chart-schema: map.get($schema, $name);\n    } @else {\n        $chart-schema: $schema;\n    }\n\n    $theme: digest-schema($chart-schema);\n\n    @return extend(\n        $theme,\n        (\n            name: $name,\n            selector: $selector,\n            brushes: $brushes,\n            outlines: $outlines,\n            outer-label-alignment: $outer-label-alignment,\n            outer-label-text-color: $outer-label-text-color,\n            outer-label-visibility: $outer-label-visibility,\n            outline-thickness: $outline-thickness,\n            text-color: $text-color,\n        )\n    );\n}\n\n@mixin funnel-chart-typography(\n    $type-scale,\n    $categories: (outer-label-text-style: 'h1', text-style: 'subtitle-1'),\n    $target: 'angular'\n) {\n    $name: 'funnel-chart';\n    $selector: map.get(\n        (\n            'angular': 'igx-funnel-chart',\n            'webc': 'igc-funnel-chart',\n            'blazor': 'igb-funnel-chart',\n        ),\n        $target\n    );\n    $outer-label-text-style: map.get($categories, 'outer-label-text-style');\n    $text-style: map.get($categories, 'text-style');\n    $outer-label: type-scale-category($type-scale, $outer-label-text-style);\n    $text: type-scale-category($type-scale, $text-style);\n\n    #{$selector} {\n        @include font-var('outer-label-text-style', $outer-label, $name);\n        @include font-var('text-style', $text, $name);\n    }\n}\n","/* stylelint-disable max-line-length */\n@use 'sass:map';\n@use '../mixins' as *;\n@use '../functions' as *;\n@use '../schemas/charts' as *;\n@use '../../utils' as *;\n@use '../../typography/mixins' as *;\n@use '../../typography/functions' as *;\n\n////\n/// @package theming\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/SisIvanova\" target=\"_blank\">Silvia Ivanova</a>\n////\n\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Map} $target ['angular'] - The target platform to be used when scoping the theme variables.\n///\n/// @param {Color} $backing-brush [null] - Sets the color to use to fill the backing of the linear gauge.\n/// @param {Color} $backing-outline [null] - Sets the color to use for the outline of the backing.\n/// @param {Number} $backing-stroke-thickness [null] - Sets the stroke thickness of the backing outline.\n/// @param {Color} $font-brush [null] - Sets the color to use for the label font.\n/// @param {Number} $minor-tick-stroke-thickness [null] - Sets the stroke thickness to use when rendering minor ticks.\n/// @param {Number} $needle-breadth [null] - Sets the needle breadth.\n/// @param {Color} $needle-brush [null] - Sets the color to use for the needle element.\n/// @param {Number} $needle-inner-base-width [null] - Sets the width of the needle's inner base.\n/// @param {Number} $needle-inner-point-width [null] - Sets the width of the needle's inner point.\n/// @param {Number} $needle-outer-base-width [null] - Sets the width of the needle's outer base.\n/// @param {Number} $needle-outer-point-width [null] - Sets the width of the needle's outer point.\n/// @param {Color} $needle-outline [null] - Sets the color to use for the outline of needle element.\n/// @param {Number} $needle-stroke-thickness [null] - Sets the stroke thickness to use when rendering single actual value element.\n/// @param {List} $range-brushes [null] - Sets a collection of colors to be used as the palette for linear gauge ranges.\n/// @param {List} $range-outlines [null] - Sets a collection of colors to be used as the palette for linear gauge outlines.\n/// @param {Color} $scale-brush [null] - Sets the color to use to fill the scale of the linear gauge.\n/// @param {Color} $scale-outline [null] - Sets the color to use for the outline of the scale.\n/// @param {Number} $scale-stroke-thickness [null] - Sets the stroke thickness of the scale outline.\n/// @param {Color} $tick-brush [null] - Sets the color to use for the major tickmarks.\n/// @param {Number} $tick-stroke-thickness [null] - Sets the stroke thickness to use when rendering ticks.\n/// @requires $light-material-schema\n/// @requires extend\n///\n/// @example scss\n///   $custom-gauge-theme: linear-gauge-theme($brushes: (red, green, blue));\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($custom-gauge-theme);\n@function linear-gauge-theme($schema: $light-material-schema, $target: 'angular', $rest...) {\n    $name: 'linear-gauge';\n    $selector: map.get(\n        (\n            'angular': 'igx-linear-gauge',\n            'webc': 'igc-linear-gauge',\n            'blazor': 'igb-linear-gauge',\n        ),\n        $target\n    );\n    $chart-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $chart-schema: map.get($schema, $name);\n    } @else {\n        $chart-schema: $schema;\n    }\n\n    $theme: digest-schema($chart-schema);\n\n    @return extend(\n        $theme,\n        keywords($rest),\n        (\n            name: $name,\n            selector: $selector,\n        )\n    );\n}\n\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Map} $target ['angular'] - The target platform to be used when scoping the theme variables.\n/// @param {Map} $width [null] - The width of the gauge in pixels, string (px) or percentage (%).\n/// @param {Map} $height [null] - The height of the gauge in pixels, string (px) or percentage (%).\n/// @param {Color} $backing-brush [null] - Sets the color to use to fill the backing of the linear gauge.\n/// @param {Color} $backing-outline [null] - Sets the color to use for the outline of the backing.\n/// @param {Number} $backing-stroke-thickness [null] - Sets the stroke thickness of the backing outline.\n/// @param {Color} $font-brush [null] - Sets the color to use for the label font.\n/// @param {Number} $minor-tick-stroke-thickness [null] - Sets the stroke thickness to use when rendering minor ticks.\n/// @param {Color} $needle-brush [null] - Sets the color to use for the needle element.\n/// @param {Color} $needle-outline [null] - Sets the color to use for the outline of needle element.\n/// @param {Number} $needle-stroke-thickness [null] - Sets the stroke thickness to use when rendering single actual value element.\n/// @param {List} $range-brushes [null] - Sets a collection of colors to be used as the palette for linear gauge ranges.\n/// @param {List} $range-outlines [null] - Sets a collection of colors to be used as the palette for linear gauge outlines.\n/// @param {Color} $scale-brush [null] - Sets the color to use to fill the scale of the linear gauge.\n/// @param {Color} $tick-brush [null] - Sets the color to use for the major tickmarks.\n/// @param {Number} $tick-stroke-thickness [null] - Sets the stroke thickness to use when rendering ticks.\n/// @param {Color} $needle-pivot-brush [null] - Sets the color of the needle pivot point.\n/// @param {Color} $needle-pivot-outline [null] - Sets the outline color of the needle pivot point.\n/// @requires $light-material-schema\n/// @requires extend\n///\n/// @example scss\n///   $custom-gauge-theme: radial-gauge-theme($brushes: (red, green, blue));\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($custom-gauge-theme);\n@function radial-gauge-theme($schema: $light-material-schema, $target: 'angular', $rest...) {\n    $name: 'radial-gauge';\n    $selector: map.get(\n        (\n            'angular': 'igx-radial-gauge',\n            'webc': 'igc-radial-gauge',\n            'blazor': 'igb-radial-gauge',\n        ),\n        $target\n    );\n    $chart-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $chart-schema: map.get($schema, $name);\n    } @else {\n        $chart-schema: $schema;\n    }\n\n    $theme: digest-schema($chart-schema);\n\n    @return extend(\n        $theme,\n        keywords($rest),\n        (\n            name: $name,\n            selector: $selector,\n        )\n    );\n}\n\n/// Adds typography styles for the linear-gauge component.\n/// @access private\n/// @group typography\n/// @requires {mixin} type-style\n@mixin gauge-typography($target: 'angular') {\n    $linear-selector: map.get(\n        (\n            'angular': 'igx-linear-gauge',\n            'webc': 'igc-linear-gauge',\n            'blazor': 'igb-linear-gauge',\n        ),\n        $target\n    );\n    $radial-selector: map.get(\n        (\n            'angular': 'igx-radial-gauge',\n            'webc': 'igc-radial-gauge',\n            'blazor': 'igb-radial-gauge',\n        ),\n        $target\n    );\n\n    #{$linear-selector} {\n        --linear-gauge-font: var(--ig-font-family, inherit);\n    }\n\n    #{$radial-selector} {\n        --radial-gauge-font: var(--ig-font-family, inherit);\n    }\n}\n","/* stylelint-disable max-line-length */\n@use 'sass:map';\n@use '../mixins' as *;\n@use '../functions' as *;\n@use '../schemas/charts' as *;\n@use '../../utils' as *;\n@use '../../typography/mixins' as *;\n@use '../../typography/functions' as *;\n\n////\n/// @package theming\n/// @group themes\n/// @access private\n/// @author <a href=\"https://github.com/didimmova\" target=\"_blank\">Dilyana Dimova</a>\n////\n\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Map} $target ['angular'] - The target platform to be used when scoping the theme variables.\n/// @param {String} $plot-area-background [null]- Gets or sets the brush used as the background for the current Map object's plot area.\n/// @requires $light-material-schema\n/// @requires extend\n///\n/// @example scss\n///   $my-map-theme: geo-map-theme($width: 550px);\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($my-map-theme);\n@function geo-map-theme($schema: $light-material-schema, $target: 'angular', $plot-area-background: null) {\n    $name: 'geo-map';\n    $selector: map.get(\n        (\n            'angular': 'igx-geographic-map',\n            'webc': 'igc-geographic-map',\n            'blazor': 'igb-geographic-map',\n        ),\n        $target\n    );\n    $chart-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $chart-schema: map.get($schema, $name);\n    } @else {\n        $chart-schema: $schema;\n    }\n\n    $theme: digest-schema($chart-schema);\n\n    @return extend(\n        $theme,\n        (\n            name: $name,\n            selector: $selector,\n            plot-area-background: $plot-area-background,\n        )\n    );\n}\n","/* stylelint-disable max-line-length */\n@use 'sass:map';\n@use '../mixins' as *;\n@use '../functions' as *;\n@use '../schemas/charts' as *;\n@use '../../utils' as *;\n@use '../../typography/mixins' as *;\n@use '../../typography/functions' as *;\n\n////\n/// @package theming\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Map} $target ['angular'] - The target platform to be used when scoping the theme variables.\n/// @param {Color} $backing-brush [null] - Sets the brush to use to fill the backing of the bullet graph.\n/// @param {Color} $backing-outline [null] - Sets the brush to use for the outline of the backing.\n/// @param {Number} $backing-stroke-thickness [null] - Sets the stroke thickness of the backing outline.\n/// @param {Color} $font-brush [null] - Sets the brush to use for the label font.\n/// @param {Color} $minor-tick-brush [null] - Sets the brush to use for the minor tickmarks.\n/// @param {Number} $minor-tick-thickness [null] - Stroke thickness to use when rendering minor ticks.\n/// @param {List} $range-brushes [null] - Sets a collection of brushes to be used as the palette for bullet graph ranges.\n/// @param {List} $range-outlines [null] - Sets a collection of brushes to be used as the palette for bullet graph outlines.\n/// @param {Color} $scale-background-brush [null] - Sets the background brush for the scale.\n/// @param {Color} $scale-background-outline [null] - Sets the background outline for the scale.\n/// @param {Number} $scale-background-thickness [null] - Sets the background outline thickness for the scale.\n/// @param {Number} $target-value-breadth [null] - Sets the breadth of the target value element.\n/// @param {Color} $target-value-brush [null] - Sets the brush to use when rendering the fill of the comparative marker.\n/// @param {Color} $target-value-outline [null] - Sets the brush to use when rendering the outline of the target value.\n/// @param {Number} $target-value-thickness [null] - Sets the stroke thickness of the outline of the target value bar.\n/// @param {Color} $tick-brush [null] - Sets the brush to use for the major tickmarks.\n/// @param {Number} $tick-stroke-thickness [null] - Sets the stroke thickness to use when rendering ticks.\n/// @param {Color} $value-brush [null] - Sets the brush to use for the actual value element.\n/// @param {Color} $value-outline [null] - Sets the brush to use for the outline of actual value element.\n/// @param {Number} $value-stroke-thickness [null] - Sets the stroke thickness to use when rendering single actual value element.\n/// @requires $light-material-schema\n/// @requires extend\n///\n/// @example scss\n///   $my-chart-theme: bullet-graph-theme($brushes: (orange, blue, pink));\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($my-chart-theme);\n@function bullet-graph-theme(\n    $schema: $light-material-schema,\n    $target: 'angular',\n\n    $backing-brush: null,\n    $backing-outline: null,\n    $backing-stroke-thickness: null,\n    $font-brush: null,\n    $minor-tick-brush: null,\n    $minor-tick-thickness: null,\n    $range-brushes: null,\n    $range-outlines: null,\n    $scale-background-brush: null,\n    $scale-background-outline: null,\n    $scale-background-thickness: null,\n    $target-value-breadth: null,\n    $target-value-brush: null,\n    $target-value-outline: null,\n    $target-value-thickness: null,\n    $tick-brush: null,\n    $tick-stroke-thickness: null,\n    $value-brush: null,\n    $value-outline: null,\n    $value-stroke-thickness: null\n) {\n    $name: 'bullet-graph';\n    $selector: map.get(\n        (\n            'angular': 'igx-bullet-graph',\n            'webc': 'igc-bullet-graph',\n            'blazor': 'igb-bullet-graph',\n        ),\n        $target\n    );\n    $chart-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $chart-schema: map.get($schema, $name);\n    } @else {\n        $chart-schema: $schema;\n    }\n\n    $theme: digest-schema($chart-schema);\n\n    @return extend(\n        $theme,\n        (\n            name: $name,\n            selector: $selector,\n            backing-brush: $backing-brush,\n            backing-outline: $backing-outline,\n            backing-stroke-thickness: $backing-stroke-thickness,\n            font-brush: $font-brush,\n            minor-tick-brush: $minor-tick-brush,\n            minor-tick-thickness: $minor-tick-thickness,\n            range-brushes: $range-brushes,\n            range-outlines: $range-outlines,\n            scale-background-brush: $scale-background-brush,\n            scale-background-outline: $scale-background-outline,\n            scale-background-thickness: $scale-background-thickness,\n            target-value-breadth: $target-value-breadth,\n            target-value-brush: $target-value-brush,\n            target-value-outline: $target-value-outline,\n            target-value-thickness: $target-value-thickness,\n            tick-brush: $tick-brush,\n            tick-stroke-thickness: $tick-stroke-thickness,\n            value-brush: $value-brush,\n            value-outline: $value-outline,\n            value-stroke-thickness: $value-stroke-thickness,\n        )\n    );\n}\n\n/// Adds typography styles for the graph component.\n/// @access private\n/// @group typography\n/// @requires {mixin} type-style\n@mixin graph-typography($target: 'angular') {\n    $selector: map.get(\n        (\n            'angular': 'igx-bullet-graph',\n            'webc': 'igc-bullet-graph',\n            'blazor': 'igb-bullet-graph',\n        ),\n        $target\n    );\n\n    #{$selector} {\n        --bullet-graph-font: var(--ig-font-family, inherit);\n    }\n}\n","/* stylelint-disable max-line-length */\n@use 'sass:map';\n@use '../mixins' as *;\n@use '../functions' as *;\n@use '../schemas/charts' as *;\n@use '../../utils' as *;\n@use '../../typography/mixins' as *;\n@use '../../typography/functions' as *;\n\n////\n/// @package theming\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Map} $target ['angular'] - The target platform to be used when scoping the theme variables.\n/// @param {List} $brushes [series] - Defines the palette from which automatically assigned series colors are selected.\n/// @param {List} $outlines [series] - Defines the palette from which automatically assigned series outline colors are selected.\n/// @param {Number} $label-extent [null] - Sets the pixel amount by which the labels are offset from the edge of the slices.\n/// @param {Color} $label-inner-color [null] - Sets the color for labels rendered inside of the pie chart.\n/// @param {Color} $label-outer-color [null] - Sets the color for labels rendered outside of the pie chart.\n/// @param {String} $labels-position [null] - Sets the position of chart labels. Valid values are: 'none', 'center', 'insideEnd', 'outsideEnd', and 'bestFit'.\n/// @param {Number} $leader-line-margin [null] - Sets the margin between a label and the end of its leader line.\n/// @param {String} $leader-line-type [null] - Sets what type of leader lines will be used for the outside end labels. Valid values are: 'straight', 'spline', and 'arc'.\n/// @param {String} $leader-line-visibility [null] - Sets whether the leader lines are visible. Valid values are: 'visible' and 'collapsed'.\n/// @param {Number} $radius-factor [null] - Sets the scaling factor of the chart's radius. Value between 0 and 1.\n/// @requires $light-material-schema\n/// @requires extend\n///\n/// @example scss\n///   $my-chart-theme: pie-chart-theme($brushes: (red, orange, blue));\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($my-chart-theme);\n@function pie-chart-theme(\n    $schema: $light-material-schema,\n    $target: 'angular',\n\n    $brushes: null,\n    $outlines: null,\n    $label-extent: null,\n    $label-inner-color: null,\n    $label-outer-color: null,\n    $labels-position: null,\n    $leader-line-margin: null,\n    $leader-line-type: null,\n    $leader-line-visibility: null,\n    $radius-factor: null\n) {\n    $name: 'pie-chart';\n    $selector: map.get(\n        (\n            'angular': 'igx-pie-chart',\n            'webc': 'igc-pie-chart',\n            'blazor': 'igb-pie-chart',\n        ),\n        $target\n    );\n    $chart-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $chart-schema: map.get($schema, $name);\n    } @else {\n        $chart-schema: $schema;\n    }\n\n    $theme: digest-schema($chart-schema);\n\n    @return extend(\n        $theme,\n        (\n            name: $name,\n            selector: $selector,\n            brushes: $brushes,\n            outlines: $outlines,\n            label-extent: $label-extent,\n            label-inner-color: $label-inner-color,\n            label-outer-color: $label-outer-color,\n            labels-position: $labels-position,\n            leader-line-margin: $leader-line-margin,\n            leader-line-type: $leader-line-type,\n            leader-line-visibility: $leader-line-visibility,\n            radius-factor: $radius-factor,\n        )\n    );\n}\n\n/// Adds typography styles for the pie-chart component.\n/// Uses the 'body-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by type-scale.\n/// @param {Map} $categories [(text: 'body-2')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} type-style\n@mixin pie-chart-typography($type-scale, $categories: (text: 'body-2'), $target: 'angular') {\n    $name: 'pie-chart';\n    $selector: map.get(\n        (\n            'angular': 'igx-pie-chart',\n            'webc': 'igc-pie-chart',\n            'blazor': 'igb-pie-chart',\n        ),\n        $target\n    );\n    $text: map.get($categories, 'text');\n    $text-styles: type-scale-category($type-scale, $text);\n\n    #{$selector} {\n        @include font-var('text-style', $text-styles, $name);\n    }\n}\n","/* stylelint-disable max-line-length */\n@use 'sass:map';\n@use '../mixins' as *;\n@use '../functions' as *;\n@use '../schemas/charts' as *;\n@use '../../utils' as *;\n@use '../../typography/mixins' as *;\n@use '../../typography/functions' as *;\n\n////\n/// @package theming\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Map} $target ['angular'] - The target platform to be used when scoping the theme variables.\n/// @param {List} $margin [null] - Sets the margin (top, right, bottom, left) of the chart content.\n/// @param {Color} $title-alignment [null] - Sets horizontal alignment which determines the title position, relative to the left and right edges of the control.\n/// @param {Color} $title-text-color [null] - Sets the color of the chart title.\n/// @param {List} $title-margin [null] - Sets the margin (top, right, bottom, left) of the chart title.\n/// @param {String} $subtitle-alignment [null] - Sets horizontal alignment which determines the subtitle position, relative to the left and right edges of the control.\n/// @param {Color} $subtitle-text-color [null] - Sets the color of the chart subtitle.\n/// @param {List} $subtitle-margin [null] - Sets the margins (top, right, bottom, left) of the chart subtitle.\n/// @param {List} $brushes [null] - Defines the palette from which automatically assigned series colors are selected.\n/// @param {List} $marker-brushes [null] - Sets the palette of brushes used for rendering fill area of data point markers.\n/// @param {List} $outlines [null] - Sets the palette of brushes to use for outlines on the chart series.\n/// @param {List} $marker-outlines [null] - Sets the palette of brushes used for rendering outlines of data point markers.\n/// @param {Number} $thickness [null] - Sets the thickness for all series in this chart.\n/// @param {List} $trend-line-brushes [null] - Sets the palette of brushes to used for coloring trend lines in this chart.\n/// @param {Number} $trend-line-thickness [null] - Sets the thickness of the trend lines in this chart. This property applies only to these chart types: point, line, spline, and bubble.\n/// @param {List} $x-axis-label-margin [null] - Sets the margin of labels on the X-axis.\n/// @param {Color} $x-axis-label-text-color [null] - Sets color of labels on the X-axis.\n/// @param {String} $x-axis-label-vertical-alignment [null] - Sets Vertical alignment of X-axis labels.\n/// @param {Color} $x-axis-major-stroke [null] - Sets the color to apply to major gridlines along the X-axis.\n/// @param {Number} $x-axis-major-stroke-thickness [null] - Sets the thickness to apply to major gridlines along the X-axis.\n/// @param {Color} $x-axis-minor-stroke [null] - Sets the color to apply to minor gridlines along the X-axis.\n/// @param {Number} $x-axis-minor-stroke-thickness [null] - Sets the thickness to apply to minor gridlines along the X-axis.\n/// @param {Color} $x-axis-strip [null] - Sets the color to apply to stripes along the X-axis.\n/// @param {Color} $x-axis-stroke [null] - Sets the color to apply to the X-axis line.\n/// @param {Number} $x-axis-stroke-thickness [null] - Sets the thickness to apply to the X-axis line.\n/// @param {String} $x-axis-title-alignment [null] - Sets Horizontal alignment of the X-axis title.\n/// @param {Color} $x-axis-title-color [null] - Sets color of title on the X-axis.\n/// @param {List} $x-axis-title-margin [null] - Sets the margin around the title on the X-axis.\n/// @param {List} $y-axis-label-margin [null] - Sets the margin of labels on the Y-axis.\n/// @param {Color} $y-axis-label-text-color [null] - Sets color of labels on the Y-axis.\n/// @param {String} $y-axis-label-vertical-alignment [null] - Sets Vertical alignment of Y-axis labels.\n/// @param {Color} $y-axis-major-stroke [null] - Sets the color to apply to major gridlines along the Y-axis.\n/// @param {Number} $y-axis-major-stroke-thickness [null] - Sets the thickness to apply to major gridlines along the Y-axis.\n/// @param {Color} $y-axis-minor-stroke [null] - Sets the color to apply to minor gridlines along the Y-axis.\n/// @param {Number} $y-axis-minor-stroke-thickness [null] - Sets the thickness to apply to minor gridlines along the Y-axis.\n/// @param {Color} $y-axis-strip [null] - Sets the color to apply to stripes along the Y-axis.\n/// @param {Color} $y-axis-stroke [null] - Sets the color to apply to the Y-axis line.\n/// @param {Number} $y-axis-stroke-thickness [null] - Sets the thickness to apply to the Y-axis line.\n/// @param {String} $y-axis-title-alignment [null] - Sets Horizontal alignment of the Y-axis title.\n/// @param {Color} $y-axis-title-color [null] - Sets color of title on the Y-axis.\n/// @param {List} $y-axis-title-margin [null] - Sets the margin around the title on the Y-axis.\n/// @requires $light-material-schema\n/// @requires extend\n///\n/// @example scss\n///   $my-chart-theme: shape-chart-theme($brushes: (orange, blue, pink));\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($my-chart-theme);\n@function shape-chart-theme(\n    $schema: $light-material-schema,\n    $target: 'angular',\n\n    $margin: null,\n    $title-text-color: null,\n    $title-margin: null,\n    $subtitle-text-color: null,\n    $subtitle-margin: null,\n    $brushes: null,\n    $outlines: null,\n    $marker-brushes: null,\n    $marker-outlines: null,\n    $thickness: null,\n    $trend-line-brushes: null,\n    $trend-line-thickness: null,\n    $x-axis-label-margin: null,\n    $x-axis-label-text-color: null,\n    $x-axis-label-vertical-alignment: null,\n    $x-axis-major-stroke: null,\n    $x-axis-major-stroke-thickness: null,\n    $x-axis-minor-stroke: null,\n    $x-axis-minor-stroke-thickness: null,\n    $x-axis-strip: null,\n    $x-axis-stroke: null,\n    $x-axis-stroke-thickness: null,\n    $x-axis-title-alignment: null,\n    $x-axis-title-color: null,\n    $x-axis-title-margin: null,\n    $y-axis-label-margin: null,\n    $y-axis-label-text-color: null,\n    $y-axis-label-vertical-alignment: null,\n    $y-axis-major-stroke: null,\n    $y-axis-major-stroke-thickness: null,\n    $y-axis-minor-stroke: null,\n    $y-axis-minor-stroke-thickness: null,\n    $y-axis-strip: null,\n    $y-axis-stroke: null,\n    $y-axis-stroke-thickness: null,\n    $y-axis-title-alignment: null,\n    $y-axis-title-color: null,\n    $y-axis-title-margin: null\n) {\n    $name: 'shape-chart';\n    $selector: map.get(\n        (\n            'angular': 'igx-shape-chart',\n            'webc': 'igc-shape-chart',\n            'blazor': 'igb-shape-chart',\n        ),\n        $target\n    );\n    $chart-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $chart-schema: map.get($schema, $name);\n    } @else {\n        $chart-schema: $schema;\n    }\n\n    $theme: digest-schema($chart-schema);\n    $margin-default: map.get($theme, 'margin');\n    $title-margin-default: map.get($theme, 'title-margin');\n    $subtitle-margin-default: map.get($theme, 'subtitle-margin');\n    $x-axis-label-margin-default: map.get($theme, 'x-axis-label-margin');\n    $y-axis-label-margin-default: map.get($theme, 'y-axis-label-margin');\n    $x-axis-title-margin-default: map.get($theme, 'x-axis-title-margin');\n    $y-axis-title-margin-default: map.get($theme, 'y-axis-title-margin');\n\n    @if not($margin) {\n        $margin: $margin-default;\n    } @else {\n        $margin: expand-shorthand(($margin));\n    }\n\n    @if not($title-margin) {\n        $title-margin: $title-margin-default;\n    } @else {\n        $title-margin: map-keys-prefix(expand-shorthand(($title-margin)), 'title');\n    }\n\n    @if not($subtitle-margin) {\n        $subtitle-margin: $subtitle-margin-default;\n    } @else {\n        $subtitle-margin: map-keys-prefix(expand-shorthand(($subtitle-margin)), 'subtitle');\n    }\n\n    @if not($x-axis-label-margin) {\n        $x-axis-label-margin: $x-axis-label-margin-default;\n    } @else {\n        $x-axis-label-margin: map-keys-prefix(expand-shorthand(($x-axis-label-margin)), 'x-axis-label');\n    }\n\n    @if not($y-axis-label-margin) {\n        $y-axis-label-margin: $y-axis-label-margin-default;\n    } @else {\n        $y-axis-label-margin: map-keys-prefix(expand-shorthand(($y-axis-label-margin)), 'y-axis-label');\n    }\n\n    @if not($x-axis-title-margin) {\n        $x-axis-title-margin: $x-axis-title-margin-default;\n    } @else {\n        $x-axis-title-margin: map-keys-prefix(expand-shorthand(($x-axis-title-margin)), 'x-axis-title');\n    }\n\n    @if not($y-axis-title-margin) {\n        $y-axis-title-margin: $y-axis-title-margin-default;\n    } @else {\n        $y-axis-title-margin: map-keys-prefix(expand-shorthand(($y-axis-title-margin)), 'y-axis-title');\n    }\n\n    @return extend(\n        $theme,\n        $margin,\n        $title-margin,\n        $subtitle-margin,\n        $x-axis-label-margin,\n        $x-axis-title-margin,\n        $y-axis-label-margin,\n        $y-axis-title-margin,\n        (\n            name: $name,\n            selector: $selector,\n            title-text-color: $title-text-color,\n            subtitle-text-color: $subtitle-text-color,\n            brushes: $brushes,\n            outlines: $outlines,\n            thickness: $thickness,\n            trend-line-brushes: $trend-line-brushes,\n            trend-line-thickness: $trend-line-thickness,\n            x-axis-label-text-color: $x-axis-label-text-color,\n            x-axis-label-vertical-alignment: $x-axis-label-vertical-alignment,\n            x-axis-major-stroke: $x-axis-major-stroke,\n            x-axis-major-stroke-thickness: $x-axis-major-stroke-thickness,\n            x-axis-minor-stroke: $x-axis-minor-stroke,\n            x-axis-minor-stroke-thickness: $x-axis-minor-stroke-thickness,\n            x-axis-strip: $x-axis-strip,\n            x-axis-stroke: $x-axis-stroke,\n            x-axis-stroke-thickness: $x-axis-stroke-thickness,\n            x-axis-title-alignment: $x-axis-title-alignment,\n            x-axis-title-color: $x-axis-title-color,\n            y-axis-label-text-color: $y-axis-label-text-color,\n            y-axis-label-vertical-alignment: $y-axis-label-vertical-alignment,\n            y-axis-major-stroke: $y-axis-major-stroke,\n            y-axis-major-stroke-thickness: $y-axis-major-stroke-thickness,\n            y-axis-minor-stroke: $y-axis-minor-stroke,\n            y-axis-minor-stroke-thickness: $y-axis-minor-stroke-thickness,\n            y-axis-strip: $y-axis-strip,\n            y-axis-stroke: $y-axis-stroke,\n            y-axis-stroke-thickness: $y-axis-stroke-thickness,\n            y-axis-title-alignment: $y-axis-title-alignment,\n            y-axis-title-color: $y-axis-title-color,\n        )\n    );\n}\n\n/// Adds typography styles for the shape-chart component.\n/// Uses the 'h3', 'h4', 'h6', and 'subtitle-1'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(\n/// 'title': 'h6',\n/// 'subtitle': 'subtitle-1,\n/// 'x-axis-label-text-style': 'h4',\n/// 'y-axis-label-text-style': 'h4',\n/// 'x-axis-title-text-style': 'h3',\n/// 'y-axis-title-text-style': 'h3',\n/// )] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} type-style\n@mixin shape-chart-typography(\n    $type-scale,\n    $categories: (\n        'title': 'h6',\n        'subtitle': 'subtitle-1',\n        'x-axis-label-text-style': 'h4',\n        'y-axis-label-text-style': 'h4',\n        'x-axis-title-text-style': 'h3',\n        'y-axis-title-text-style': 'h3'\n    ),\n    $target: 'angular'\n) {\n    $name: 'shape-chart';\n    $selector: map.get(\n        (\n            'angular': 'igx-shape-chart',\n            'webc': 'igc-shape-chart',\n            'blazor': 'igb-shape-chart',\n        ),\n        $target\n    );\n    $title: map.get($categories, 'title');\n    $subtitle: map.get($categories, 'subtitle');\n    $x-axis-title-text-style: map.get($categories, 'x-axis-title-text-style');\n    $x-axis-label-text-style: map.get($categories, 'x-axis-label-text-style');\n    $y-axis-title-text-style: map.get($categories, 'y-axis-title-text-style');\n    $y-axis-label-text-style: map.get($categories, 'y-axis-label-text-style');\n    $title-styles: type-scale-category($type-scale, $title);\n    $subtitle-styles: type-scale-category($type-scale, $subtitle);\n    $x-axis-title-styles: type-scale-category($type-scale, $x-axis-title-text-style);\n    $x-axis-label-styles: type-scale-category($type-scale, $x-axis-label-text-style);\n    $y-axis-title-styles: type-scale-category($type-scale, $y-axis-title-text-style);\n    $y-axis-label-styles: type-scale-category($type-scale, $y-axis-label-text-style);\n\n    #{$selector} {\n        @include font-var('title-text-style', $title-styles, $name);\n        @include font-var('subtitle-text-style', $subtitle-styles, $name);\n        @include font-var('x-axis-title-text-style', $x-axis-title-styles, $name);\n        @include font-var('x-axis-label-text-style', $x-axis-label-styles, $name);\n        @include font-var('y-axis-title-text-style', $y-axis-title-styles, $name);\n        @include font-var('y-axis-label-text-style', $y-axis-label-styles, $name);\n    }\n}\n","@use 'igniteui-theming/sass/bem' as *;\n\n%display-container {\n    display: inherit;\n    flex-flow: inherit;\n    position: relative;\n    width: 100%;\n    overflow: hidden;\n    flex-shrink: 0;\n}\n\n%display-container--inactive {\n    width: 100%;\n}\n\n@mixin component {\n    @include b(igx-display-container) {\n        @extend %display-container !optional;\n\n        @include m(inactive) {\n            @extend %display-container--inactive !optional;\n        }\n    }\n}\n","@use \"igniteui-angular/theming\" as *;\n@use \"sass:map\";\n\n$include: (\n  igx-ripple,\n  igx-icon,\n  igx-button,\n  igx-input-group,\n  igx-drop-down,\n  igx-select,\n  igx-dialog,\n  igx-tooltip,\n  igx-toast,\n  igx-overlay,\n  igx-checkbox\n);\n\n@include core();\n@include theme(\n  $palette: $default-palette,\n  $schema: $dark-material-schema,\n  $exclude: map.keys(map.remove($components, $include...))\n);\n\n$custom-input-group: input-group-theme(\n  $filled-text-color: #ffffff,\n  $focused-text-color: #ffffff,\n  $idle-text-color: #ffffff,\n  $idle-bottom-line-color: #ffffff,\n  $interim-bottom-line-color: #ffffff,\n  $hover-bottom-line-color: #ffffff,\n  $focused-secondary-color: #facc15,\n);\n$custom-drop-down-group: drop-down-theme(\n  $selected-item-background: #e5e7eb,\n  $selected-hover-item-background: #e5e7eb,\n  $selected-focus-item-background: #e5e7eb,\n);\n$custom-dialog-theme: dialog-theme(\n  $background: #172554,\n);\n@include css-vars($custom-input-group);\n@include css-vars($custom-drop-down-group);\n@include css-vars($custom-dialog-theme);\n\n/* You can add global styles to this file, and also import other style files */\n@import \"tailwindcss/base\";\n@import \"tailwindcss/components\";\n@import \"tailwindcss/utilities\";\n\n// Correção para o dialog da tela de lista de baralhos\n.igx-dialog__window {\n  max-width: 80%;\n  max-height: 80%;\n  margin: auto;\n}\n","@use 'igniteui-theming/sass/bem' as *;\n\n%drag {\n    touch-action: none;\n}\n\n%drag--select-disabled {\n    user-select: none;\n}\n\n%drag-handle {\n    user-select: none;\n}\n\n@mixin component {\n    @include b(igx-drag) {\n        @extend %drag !optional;\n\n        @include e(handle) {\n            @extend %drag-handle !optional;\n        }\n\n        @include m(select-disabled) {\n            @extend %drag--select-disabled !optional;\n        }\n    }\n}\n","@use 'igniteui-theming/sass/bem' as *;\n\n/// @group themes\n/// @access private\n%vhelper-display {\n    display: block;\n    overflow: auto;\n    z-index: 10001;\n}\n\n%vhelper--vertical {\n    position: absolute;\n    top: 0;\n    inset-inline-end: 0;\n}\n\n%vhelper--horizontal {\n    width: 100%;\n}\n\n%vhelper-content--vertical {\n    width: 1px;\n}\n\n%vhelper-content--horizontal {\n    height: 1px;\n}\n\n@mixin component {\n    @include b(igx-vhelper) {\n        @include m(vertical) {\n            @extend %vhelper-display !optional;\n            @extend %vhelper--vertical !optional;\n\n            @include e(placeholder-content) {\n                @extend %vhelper-content--vertical !optional;\n            }\n        }\n\n        @include m(horizontal) {\n            @extend %vhelper-display !optional;\n            @extend %vhelper--horizontal !optional;\n\n            @include e(placeholder-content) {\n                @extend %vhelper-content--horizontal !optional;\n            }\n        }\n    }\n}\n","@use '../../../../utils/map' as *;\n@use '../../../../typography/functions' as *;\n@use '../elevation/button' as *;\n\n/* stylelint-disable max-line-length */\n\n////\n/// @package theming\n/// @group schemas\n/// @access public\n////\n\n/// @type {Map}\n/// @prop {Color} shadow-color [transparent] - The shadow color of the button.\n/// @prop {Color} border-color [transparent] - The outline color of the button.\n/// @prop {Color} hover-border-color [transparent] - The hover border color of the button.\n/// @prop {Color} focus-border-color [transparent] - The focus border color of the button.\n/// @prop {Color} focus-visible-border-color [transparent] - The focus-visible border color of the button.\n/// @prop {Color} active-border-color [transparent] - The active border color of the button.\n/// @prop {Color} disabled-border-color [transparent] - The disabled border color of the button.\n/// @prop {Map} disabled-background [color: ('gray', 300)] - The disabled background color of the button.\n/// @prop {Map} disabled-foreground [color: ('gray', 500)] - The disabled foreground color of the button.\n/// @prop {List} size [(rem(24px), rem(30px), rem(36px))] - The size used for the button.\n/// @prop {Number} default-size [1] - The default size used for the button component.\n$material-base-button: (\n    shadow-color: transparent,\n    border-color: transparent,\n    hover-border-color: transparent,\n    focus-border-color: transparent,\n    focus-visible-border-color: transparent,\n    active-border-color: transparent,\n    disabled-border-color: transparent,\n    disabled-background: (\n        color: (\n            'gray',\n            300,\n        ),\n    ),\n    disabled-foreground: (\n        color: (\n            'gray',\n            500,\n        ),\n    ),\n    size: (\n        sizable: (\n            rem(24px),\n            rem(30px),\n            rem(36px),\n        ),\n    ),\n    default-size: 1,\n);\n\n/// @type {Map}\n/// @prop {Color} background [transparent] - The background color of a flat button.\n/// @prop {Map} foreground [color: ('secondary', 500)] - The idle text color of a flat button.\n/// @prop {Map} hover-background [color: ('secondary', 500, .05)] - The hover background color of a flat button.\n/// @prop {Map} hover-foreground [color: ('secondary', 500)] - The hover text color of a flat button.\n/// @prop {Map} focus-background [color: ('secondary', 400, .12)] - The focus background color of a flat button.\n/// @prop {Map} focus-foreground [color: ('secondary', 500)] - The focus text color of a flat button.\n/// @prop {Map} focus-visible-background ['secondary', 400, .12)] - The focus-visible background color of a flat button.\n/// @prop {Map} focus-visible-foreground ['secondary', 500)] - The focus-visible text color of a flat button.\n/// @prop {Map} active-background [color: ('secondary', 400, .12)] - The active background color of a flat button.\n/// @prop {Map} active-foreground [color: ('secondary', 500)] - The active text color of a flat button.\n/// @prop {Color} disabled-background [transparent] - The disabled background color a flat button.\n/// @prop {List} border-radius [(rem(4px), rem(0), rem(20px))] - The border radius used for flat button.\n/// @requires {Map} $material-base-button\n/// @requires {Map} $flat-elevation-button\n$material-flat-button: extend(\n    $material-base-button,\n    $flat-elevation-button,\n    (\n        selector: '[igxButton=\"flat\"], .igx-button--flat',\n        background: transparent,\n        foreground: (\n            color: (\n                'secondary',\n                500,\n            ),\n        ),\n        hover-background: (\n            color: (\n                'secondary',\n                500,\n                0.05,\n            ),\n        ),\n        hover-foreground: (\n            color: (\n                'secondary',\n                500,\n            ),\n        ),\n        focus-background: (\n            color: (\n                'secondary',\n                400,\n                0.12,\n            ),\n        ),\n        focus-foreground: (\n            color: (\n                'secondary',\n                500,\n            ),\n        ),\n        focus-visible-background: (\n            color: (\n                'secondary',\n                400,\n                0.12,\n            ),\n        ),\n        focus-visible-foreground: (\n            color: (\n                'secondary',\n                500,\n            ),\n        ),\n        active-background: (\n            color: (\n                'secondary',\n                400,\n                0.12,\n            ),\n        ),\n        active-foreground: (\n            color: (\n                'secondary',\n                500,\n            ),\n        ),\n        disabled-background: transparent,\n        border-radius: (\n            border-radius: (\n                rem(4px),\n                rem(0),\n                rem(20px),\n            ),\n        ),\n    )\n);\n\n/// @type {Map}\n/// @prop {Map} border-color [color: ('secondary', 500)] - The outline color of an outlined button.\n/// @prop {Map} hover-border-color [color: ('secondary', 500)] - The hover border color of an outlined button.\n/// @prop {Map} focus-border-color [color: ('secondary', 500)] - The focus border color of an outlined button.\n/// @prop {Map} focus-visible-border-color [color: ('secondary', 500)] - The focus-visible border color of an outlined button.\n/// @prop {Map} active-border-color [color: ('secondary', 500)] - The active border color of an outlined button.\n/// @prop {Map} disabled-border-color [color: ('gray', 300)] - The disabled focused border color of an outlined button.\n/// @requires {Map} $material-flat-button\n$material-outlined-button: extend(\n    $material-flat-button,\n    (\n        selector: '[igxButton=\"outlined\"], .igx-button--outlined',\n        border-color: (\n            color: (\n                'secondary',\n                500,\n            ),\n        ),\n        hover-border-color: (\n            color: (\n                'secondary',\n                500,\n            ),\n        ),\n        focus-border-color: (\n            color: (\n                'secondary',\n                500,\n            ),\n        ),\n        focus-visible-border-color: (\n            color: (\n                'secondary',\n                500,\n            ),\n        ),\n        active-border-color: (\n            color: (\n                'secondary',\n                500,\n            ),\n        ),\n        disabled-border-color: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n    )\n);\n\n/// @type {Map}\n/// @prop {Map} background [color: ('secondary', 500)] - The background color of an raised button.\n/// @prop {Map} foreground [contrast-color: ('secondary', 500)] - The idle text color of a raised button.\n/// @prop {Map} hover-background [color: ('secondary', 300)] - The hover background of a raised button.\n/// @prop {Map} hover-foreground [contrast-color: ('secondary', 300)] - The hover text color of a raised button.\n/// @prop {Map} focus-background [color: ('secondary', 300)] - The focus background color of a raised button.\n/// @prop {Map} focus-foreground [contrast-color: ('secondary', 300)] - The focus text color of a raised button.\n/// @prop {Map} focus-visible-background [color: ('secondary', 300)] - The focus-visible background color of a raised button.\n/// @prop {Map} focus-visible-foreground [contrast-color: ('secondary', 300)] - The focus-visible text color of a raised button.\n/// @prop {Map} active-background [color: ('secondary', 300)] - The active background color of a raised button.\n/// @prop {Map} active-foreground [contrast-color: ('secondary', 300)] - The active text color of a raised button.\n/// @prop {Number} resting-elevation [2] - The elevation level, between 0-24, to be used for the resting state.\n/// @prop {Number} hover-elevation [4] - The elevation level, between 0-24, to be used for the hover state.\n/// @prop {Number} focus-elevation [8] - The elevation level, between 0-24, to be used for the focus state.\n/// @prop {List} border-radius [(rem(4px), rem(0), rem(20px))] - The border radius used for raised button.\n/// @requires {Map} $material-base-button\n/// @requires {Map} $material-raised-elevation\n$material-raised-button: extend(\n    $material-base-button,\n    $material-raised-elevation,\n    (\n        selector: '[igxButton=\"raised\"], .igx-button--raised',\n        background: (\n            color: (\n                'secondary',\n                500,\n            ),\n        ),\n        foreground: (\n            contrast-color: (\n                'secondary',\n                500,\n            ),\n        ),\n        hover-background: (\n            color: (\n                'secondary',\n                300,\n            ),\n        ),\n        hover-foreground: (\n            contrast-color: (\n                'secondary',\n                300,\n            ),\n        ),\n        focus-background: (\n            color: (\n                'secondary',\n                300,\n            ),\n        ),\n        focus-foreground: (\n            contrast-color: (\n                'secondary',\n                300,\n            ),\n        ),\n        focus-visible-background: (\n            color: (\n                'secondary',\n                300,\n            ),\n        ),\n        focus-visible-foreground: (\n            contrast-color: (\n                'secondary',\n                300,\n            ),\n        ),\n        active-background: (\n            color: (\n                'secondary',\n                300,\n            ),\n        ),\n        active-foreground: (\n            contrast-color: (\n                'secondary',\n                300,\n            ),\n        ),\n        border-radius: (\n            border-radius: (\n                rem(4px),\n                rem(0),\n                rem(20px),\n            ),\n        ),\n    )\n);\n\n/// @type {Map}\n/// @prop {Number} resting-elevation [6] - The elevation level, between 0-24, to be used for the resting state.\n/// @prop {Number} hover-elevation [12] - The elevation level, between 0-24, to be used for the hover state.\n/// @prop {Number} focus-elevation [12] - The elevation level, between 0-24, to be used for the focus state.\n/// @prop {List} border-radius [(rem(28px), rem(12px), rem(28px))] - The border radius used for floating button.\n/// @prop {List} size [(rem(32px), rem(40px), rem(48px))] - The size used for floating button.\n/// @requires {Map} $material-raised-button\n/// @requires {Map} $material-fab-elevation\n$material-fab-button: extend(\n    $material-raised-button,\n    $material-fab-elevation,\n    (\n        selector: '[igxButton=\"fab\"], .igx-button--fab',\n        border-radius: (\n            border-radius: (\n                rem(28px),\n                rem(12px),\n                rem(28px),\n            ),\n        ),\n        size: (\n            sizable: (\n                rem(32px),\n                rem(40px),\n                rem(48px),\n            ),\n        ),\n    )\n);\n\n/// @type {Map}\n/// @prop {Color} background [transparent] - The background color of the an icon button.\n/// @prop {Map} foreground [color: ('gray', 900)] - The icon color of an icon button.\n/// @prop {Map} hover-background [color: ('gray', 100)] - The hover background color of an icon button.\n/// @prop {Color} hover-foreground [transparent] - The hover icon color of an icon button.\n/// @prop {Map} focus-background [color: ('gray', 200] - The focus background color an icon button.\n/// @prop {Map} focus-foreground [color: ('gray', 900)] - The focus icon color of an icon button.\n/// @prop {Map} focus-visible-background [color: ('gray', 200] - The focus-visible background color an icon button.\n/// @prop {Map} focus-visible-foreground [color: ('gray', 900)] - The focus-visible icon color of an icon button.\n/// @prop {Map} active-background [color: ('gray', 200] - The active background color an icon button.\n/// @prop {Map} active-foreground [color: ('gray', 900)] - The active icon color of an icon button.\n/// @prop {Color} disabled-background [transparent] - The disabled background color an icon button.\n/// @prop {Map} focus-border-color [color: ('gray', 400)] - The focus border color of the button.\n/// @prop {Map} focus-visible-border-color [color: ('gray', 400)] - The focus-visible border color of the button.\n/// @prop {Map} active-border-color [color: ('gray', 400)] - The active border color of the button.\n/// @prop {List} border-radius [(rem(20px), rem(0), rem(20px))] - The border radius used for floating button.\n/// @prop {List} size [(rem(24px), rem(30px), rem(36px))] - The size used for icon button.\n/// @prop {Number} default-size [2] - The default size used for the icon button component.\n/// @requires {Map} $material-base-button\n/// @requires {Map} $material-ib-elevation\n$material-icon-button: extend(\n    $material-base-button,\n    $material-ib-elevation,\n    (\n        selector: '[igxButton=\"icon\"], .igx-button--icon',\n        background: transparent,\n        foreground: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        hover-background: transparent,\n        hover-foreground: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        focus-background: (\n            color: (\n                'gray',\n                200,\n            ),\n        ),\n        focus-foreground: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        focus-visible-background: (\n            color: (\n                'gray',\n                200,\n            ),\n        ),\n        focus-visible-foreground: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        active-background: (\n            color: (\n                'gray',\n                200,\n            ),\n        ),\n        active-foreground: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        disabled-background: transparent,\n        active-border-color: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n        focus-border-color: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n        focus-visible-border-color: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n        border-radius: (\n            border-radius: (\n                rem(20px),\n                rem(0),\n                rem(20px),\n            ),\n        ),\n        size: (\n            sizable: (\n                rem(24px),\n                rem(30px),\n                rem(36px),\n            ),\n        ),\n        default-size: 2,\n    )\n);\n\n/// Generates a light material button schema.\n/// @type {Map}\n/// @requires {Map} $material-flat-button\n/// @requires {Map} $material-outlined-button\n/// @requires {Map} $material-raised-button\n/// @requires {Map} $material-fab-button\n/// @requires {Map} $material-icon-button\n$light-button: (\n    flat: $material-flat-button,\n    outlined: $material-outlined-button,\n    raised: $material-raised-button,\n    fab: $material-fab-button,\n    icon: $material-icon-button,\n);\n\n/// @type {Map}\n/// @requires {Map} $material-base-button\n/// @requires {Map} $flat-elevation-button\n/// @prop {Map} disabled-background [color: ('gray', 200)] - The disabled background color of the button.\n/// @prop {Map} disabled-foreground [color: ('gray', 400)] - The disabled foreground color of the button.\n/// @prop {List} size [(rem(24px), rem(32px), rem(38px))] - The size used for the button.\n/// @prop {Number} default-size [2] - The default size used for the button component.\n$fluent-base-button: extend(\n    $material-base-button,\n    $flat-elevation-button,\n    (\n        disabled-background: (\n            color: (\n                'gray',\n                200,\n            ),\n        ),\n        disabled-foreground: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n        size: (\n            sizable: (\n                rem(24px),\n                rem(32px),\n                rem(38px),\n            ),\n        ),\n        default-size: 2,\n    )\n);\n\n/// @type {Map}\n/// @prop {Map} focus-visible-border-color [color: ('gray', 800)] - The focus-visible border color of a flat button.\n/// @prop {Map} foreground [color: ('gray', 900)] - The idle text color of a flat button.\n/// @prop {Color} hover-background [transparent] - The hover background color of a flat button.\n/// @prop {Color} focus-background [transparent] - The focus background color of a flat button.\n/// @prop {Color} focus-visible-background [transparent] - The focus-visible background color of a flat button.\n/// @prop {Color} focus-visible-foreground [color: ('gray', 800)] - The focus-visible text color of a flat button.\n/// @prop {Map} hover-foreground [color: ('primary', 500)] - The hover text color of a flat button.\n/// @prop {Map} active-foreground [color: ('gray', 900)] - The active text color of a flat button.\n/// @prop {Color} disabled-background [transparent] - The disabled background color of a flat button.\n/// @prop {List} border-radius [(rem(0), rem(0), rem(20px))] - The border radius used for flat button.\n/// @requires {Map} $material-flat-button\n/// @requires {Map} $fluent-base-button\n$fluent-flat-button: extend(\n    $material-flat-button,\n    $fluent-base-button,\n    (\n        foreground: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        hover-background: transparent,\n        focus-background: transparent,\n        focus-visible-background: transparent,\n        active-background: transparent,\n        focus-visible-border-color: (\n            color: (\n                'gray',\n                800,\n            ),\n        ),\n        hover-foreground: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        focus-visible-foreground: (\n            color: (\n                'gray',\n                800,\n            ),\n        ),\n        active-foreground: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        disabled-background: transparent,\n        border-radius: (\n            border-radius: (\n                rem(0),\n                rem(0),\n                rem(20px),\n            ),\n        ),\n    )\n);\n\n/// @type {Map}\n/// @prop {Map} border-color [color: ('gray', 800)] - The border color of an outlined button.\n/// @prop {Map} hover-border-color [color: ('gray', 800)] - The hover border color of an outlined button.\n/// @prop {Map} focus-border-color [color: ('gray', 800)] - The focus border color of an outlined button.\n/// @prop {Map} focus-visible-border-color [color: ('gray', 800)] - The focus-visible border color of an outlined button.\n/// @prop {Map} active-border-color [color: ('gray', 800)] - The active border color of an outlined button.\n/// @prop {Map} foreground [color: ('gray', 900)] - The idle text color of an outlined button.\n/// @prop {Map} hover-background [color: ('gray', 100)] - The hover background color of an outlined button.\n/// @prop {Map} hover-foreground [color: ('gray', 900)] - The hover text color of an outlined button.\n/// @prop {Map} focus-background [color: ('gray', 100)] - The focus background color of an outlined button.\n/// @prop {Map} focus-foreground [color: ('gray', 900)] - The focus text color of an outlined button.\n/// @prop {Color} focus-visible-background [transparent] - The focus-visible background color of an outlined button.\n/// @prop {Map} focus-visible-foreground [color: ('gray', 900)] - The focus-visible text color of an outlined button.\n/// @prop {Map} active-background [color: ('gray', 100)] - The active background color of an outlined button.\n/// @prop {Map} active-foreground [color: ('gray', 900)] - The active text color of an outlined button.\n/// @prop {Map} disabled-background [color: ('gray', 200)] - The disabled background color of an outlined button.\n/// @prop {Map} disabled-foreground [color: ('gray', 400, .5)] - The disabled foreground color of an outlined button.\n/// @prop {List} border-radius [(rem(2px), rem(0), rem(20px))] - The border radius used for outlined button.\n/// @requires {Map} $material-outlined-button\n/// @requires {Map} $fluent-base-button\n$fluent-outlined-button: extend(\n    $material-outlined-button,\n    $fluent-base-button,\n    (\n        border-color: (\n            color: (\n                'gray',\n                800,\n            ),\n        ),\n        hover-border-color: (\n            color: (\n                'gray',\n                800,\n            ),\n        ),\n        focus-border-color: (\n            color: (\n                'gray',\n                800,\n            ),\n        ),\n        focus-visible-border-color: (\n            color: (\n                'gray',\n                800,\n            ),\n        ),\n        active-border-color: (\n            color: (\n                'gray',\n                800,\n            ),\n        ),\n        foreground: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        hover-background: (\n            color: (\n                'gray',\n                200,\n            ),\n        ),\n        hover-foreground: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        focus-background: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        focus-foreground: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        focus-visible-background: transparent,\n        focus-visible-foreground: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        active-background: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        active-foreground: (\n            contrast-color: (\n                'gray',\n                300,\n            ),\n        ),\n        disabled-background: (\n            color: (\n                'gray',\n                200,\n            ),\n        ),\n        disabled-foreground: (\n            color: (\n                'gray',\n                400,\n                0.5,\n            ),\n        ),\n        border-radius: (\n            border-radius: (\n                rem(2px),\n                rem(0),\n                rem(20px),\n            ),\n        ),\n    )\n);\n\n/// @type {Map}\n/// @prop {Map} border-color [contrast-color: ('gray', 900)] - The border color of a raised button.\n/// @prop {Map} hover-border-color [contrast-color: ('gray', 900)] - The hover border color of a raised button.\n/// @prop {Map} focus-border-color [contrast-color: ('gray', 900)] - The focus border color of a raised button.\n/// @prop {Map} focus-visible-border-color [contrast-color: ('gray', 900)] - The focus-visible border color of a raised button.\n/// @prop {Map} active-border-color [contrast-color: ('gray', 900)] - The active border color of a raised button.\n/// @prop {Map} background [color: ('primary', 500)] - The background color of an raised button.\n/// @prop {Map} foreground [contrast-color: ('primary', 900] - The idle text color of a raised button.\n/// @prop {Map} hover-background [color: ('primary', 600)] - The hover background of a raised button.\n/// @prop {Map} hover-foreground [contrast-color: ('primary', 900)] - The hover text color of a raised button.\n/// @prop {Map} focus-background [color: ('primary', 600)] - The focus background color of a raised button.\n/// @prop {Map} focus-foreground [contrast-color: ('primary', 900)] - The focus text color of a raised button.\n/// @prop {Map} focus-visible-background [color: ('primary', 600)] - The focus-visible background color of a raised button.\n/// @prop {Map} focus-visible-foreground [contrast-color: ('primary', 900)] - The focus-visible text color of a raised button.\n/// @prop {Map} active-background [color: ('primary', 800)] - The active background color of a raised button.\n/// @prop {Map} active-foreground [contrast-color: ('primary', 900)] - The active text color of a raised button.\n/// @prop {Number} resting-elevation [0] - The elevation level, between 0-24, to be used for the resting state.\n/// @prop {Number} hover-elevation [0] - The elevation level, between 0-24, to be used for the hover state.\n/// @prop {Number} focus-elevation [0] - The elevation level, between 0-24, to be used for the focus state.\n/// @prop {List} border-radius [(rem(2px), rem(0), rem(20px))] - The border radius used for raised button.\n/// @requires {Map} $material-raised-button\n/// @requires {Map} $fluent-base-button\n$fluent-raised-button: extend(\n    $material-raised-button,\n    $fluent-base-button,\n    (\n        border-color: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        hover-border-color: (\n            color: (\n                'primary',\n                600,\n            ),\n        ),\n        focus-border-color: (\n            color: (\n                'primary',\n                600,\n            ),\n        ),\n        focus-visible-border-color: (\n            color: (\n                'primary',\n                600,\n            ),\n        ),\n        active-border-color: (\n            color: (\n                'primary',\n                800,\n            ),\n        ),\n        background: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        foreground: (\n            contrast-color: (\n                'primary',\n                900,\n            ),\n        ),\n        hover-background: (\n            color: (\n                'primary',\n                600,\n            ),\n        ),\n        hover-foreground: (\n            contrast-color: (\n                'primary',\n                900,\n            ),\n        ),\n        focus-background: (\n            color: (\n                'primary',\n                600,\n            ),\n        ),\n        focus-foreground: (\n            contrast-color: (\n                'primary',\n                900,\n            ),\n        ),\n        focus-visible-background: (\n            color: (\n                'primary',\n                600,\n            ),\n        ),\n        focus-visible-foreground: (\n            contrast-color: (\n                'primary',\n                900,\n            ),\n        ),\n        active-background: (\n            color: (\n                'primary',\n                800,\n            ),\n        ),\n        active-foreground: (\n            contrast-color: (\n                'primary',\n                900,\n            ),\n        ),\n        border-radius: (\n            border-radius: (\n                rem(2px),\n                rem(0),\n                rem(20px),\n            ),\n        ),\n    )\n);\n\n/// @type {Map}\n/// @prop {Map} border-color [contrast: ('gray', 900)] - The border color of a fab button.\n/// @prop {Map} hover-border-color [contrast-color: ('gray', 900)] - The hover border color of a fab button.\n/// @prop {Map} focus-border-color [contrast-color: ('gray', 900)] - The focus border color of a fab button.\n/// @prop {Map} focus-visible-border-color [contrast-color: ('gray', 900)] - The focus-visible border color of a fab button.\n/// @prop {Map} active-border-color [contrast-color: ('gray', 900)] - The active border color of a fab button.\n/// @prop {Number} resting-elevation [0] - The elevation level, between 0-24, to be used for the resting state.\n/// @prop {Number} hover-elevation [0] - The elevation level, between 0-24, to be used for the hover state.\n/// @prop {Number} focus-elevation [0] - The elevation level, between 0-24, to be used for the focus state.\n/// @prop {List} border-radius [(rem(14px), rem(12px), rem(28px))] - The border radius used for fab button.\n/// @requires {Map} $fluent-base-button\n/// @requires {Map} $fluent-raised-button\n$fluent-fab-button: extend(\n    $fluent-base-button,\n    $fluent-raised-button,\n    (\n        selector: '[igxButton=\"fab\"], .igx-button--fab',\n        border-color: (\n            contrast-color: (\n                'gray',\n                900,\n            ),\n        ),\n        hover-border-color: (\n            contrast-color: (\n                'gray',\n                900,\n            ),\n        ),\n        focus-border-color: (\n            contrast-color: (\n                'gray',\n                900,\n            ),\n        ),\n        focus-visible-border-color: (\n            contrast-color: (\n                'gray',\n                900,\n            ),\n        ),\n        active-border-color: (\n            contrast-color: (\n                'gray',\n                900,\n            ),\n        ),\n        border-radius: (\n            border-radius: (\n                rem(14px),\n                rem(12px),\n                rem(28px),\n            ),\n        ),\n    )\n);\n\n/// @type {Map}\n/// @prop {Color} border-color [transparent] - The border color of an icon button.\n/// @prop {Map} hover-border-color [color: ('gray', 500)] - The hover border color of an icon button.\n/// @prop {Map} focus-border-color [color: ('gray', 500)] - The focus border color of an icon button.\n/// @prop {Map} focus-visible-border-color [color: ('gray', 500)] - The focus-visible border color of an icon button.\n/// @prop {Map} active-border-color [color: ('gray', 500)] - The active border color of an icon button.\n/// @prop {Map} hover-background [color: ('gray', 200)] - The hover background color of an icon button.\n/// @prop {Map} hover-foreground [contrast-color: ('primary')] - The hover text color of a an icon button.\n/// @prop {Color} focus-background [transparent] - The focus icon color of an icon button.\n/// @prop {Map} focus-foreground [contrast-color: ('primary')] - The focus text color of an icon button.\n/// @prop {Color} focus-visible-background [transparent] - The focus-visible icon color of an icon button.\n/// @prop {Map} focus-visible-foreground [contrast-color: ('primary')] - The focus-visible text color of an icon button.\n/// @prop {Map} active-background [color: ('gray', 300)] - The active background color of an icon button.\n/// @prop {Map} active-foreground [contrast-color: ('primary')] - The active text color of an icon button.\n/// @prop {Map} disabled-background [color: ('gray', 100)] - The disabled background color of an icon button.\n/// @prop {Map} disabled-foreground [color: ('gray', 400)] - The disabled foreground color of an icon button.\n/// @prop {Map} disabled-border-color [color: ('gray', 100), lighten: 35%] - The disabled focused border color of an icon button.\n/// @prop {List} border-radius [(rem(0), rem(0), rem(20px))] - The border radius used for icon button.\n/// @prop {List} size [(rem(24px), rem(32px), rem(38px))] - The size used for the icon button.\n/// @requires {Map} $material-icon-button\n/// @requires {Map} $fluent-base-button\n$fluent-icon-button: extend(\n    $material-icon-button,\n    $fluent-base-button,\n    (\n        foreground: (\n            color: (\n                'primary',\n            ),\n        ),\n        focus-visible-border-color: (\n            color: (\n                'gray',\n                500,\n            ),\n        ),\n        hover-background: (\n            color: (\n                'gray',\n                200,\n            ),\n        ),\n        hover-foreground: (\n            color: (\n                'primary',\n            ),\n        ),\n        focus-background: transparent,\n        focus-foreground: (\n            color: (\n                'primary',\n            ),\n        ),\n        focus-visible-background: transparent,\n        focus-visible-foreground: (\n            color: (\n                'primary',\n            ),\n        ),\n        active-background: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        active-foreground: (\n            color: (\n                'primary',\n            ),\n        ),\n        disabled-background: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        disabled-foreground: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n        disabled-border-color: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        border-radius: (\n            border-radius: (\n                rem(0),\n                rem(0),\n                rem(20px),\n            ),\n        ),\n        size: (\n            sizable: (\n                rem(24px),\n                rem(32px),\n                rem(38px),\n            ),\n        ),\n    )\n);\n\n/// Generates a light fluent button schema.\n/// @type {Map}\n/// @requires {Map} $fluent-flat-button\n/// @requires {Map} $fluent-outlined-button\n/// @requires {Map} $fluent-raised-button\n/// @requires {Map} $fluent-fab-button\n/// @requires {Map} $fluent-icon-button\n$fluent-button: (\n    flat: $fluent-flat-button,\n    outlined: $fluent-outlined-button,\n    raised: $fluent-raised-button,\n    fab: $fluent-fab-button,\n    icon: $fluent-icon-button,\n);\n\n/// @type {Map}\n/// @prop {Map} disabled-background [color: ('primary', 50)] - The disabled background color of the button.\n/// @prop {Map} disabled-foreground [color: ('primary', 200)] - The disabled foreground color of the button.\n/// @prop {List} size [(rem(31px), rem(38px), rem(48px))] - The size used for the button.\n/// @prop {Number} default-size [2] - The default size used for the button component.\n/// @requires {Map} $material-base-button\n/// @requires {Map} $flat-elevation-button\n$bootstrap-base-button: extend(\n    $material-base-button,\n    $flat-elevation-button,\n    (\n        disabled-foreground: (\n            color: (\n                'primary',\n                200,\n            ),\n        ),\n        disabled-background: (\n            color: (\n                'primary',\n                50,\n            ),\n        ),\n        size: (\n            sizable: (\n                rem(31px),\n                rem(38px),\n                rem(48px),\n            ),\n        ),\n        default-size: 2,\n    )\n);\n\n/// @type {Map}\n/// @prop {Map} foreground [color: ('primary', 500)] - The idle text color of a flat button.\n/// @prop {Color} hover-background [transparent] - The hover background color of a flat button.\n/// @prop {Map} hover-foreground [color: ('primary', 800)] - The hover text color of a flat button.\n/// @prop {Map} focus-background [transparent] - The focus background color of a flat button.\n/// @prop {Map} focus-foreground [color: ('primary', 600)] - The focus text color of a flat button.\n/// @prop {Map} focus-visible-background [transparent] - The focus-visible background color of a flat button.\n/// @prop {Map} focus-visible-foreground [color: ('primary', 600)] - The focus-visible text color of a flat button.\n/// @prop {Map} active-background [transparent] - The active background color of a flat button.\n/// @prop {Map} active-foreground [color: ('primary', 600)] - The active background color of a flat button.\n/// @prop {Color} disabled-background [transparent] - The disabled background color of a flat button.\n/// @requires {Map} $material-flat-button\n/// @requires {Map} $bootstrap-base-button\n$bootstrap-flat-button: extend(\n    $material-flat-button,\n    $bootstrap-base-button,\n    (\n        foreground: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        hover-background: transparent,\n        hover-foreground: (\n            color: (\n                'primary',\n                800,\n            ),\n        ),\n        focus-background: transparent,\n        focus-foreground: (\n            color: (\n                'primary',\n                600,\n            ),\n        ),\n        focus-visible-background: transparent,\n        focus-visible-foreground: (\n            color: (\n                'primary',\n                600,\n            ),\n        ),\n        active-background: transparent,\n        active-foreground: (\n            color: (\n                'primary',\n                600,\n            ),\n        ),\n        disabled-background: transparent,\n        shadow-color: (\n            color: (\n                'primary',\n                200,\n                0.5,\n            ),\n        ),\n    )\n);\n\n/// @type {Map}\n/// @prop {Map} foreground [color: ('primary', 500)] - The idle text color of an outlined button.\n/// @prop {Map} hover-background [color: ('primary', 500)] - The hover background color of an outlined button.\n/// @prop {Color} hover-foreground [contrast-color: ('primary', 600)] - The hover text color of an outlined button.\n/// @prop {Color} focus-background [transparent] - The focus background color of an outlined button.\n/// @prop {Color} focus-foreground [contrast-color: ('primary', 500)] - The focus text color of an outlined button.\n/// @prop {Color} focus-visible-background [transparent] - The focus-visible background color of an outlined button.\n/// @prop {Color} focus-visible-foreground [color: ('primary', 500)] - The focus-visible text color of an outlined button.\n/// @prop {Map} active-background [color: ('primary', 700)] - The active background color of an outlined button.\n/// @prop {Map} active-foreground [contrast-color: ('primary', 700)] - The active text color of an outlined button.\n/// @prop {Map} border-color [color: ('primary', 500)] - The border color of an outlined button.\n/// @prop {Map} hover-border-color [color: ('primary', 500)] - The hover border color of an outlined button.\n/// @prop {Map} focus-border-color [color: ('primary', 500)] - The focus border color of an outlined button.\n/// @prop {Map} focus-visible-border-color [color: ('primary', 500)] - The focus-visible border color of an outlined button.\n/// @prop {Map} active-border-color [color: ('primary', 500)] - The active border color of an outlined button.\n/// @prop {Map} disabled-border-color [color: ('primary', 50), lighten: 35%] - The disabled focused border color of an outlined button.\n/// @prop {Color} disabled-background [transparent] - The disabled background color of an outlined button.\n/// @prop {Map} shadow-color [color: ('primary', 200, .5)] - The shadow color of an outlined button.\n/// @requires {Map} $material-outlined-button\n/// @requires {Map} $bootstrap-base-button\n$bootstrap-outlined-button: extend(\n    $material-outlined-button,\n    $bootstrap-base-button,\n    (\n        foreground: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        hover-background: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        hover-foreground: (\n            contrast-color: (\n                'primary',\n                600,\n            ),\n        ),\n        focus-background: transparent,\n        focus-foreground: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        focus-visible-background: transparent,\n        focus-visible-foreground: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        active-background: (\n            color: (\n                'primary',\n                700,\n            ),\n        ),\n        active-foreground: (\n            contrast-color: (\n                'primary',\n                700,\n            ),\n        ),\n        border-color: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        hover-border-color: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        focus-border-color: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        focus-visible-border-color: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        active-border-color: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        disabled-border-color: (\n            color: (\n                'primary',\n                50,\n            ),\n        ),\n        shadow-color: (\n            color: (\n                'primary',\n                200,\n                0.5,\n            ),\n        ),\n        disabled-background: transparent,\n    )\n);\n\n/// @type {Map}\n/// @prop {Map} background [color: ('primary', 500)] - The background color of a raised button.\n/// @prop {Map} foreground [contrast-color: ('primary', 600)] - The idle text color of a raised button.\n/// @prop {Map} hover-background [color: ('primary', 600)] - The hover background color of an raised button.\n/// @prop {Color} hover-foreground [contrast-color: ('primary', 600)] - The hover text color of an raised button.\n/// @prop {Map} focus-background [color: ('primary', 600)] - The focus background color of an raised button.\n/// @prop {Color} focus-visible-foreground [contrast-color: ('primary', 600)] - The focus-visible text color of an raised button.\n/// @prop {Map} focus-visible-background [color: ('primary', 600)] - The focus-visible background color of an raised button.\n/// @prop {Color} focus-foreground [contrast-color: ('primary', 600)] - The focus text color of an raised button.\n/// @prop {Map} active-background [color: ('primary', 700)] - The active background color of an raised button.\n/// @prop {Map} active-foreground [contrast-color: ('primary', 700)] - The active text color of an raised button.\n/// @prop {Map} shadow-color [color: ('primary', 200)] - The shadow color of a raised button.\n/// @requires {Map} $material-raised-button\n/// @requires {Map} $bootstrap-base-button\n$bootstrap-raised-button: extend(\n    $material-raised-button,\n    $bootstrap-base-button,\n    (\n        background: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        foreground: (\n            contrast-color: (\n                'primary',\n                600,\n            ),\n        ),\n        hover-background: (\n            color: (\n                'primary',\n                600,\n            ),\n        ),\n        hover-foreground: (\n            contrast-color: (\n                'primary',\n                600,\n            ),\n        ),\n        focus-background: (\n            color: (\n                'primary',\n                600,\n            ),\n        ),\n        focus-foreground: (\n            contrast-color: (\n                'primary',\n                600,\n            ),\n        ),\n        focus-visible-background: (\n            color: (\n                'primary',\n                600,\n            ),\n        ),\n        focus-visible-foreground: (\n            contrast-color: (\n                'primary',\n                600,\n            ),\n        ),\n        active-background: (\n            color: (\n                'primary',\n                700,\n            ),\n        ),\n        active-foreground: (\n            contrast-color: (\n                'primary',\n                700,\n            ),\n        ),\n        shadow-color: (\n            color: (\n                'primary',\n                200,\n            ),\n        ),\n    )\n);\n\n/// @type {Map}\n/// @prop {Map} background [color: ('primary', 500)] - The background color of a fab button.\n/// @prop {Map} hover-background [color: ('primary', 600)] - The hover background color of a fab button.\n/// @prop {Color} hover-foreground [contrast-color: ('primary', 600)] - The hover text color of a fab button.\n/// @prop {Map} focus-background [color: ('primary', 600)] - The focus background color of a fab button.\n/// @prop {Color} focus-foreground [contrast-color: ('primary', 600)] - The focus text color of a fab button.\n/// @prop {Map} focus-visible-background [color: ('primary', 600)] - The focus-visible background color of a fab button.\n/// @prop {Color} focus-visible-foreground [contrast-color: ('primary', 600)] - The focus-visible text color of a fab button.\n/// @prop {Map} active-background [color: ('primary', 700)] - The active background color of a fab button.\n/// @prop {Map} active-foreground [contrast-color: ('primary', 700)] - The active text color of a fab button.\n/// @prop {List} border-radius [(rem(15px), rem(12px), rem(28px))] - The border radius used for outlined button.\n/// @requires {Map} $material-fab-button\n/// @requires {Map} $bootstrap-base-button\n/// @requires {Map} $bootstrap-raised-button\n$bootstrap-fab-button: extend(\n    $material-fab-button,\n    $bootstrap-base-button,\n    $bootstrap-raised-button,\n    (\n        selector: '[igxButton=\"fab\"], .igx-button--fab',\n        background: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        hover-background: (\n            color: (\n                'primary',\n                600,\n            ),\n        ),\n        hover-foreground: (\n            contrast-color: (\n                'primary',\n                600,\n            ),\n        ),\n        focus-background: (\n            color: (\n                'primary',\n                600,\n            ),\n        ),\n        focus-foreground: (\n            contrast-color: (\n                'primary',\n                600,\n            ),\n        ),\n        focus-visible-background: (\n            color: (\n                'primary',\n                600,\n            ),\n        ),\n        focus-visible-foreground: (\n            contrast-color: (\n                'primary',\n                600,\n            ),\n        ),\n        active-background: (\n            color: (\n                'primary',\n                700,\n            ),\n        ),\n        active-foreground: (\n            contrast-color: (\n                'primary',\n                700,\n            ),\n        ),\n        border-radius: (\n            border-radius: (\n                rem(15px),\n                rem(12px),\n                rem(28px),\n            ),\n        ),\n    )\n);\n\n/// @type {Map}\n/// @prop {Color} background [transparent] - The background color of a fab button.\n/// @prop {Color} foreground [color: ('primary', 500)] - The background color of a fab button.\n/// @prop {Color} hover-background [transparent] - The hover background color of an icon button.\n/// @prop {Map} hover-foreground [color: ('primary', 600)] - The hover text color of an icon button.\n/// @prop {Map} focus-background [color: ('gray', 100)] - The focus background color of an icon button.\n/// @prop {Map} focus-foreground [color: ('primary', 600)] - The focus text color of an icon button.\n/// @prop {Map} focus-visible-background [color: ('gray', 100)] - The focus-visible background color of an icon button.\n/// @prop {Map} focus-visible-foreground [color: ('primary', 600)] - The focus-visible text color of an icon button.\n/// @prop {Map} active-background [color: ('gray', 100)] - The active background color of an icon button.\n/// @prop {Map} active-foreground [color: ('primary', 600)] - The active text color of an icon button.\n/// @prop {Color} disabled-background [transparent] - The disabled background color of an outlined button.\n/// @prop {Map} disabled-foreground [color: ('primary', 100)] - The disabled foreground color of the button.\n/// @prop {List} border-radius [(rem(4px), rem(0), rem(20px))] - The border radius used for outlined button.\n/// @prop {List} size [(rem(31px), rem(38px), rem(48px))] - The size used for the icon button.\n/// @requires {Map} $material-icon-button\n/// @requires {Map} $bootstrap-base-button\n$bootstrap-icon-button: extend(\n    $bootstrap-base-button,\n    (\n        selector: '[igxButton=\"icon\"], .igx-button--icon',\n        background: transparent,\n        foreground: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        hover-background: transparent,\n        hover-foreground: (\n            color: (\n                'primary',\n                600,\n            ),\n        ),\n        focus-background: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        focus-foreground: (\n            color: (\n                'primary',\n                600,\n            ),\n        ),\n        focus-visible-background: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        focus-visible-foreground: (\n            color: (\n                'primary',\n                600,\n            ),\n        ),\n        active-background: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        active-foreground: (\n            color: (\n                'primary',\n                600,\n            ),\n        ),\n        disabled-background: transparent,\n        disabled-foreground: (\n            color: (\n                'primary',\n                100,\n            ),\n        ),\n        border-radius: (\n            border-radius: (\n                rem(4px),\n                rem(0),\n                rem(20px),\n            ),\n        ),\n        size: (\n            sizable: (\n                rem(31px),\n                rem(38px),\n                rem(48px),\n            ),\n        ),\n    )\n);\n\n/// Generates a light bootstrap button schema.\n/// @type {Map}\n/// @requires {Map} $bootstrap-flat-button\n/// @requires {Map} $bootstrap-outlined-button\n/// @requires {Map} $bootstrap-raised-button\n/// @requires {Map} $bootstrap-fab-button\n/// @requires {Map} $bootstrap-icon-button\n$bootstrap-button: (\n    flat: $bootstrap-flat-button,\n    outlined: $bootstrap-outlined-button,\n    raised: $bootstrap-raised-button,\n    fab: $bootstrap-fab-button,\n    icon: $bootstrap-icon-button,\n);\n\n/// @type {Map}\n/// @requires {Map} $material-base-button\n/// @requires {Map} $flat-elevation-button\n$indigo-base-button: extend($material-base-button, $flat-elevation-button);\n\n/// @type {Map}\n/// @prop {Map} foreground [color: ('gray', 700)] - The idle text color of a flat button.\n/// @prop {Color} hover-background [transparent] - The hover background color of a flat button.\n/// @prop {Map} hover-foreground [ color: ('gray', 900)] - The hover text color of a flat button.\n/// @prop {Color} focus-background [transparent] - The focus background color of a flat button.\n/// @prop {Map} focus-foreground [color: ('gray', 900)] - The focus text color of a flat button.\n/// @prop {Color} active-background [transparent] - The active background color of a flat button.\n/// @prop {Color} active-foreground [color: ('gray', 700)] - The active text color of a flat button.\n/// @prop {Color} focus-visible-background [transparent] - The focus-visible background color of a flat button.\n/// @prop {Map} focus-visible-foreground [color: ('gray', 900)] - The focus-visible text color of a flat button.\n/// @prop {Color} disabled-background [transparent] - The disabled background color of a flat button.\n/// @prop {Map} shadow-color [color: ('gray', 300)] - The shadow color of a flat button.\n/// @prop {List} border-radius [(rem(20px), rem(0), rem(20px))] - The border radius used for flat button.\n/// @prop {List} size [(rem(28px), rem(32px), rem(36px))] - The size used for the flat button.\n/// @requires {Map} $material-flat-button\n/// @requires {Map} $indigo-base-button\n$indigo-flat-button: extend(\n    $material-flat-button,\n    $indigo-base-button,\n    (\n        foreground: (\n            color: (\n                'gray',\n                700,\n            ),\n        ),\n        hover-background: transparent,\n        hover-foreground: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        focus-background: transparent,\n        focus-foreground: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        active-background: transparent,\n        active-foreground: (\n            color: (\n                'gray',\n                700,\n            ),\n        ),\n        focus-visible-background: transparent,\n        focus-visible-foreground: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        shadow-color: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        disabled-background: transparent,\n        border-radius: (\n            border-radius: (\n                rem(20px),\n                rem(0),\n                rem(20px),\n            ),\n        ),\n        size: (\n            sizable: (\n                rem(28px),\n                rem(32px),\n                rem(36px),\n            ),\n        ),\n    )\n);\n\n/// @type {Map}\n/// @prop {Color} background [transparent] - The background color of a outlined button.\n/// @prop {Map} foreground [color: ('gray', 700)] - The idle text color of a outlined button.\n/// @prop {Map} hover-background [color: ('gray', 100)] - The hover background color of a outlined button.\n/// @prop {Map} hover-foreground [ color: ('gray', 900)] - The hover text color of a outlined button.\n/// @prop {Color} focus-background [transparent] - The focus background color of a outlined button.\n/// @prop {Map} focus-foreground [color: ('gray', 900)] - The focus text color of a outlined button.\n/// @prop {Color} focus-visible-background [transparent] - The focus-visible background color of a outlined button.\n/// @prop {Map} focus-visible-foreground [color: ('gray', 900)] - The focus-visible text color of a outlined button.\n/// @prop {Map} border-color [color: 'gray'] - The border color of an outlined button.\n/// @prop {Map} hover-border-color [color: 'gray'] - The hover border color of a outlined button.\n/// @prop {Map} focus-border-color [color: 'gray'] - The focus border color of a outlined button.\n/// @prop {Map} focus-visible-border-color [color: 'gray'] - The focus-visible border color of a outlined button.\n/// @prop {Map} active-border-color [color: 'gray'] - The active border color of a outlined button.\n/// @prop {Color} active-background [transparent] - The active background color of a outlined button.\n/// @prop {Color} active-foreground [color: ('gray', 900)] - The active text color of a outlined button.\n/// @prop {Map} shadow-color [color: ('gray', 300)] - The shadow color of a outlined button.\n/// @prop {Color} disabled-background [transparent] - The disabled background color of a outlined button.\n/// @prop {List} border-radius [(rem(20px), rem(0), rem(20px))] - The border radius used for the outlined button.\n/// @prop {List} size [(rem(28px), rem(32px), rem(36px))] - The size used for the outlined button.\n/// @requires {Map} $material-outlined-button\n/// @requires {Map} $indigo-base-button\n$indigo-outlined-button: extend(\n    $material-outlined-button,\n    $indigo-base-button,\n    (\n        background: transparent,\n        foreground: (\n            color: (\n                'gray',\n                700,\n            ),\n        ),\n        hover-background: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        hover-foreground: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        focus-background: transparent,\n        focus-foreground: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        focus-visible-background: transparent,\n        focus-visible-foreground: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        border-color: (\n            color: 'gray',\n        ),\n        hover-border-color: (\n            color: 'gray',\n        ),\n        focus-border-color: (\n            color: 'gray',\n        ),\n        focus-visible-border-color: (\n            color: 'gray',\n        ),\n        active-border-color: (\n            color: 'gray',\n        ),\n        active-background: transparent,\n        active-foreground: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        shadow-color: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        disabled-background: transparent,\n        border-radius: (\n            border-radius: (\n                rem(20px),\n                rem(0),\n                rem(20px),\n            ),\n        ),\n        size: (\n            sizable: (\n                rem(28px),\n                rem(32px),\n                rem(36px),\n            ),\n        ),\n    )\n);\n\n/// @type {Map}\n/// @prop {Map} foreground [color: ('gray', 50)] - The idle text color of a raised button.\n/// @prop {Map} hover-background [color: ('primary', 400)] - The hover background color of a raised button.\n/// @prop {Map} hover-foreground [ color: ('gray', 50)] - The hover text color of a raised button.\n/// @prop {Map} focus-background [color: ('primary', 400)] - The focus background color of a raised button.\n/// @prop {Map} focus-foreground [ color: ('gray', 50)] - The focus text color of a raised button.\n/// @prop {Map} focus-visible-background [color: ('primary', 400)] - The focus-visible background color of a raised button.\n/// @prop {Map} focus-visible-foreground [ color: ('gray', 50)] - The focus-visible text color of a raised button.\n/// @prop {Map} active-background [color: ('gray', 50)] - The active background color of a raised button.\n/// @prop {Map} shadow-color [color: ('primary', 200)] - The shadow color of a raised button.\n/// @prop {List} border-radius [(rem(20px), rem(0), rem(20px))] - The border radius used for the raised button.\n/// @prop {List} size [(rem(28px), rem(32px), rem(36px))] - The size used for the raised button.\n/// @requires {Map} $material-raised-button\n/// @requires {Map} $indigo-base-button\n$indigo-raised-button: extend(\n    $material-raised-button,\n    $indigo-base-button,\n    (\n        foreground: (\n            color: (\n                'gray',\n                50,\n            ),\n        ),\n        hover-background: (\n            color: (\n                'secondary',\n                400,\n            ),\n        ),\n        hover-foreground: (\n            color: (\n                'gray',\n                50,\n            ),\n        ),\n        focus-background: (\n            color: (\n                'secondary',\n                400,\n            ),\n        ),\n        focus-foreground: (\n            color: (\n                'gray',\n                50,\n            ),\n        ),\n        focus-visible-background: (\n            color: (\n                'secondary',\n                400,\n            ),\n        ),\n        focus-visible-foreground: (\n            color: (\n                'gray',\n                50,\n            ),\n        ),\n        active-foreground: (\n            color: (\n                'gray',\n                50,\n            ),\n        ),\n        shadow-color: (\n            color: (\n                'secondary',\n                200,\n            ),\n        ),\n        border-radius: (\n            border-radius: (\n                rem(20px),\n                rem(0),\n                rem(20px),\n            ),\n        ),\n        size: (\n            sizable: (\n                rem(28px),\n                rem(32px),\n                rem(36px),\n            ),\n        ),\n    )\n);\n\n/// @type {Map}\n/// @prop {Map} foreground [ color: ('gray', 50)] - The idle text color of a fab button.\n/// @prop {Map} hover-foreground [ color: ('gray', 50)] - The hover text color of a fab button.\n/// @prop {Map} focus-foreground [ color: ('gray', 50)] - The focus text color of a fab button.\n/// @prop {Map} focus-visible-foreground [ color: ('gray', 50)] - The focus-visible text color of a fab button.\n/// @prop {List} border-radius [(rem(36px), rem(42px), rem(48px))] - The border radius used for fab button.\n/// @prop {List} size [(rem(36px), rem(42px), rem(48px))] - The size used for the fab button.\n/// @requires {Map} $material-fab-button\n/// @requires {Map} $indigo-base-button\n/// @requires {Map} $indigo-raised-button\n$indigo-fab-button: extend(\n    $material-fab-button,\n    $indigo-base-button,\n    $indigo-raised-button,\n    (\n        selector: '[igxButton=\"fab\"], .igx-button--fab',\n        foreground: (\n            color: (\n                'gray',\n                50,\n            ),\n        ),\n        hover-foreground: (\n            color: (\n                'gray',\n                50,\n            ),\n        ),\n        focus-foreground: (\n            color: (\n                'gray',\n                50,\n            ),\n        ),\n        focus-visible-foreground: (\n            color: (\n                'gray',\n                50,\n            ),\n        ),\n        border-radius: (\n            border-radius: (\n                rem(28px),\n                rem(12px),\n                rem(28px),\n            ),\n        ),\n        size: (\n            sizable: (\n                rem(36px),\n                rem(42px),\n                rem(48px),\n            ),\n        ),\n    )\n);\n\n/// @type {Map}\n/// @prop {Map} foreground [ color: ('gray', 700)] - The idle text color of a fab button.\n/// @prop {Color} hover-background [transparent] - The hover background color of a icon button.\n/// @prop {Map} hover-foreground [ color: ('gray', 900)] - The hover text color of a raised button.\n/// @prop {Color} focus-background [transparent] - The focus background color of a icon button.\n/// @prop {Map} focus-foreground [ color: ('gray', 900)] - The focus text color of a fab button.\n/// @prop {Color} focus-visible-background [transparent] - The focus-visible background color of a icon button.\n/// @prop {Map} focus-visible-foreground [ color: ('gray', 900)] - The focus-visible text color of a fab button.\n/// @prop {Color} active-background [transparent] - The active background color of a flat button.\n/// @prop {Color} active-foreground [color: ('gray', 900)] - The active text color of a flat button.\n/// @prop {Color} disabled-background [transparent] - The disabled background color of a outlined button.\n/// @prop {Map} focus-border-color [color: ('gray' 300)] - The focus border color of the button.\n/// @prop {Map} focus-visible-border-color [color: ('gray' 300)] - The focus-visible border color of the button.\n/// @prop {Map} active-border-color [color: ('gray' 300)] - The active border color of the button.\n/// @prop {List} size [(rem(28px), rem(32px), rem(36px))] - The size used for the icon button.\n/// @prop {Number} default-size [2] - The default size used for the icon button component.\n/// @requires {Map} $material-icon-button\n/// @requires {Map} $indigo-base-button\n$indigo-icon-button: extend(\n    $material-icon-button,\n    $indigo-base-button,\n    (\n        foreground: (\n            color: (\n                'gray',\n                700,\n            ),\n        ),\n        hover-background: transparent,\n        hover-foreground: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        focus-background: transparent,\n        focus-foreground: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        focus-visible-background: transparent,\n        focus-visible-foreground: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        active-background: transparent,\n        active-foreground: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        disabled-background: transparent,\n        focus-border-color: (\n            color: (\n                'gray' 300,\n            ),\n        ),\n        focus-visible-border-color: (\n            color: (\n                'gray' 300,\n            ),\n        ),\n        active-border-color: (\n            color: (\n                'gray' 300,\n            ),\n        ),\n        size: (\n            sizable: (\n                rem(28px),\n                rem(32px),\n                rem(36px),\n            ),\n        ),\n        default-size: 2,\n    )\n);\n\n/// Generates a light indigo button schema.\n/// @type {Map}\n/// @requires {Map} $indigo-flat-button\n/// @requires {Map} $indigo-outlined-button\n/// @requires {Map} $indigo-raised-button\n/// @requires {Map} $indigo-fab-button\n/// @requires {Map} $indigo-icon-button\n$indigo-button: (\n    flat: $indigo-flat-button,\n    outlined: $indigo-outlined-button,\n    raised: $indigo-raised-button,\n    fab: $indigo-fab-button,\n    icon: $indigo-icon-button,\n);\n","@use '../../../../utils/map' as *;\n@use '../../../../typography/functions' as *;\n\n////\n/// @package theming\n/// @group schemas\n/// @access public\n////\n\n/* stylelint-disable max-line-length */\n\n/// Generates a light checkbox schema.\n/// @type {Map}\n/// @prop {Map} tick-color [color: ('gray', 50)] - The checked mark color.\n/// @prop {Map} tick-color-hover [color: ('gray', 50)] - The checked mark color on hover.\n/// @prop {Map} label-color [color: ('gray', 900)]- The text color used for the label text.\n/// @prop {Map} empty-color [color: ('gray', 600)] - The unchecked border color.\n/// @prop {Map} fill-color [color: ('secondary', 500)] - The checked border and fill colors.\n/// @prop {Map} fill-color-hover [color: ('secondary', 500)] - The checked border and fill colors on hover.\n/// @prop {Map} disabled-color [color: ('gray', 400)] - The disabled border and fill colors.\n/// @prop {Map} disabled-indeterminate-color [color: ('secondary', 100)] - The disabled border and fill colors in indeterminate state.\n/// @prop {Map} disabled-color-label [color: ('gray', 500)] - The disabled color of the label.\n/// @prop {Map} error-color [color: ('error', 500)] - The border and fill colors in invalid state.\n/// @prop {Map} error-color-hover [color: ('error', 500)] - The border and fill colors in invalid state on hover.\n/// @prop {List} border-radius [(rem(2px), rem(0), rem(10px))] - The border radius used for checkbox.\n/// @prop {List} border-radius-ripple [(rem(24px), rem(0), rem(24px))] - The border radius used for checkbox ripple.\n$light-checkbox: (\n    tick-color: (\n        color: (\n            'gray',\n            50,\n        ),\n    ),\n    tick-color-hover: (\n        color: (\n            'gray',\n            50,\n        ),\n    ),\n    label-color: (\n        color: (\n            'gray',\n            900,\n        ),\n    ),\n    empty-color: (\n        color: (\n            'gray',\n            600,\n        ),\n    ),\n    fill-color: (\n        color: (\n            'secondary',\n            500,\n        ),\n    ),\n    fill-color-hover: (\n        color: (\n            'secondary',\n            500,\n        ),\n    ),\n    disabled-color: (\n        color: (\n            'gray',\n            400,\n        ),\n    ),\n    disabled-indeterminate-color: (\n        color: (\n            'secondary',\n            100,\n        ),\n    ),\n    disabled-color-label: (\n        color: (\n            'gray',\n            500,\n        ),\n    ),\n    error-color: (\n        color: (\n            'error',\n            500,\n        ),\n    ),\n    error-color-hover: (\n        color: (\n            'error',\n            500,\n        ),\n    ),\n    border-radius: (\n        border-radius: (\n            rem(2px),\n            rem(0),\n            rem(10px),\n        ),\n    ),\n    border-radius-ripple: (\n        border-radius: (\n            rem(24px),\n            rem(0),\n            rem(24px),\n        ),\n    ),\n);\n\n/// Generates a fluent checkbox schema.\n/// @type {Map}\n/// @prop {Map} tick-color-hover [color: ('gray', 700)] - The checked mark color on hover when the control in unchecked.\n/// @prop {Map} empty-color [color: ('gray', 900)] - The unchecked border color.\n/// @prop {Map} fill-color [color: ('primary', 500)] - The checked border and fill colors.\n/// @prop {Map} fill-color-hover [color: ('primary', 900)] - The checked border and fill colors on hover.\n/// @prop {Map} disabled-color [color: ('gray', 400)] - The disabled border and fill colors.\n/// @prop {Map} focus-outline-color [color: ('gray', 800)] - The focus outlined color.\n/// @prop {Map} error-color-hover [color: ('error', 900)] - The border and fill colors in invalid state on hover.\n/// @prop {List} border-radius [(rem(2px), rem(0), rem(10px))] - The border radius used for checkbox.\n/// @prop {List} border-radius-ripple [(rem(2px), rem(0), rem(24px))] - The border radius used for checkbox ripple.\n/// @requires {Map} $light-checkbox\n$fluent-checkbox: extend(\n    $light-checkbox,\n    (\n        tick-color-hover: (\n            color: (\n                'gray',\n                700,\n            ),\n        ),\n        focus-outline-color: (\n            color: (\n                'gray',\n                800,\n            ),\n        ),\n        empty-color: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        fill-color: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        fill-color-hover: (\n            color: (\n                'primary',\n                900,\n            ),\n        ),\n        disabled-color: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n        error-color-hover: (\n            color: (\n                'error',\n                900,\n            ),\n        ),\n        border-radius: (\n            border-radius: (\n                rem(2px),\n                rem(0),\n                rem(10px),\n            ),\n        ),\n        border-radius-ripple: (\n            border-radius: (\n                rem(2px),\n                rem(0),\n                rem(24px),\n            ),\n        ),\n    )\n);\n\n/// Generates a bootstrap checkbox schema.\n/// @type {Map}\n/// @prop {Map} fill-color [color: ('primary', 500)] - The checked border and fill colors.\n/// @prop {Map} fill-color-hover [color: ('primary', 500)] - The checked border and fill colors on hover.\n/// @prop {Map} empty-color [color: ('gray', 500)] - The unchecked border color.\n/// @prop {Map} disabled-color [color: ('primary', 200)] - The disabled border and fill colors.\n/// @prop {Map} disabled-color-label [color: ('gray', 400)] - The disabled color of the label.\n/// @prop {Map} focus-outline-color [color: ('primary', 200)] - The focus outlined color.\n/// @prop {Map} error-color-hover [color: ('error', 100)] - The focus outlined color in invalid state.\n/// @prop {List} border-radius [(rem(4px), rem(0), rem(10px))] - The border radius used for checkbox.\n/// @prop {List} border-radius-ripple [(rem(4px), rem(0), rem(24px))] - The border radius used for checkbox ripple.\n/// @requires {Map} $light-checkbox\n$bootstrap-checkbox: extend(\n    $light-checkbox,\n    (\n        focus-outline-color: (\n            color: (\n                'primary',\n                200,\n            ),\n        ),\n        fill-color: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        fill-color-hover: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        empty-color: (\n            color: (\n                'gray',\n                500,\n            ),\n        ),\n        disabled-color: (\n            color: (\n                'primary',\n                200,\n            ),\n        ),\n        disabled-color-label: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n        error-color-hover: (\n            color: (\n                'error',\n                100,\n            ),\n        ),\n        border-radius: (\n            border-radius: (\n                rem(4px),\n                rem(0),\n                rem(10px),\n            ),\n        ),\n        border-radius-ripple: (\n            border-radius: (\n                rem(4px),\n                rem(0),\n                rem(24px),\n            ),\n        ),\n    )\n);\n\n/// Generates an indigo checkbox schema.\n/// @type {Map}\n/// @prop {Color} tick-color [color: 'surface'] - The checked mark color.\n/// @prop {Color} tick-color-hover [color: 'surface'] - The checked mark color on hover.\n/// @prop {Map} fill-color [color: ('primary', 500)] - The checked border and fill colors.\n/// @prop {Map} fill-color-hover [color: ('primary', 400)] - The checked border and fill colors on hover.\n/// @prop {Map} empty-color [color: ('gray', 500)] - The unchecked border color.\n/// @prop {Map} disabled-color [color: ('gray', 300)] - The disabled border and fill colors.\n/// @prop {Map} disabled-indeterminate-color [color: ('primary', 200)] - The disabled border and fill colors in checked/indeterminate state.\n/// @prop {Map} disabled-color-label [color: ('gray', 300)] - The disabled label color.\n/// @prop {Map} focus-outline-color [color: ('gray', 300)] - The focus outlined color.\n/// @prop {Map} focus-outline-color-focused [color: ('primary', 200)] - The focus outlined color for focused state.\n/// @prop {Map} error-color-hover [color: ('error', 200)] - The focus outlined color in invalid state.\n/// @prop {List} border-radius [(rem(3px), rem(0), rem(10px))] - The border radius used for checkbox.\n/// @prop {List} border-radius-ripple [(rem(3px), rem(0), rem(24px))] - The border radius used for checkbox ripple.\n/// @requires {Map} $light-checkbox\n$indigo-checkbox: extend(\n    $light-checkbox,\n    (\n        focus-outline-color: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        focus-outline-color-focused: (\n            color: (\n                'primary',\n                200,\n            ),\n        ),\n        tick-color: (\n            color: 'surface',\n        ),\n        tick-color-hover: (\n            color: 'surface',\n        ),\n        fill-color: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        fill-color-hover: (\n            color: (\n                'primary',\n                400,\n            ),\n        ),\n        empty-color: (\n            color: (\n                'gray',\n                500,\n            ),\n        ),\n        disabled-color: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        disabled-color-label: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        disabled-indeterminate-color: (\n            color: (\n                'primary',\n                200,\n            ),\n        ),\n        error-color-hover: (\n            color: (\n                'error',\n                200,\n            ),\n        ),\n        border-radius: (\n            border-radius: (\n                rem(3px),\n                rem(0),\n                rem(10px),\n            ),\n        ),\n        border-radius-ripple: (\n            border-radius: (\n                rem(3px),\n                rem(0),\n                rem(24px),\n            ),\n        ),\n    )\n);\n","@use '../../../../utils/map' as *;\n@use '../../../../typography/functions' as *;\n\n////\n/// @package theming\n/// @group schemas\n/// @access public\n////\n\n/* stylelint-disable max-line-length */\n\n/// Generates a light combo schema.\n/// @type {Map}\n/// @prop {Map} empty-list-background [color: 'surface'] - The combo list background color.\n/// @prop {Map} search-separator-border-color [color: ('gray', 500)] - The combo search box separator color.\n/// @prop {Map} empty-list-placeholder-color [color: ('gray', 700)] - The combo placeholder text color.\n/// @prop {Map} toggle-button-background [color: ('gray', 300)] - The combo toggle button background color.\n/// @prop {Map} toggle-button-background-focus [color: ('gray', 400, .3)] - The combo toggle button background color when the combo is focused.\n/// @prop {Map} toggle-button-foreground [color: ('gray', 700)] - The combo toggle button foreground color.\n/// @prop {Map} toggle-button-foreground-focus [color: ('gray', 700)] - The combo toggle button foreground color when the combo is focused.\n/// @prop {Map} toggle-button-foreground-filled [color: ('gray', 900)] - The combo toggle button foreground color when the combo is focused.\n/// @prop {Map} toggle-button-background-disabled [color: ('gray', 100)] - The combo toggle button background color when the combo is disabled.\n/// @prop {Map} toggle-button-foreground-disabled [color: ('gray', 500)] - The combo toggle button foreground color when the combo is disabled.\n/// @prop {Map} toggle-button-background-focus--border [color: ('gray', 300)] The combo toggle button background color when the combo is focused in material border and line variants.\n/// @prop {Color} clear-button-background [transparent] - The combo clear button background color.\n/// @prop {Color} clear-button-background-focus [transparent] - The combo clear button background color when the combo is focused.\n/// @prop {Map} clear-button-foreground [contrast-color: ('gray', 100)] - The combo toggle clear foreground color.\n/// @prop {Map} clear-button-foreground-focus [contrast-color: ('gray', 100)] - The combo clear button foreground color when the combo is focused.\n/// @prop {Map} case-icon-color [color: ('gray', 400)] - The case sensitive icon color in inactive state for combo search input\n/// @prop {Map} case-icon-color--active [color: ('primary', 500)] - The case sensitive icon color in active state for combo search input\n/// @prop {Number} default-size [2] - The default size used for the combo component.\n$light-combo: (\n    toggle-button-background-focus--border: (\n        color: (\n            'gray',\n            300,\n        ),\n    ),\n    case-icon-color: (\n        color: (\n            'gray',\n            400,\n        ),\n    ),\n    case-icon-color--active: (\n        color: (\n            'primary',\n            500,\n        ),\n    ),\n    empty-list-background: (\n        color: 'surface',\n    ),\n    search-separator-border-color: (\n        color: (\n            'gray',\n            500,\n        ),\n    ),\n    empty-list-placeholder-color: (\n        color: (\n            'gray',\n            700,\n        ),\n    ),\n    toggle-button-background: (\n        color: (\n            'gray',\n            300,\n        ),\n    ),\n    toggle-button-background-focus: (\n        color: (\n            'gray',\n            400,\n            0.3,\n        ),\n    ),\n    toggle-button-foreground: (\n        color: (\n            'gray',\n            700,\n        ),\n    ),\n    toggle-button-foreground-focus: (\n        color: (\n            'gray',\n            700,\n        ),\n    ),\n    toggle-button-foreground-filled: (\n        color: (\n            'gray',\n            900,\n        ),\n    ),\n    clear-button-background: transparent,\n    clear-button-background-focus: transparent,\n    clear-button-foreground: (\n        contrast-color: (\n            'gray',\n            100,\n        ),\n    ),\n    clear-button-foreground-focus: (\n        contrast-color: (\n            'gray',\n            100,\n        ),\n    ),\n    toggle-button-background-disabled: (\n        color: (\n            'gray',\n            100,\n        ),\n    ),\n    toggle-button-foreground-disabled: (\n        color: (\n            'gray',\n            500,\n        ),\n    ),\n    default-size: 2,\n);\n\n/// Generates a fluent combo schema.\n/// @type {Map}\n/// @prop {Map} toggle-button-background [color: ('gray', 100)] - The combo toggle button background color.\n/// @prop {Map} toggle-button-background-focus [color: ('gray', 100)] - The combo toggle button background color when the combo is focused.\n/// @prop {Color} clear-button-background [color: ('gray', 100)] - The combo clear button background color.\n/// @prop {Color} clear-button-background-focus [color: ('gray', 100)] - The combo clear button background color when the combo is focused.\n/// @prop {Map} toggle-button-foreground-filled [color: ('gray', 700)] - The combo toggle button foreground color when the combo is focused.\n/// @prop {Map} toggle-button-background-disabled [color: ('gray', 100)] - The combo toggle button background color when the combo is disabled.\n/// @prop {Map} toggle-button-foreground-disabled [color: ('gray', 400)] - The combo toggle button foreground color when the combo is disabled.\n/// @requires {Map} $light-combo\n$fluent-combo: extend(\n    $light-combo,\n    (\n        toggle-button-background: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        toggle-button-background-focus: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        toggle-button-foreground-filled: (\n            color: (\n                'gray',\n                700,\n            ),\n        ),\n        clear-button-background: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        clear-button-background-focus: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        toggle-button-background-disabled: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        toggle-button-foreground-disabled: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n    )\n);\n\n/// Generates a bootstrap combo schema.\n/// @type {Map}\n/// @prop {Map} toggle-button-foreground [color: ('gray', 800)] - The combo toggle button foreground color.\n/// @prop {Map} toggle-button-foreground-filled [color: ('gray', 800)] - The combo toggle button foreground color when the combo is focused.\n/// @prop {Map} empty-list-background [color: ('surface')] - The combo list background color.\n/// @prop {Map} search-separator-border-color [color: ('gray', 400)] - The combo search box separator color.\n/// @prop {Map} empty-list-placeholder-color [color: ('gray', 600)] - The combo placeholder text color.\n/// @prop {Map} clear-button-background [color: ('gray', 300)] - The combo clear button background color.\n/// @prop {Map} clear-button-background-focus [color: ('gray', 300)] - The combo clear button background color when the combo is focused.\n/// @prop {Map} clear-button-foreground [color: ('gray', 800)] - The combo toggle clear foreground color.\n/// @prop {Map} clear-button-foreground-focus [color: ('gray', 800)] - The combo clear button foreground color when the combo is focused.\n/// @prop {Map} toggle-button-foreground-disabled [color: ('gray', 400)] - The combo toggle button foreground color when the combo is disabled.\n/// @prop {Map} toggle-button-background-focus [color: ('gray', 300)] - The combo toggle button background color when the combo is focused.\n/// @requires {Map} $light-combo\n$bootstrap-combo: extend(\n    $light-combo,\n    (\n        empty-list-background: (\n            color: (\n                'surface',\n            ),\n        ),\n        search-separator-border-color: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n        empty-list-placeholder-color: (\n            color: (\n                'gray',\n                600,\n            ),\n        ),\n        clear-button-foreground: (\n            color: (\n                'gray',\n                800,\n            ),\n        ),\n        clear-button-foreground-focus: (\n            color: (\n                'gray',\n                800,\n            ),\n        ),\n        clear-button-background: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        clear-button-background-focus: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        toggle-button-foreground: (\n            color: (\n                'gray',\n                800,\n            ),\n        ),\n        toggle-button-foreground--focus: (\n            color: (\n                'gray',\n                800,\n            ),\n        ),\n        toggle-button-foreground-filled: (\n            color: (\n                'gray',\n                800,\n            ),\n        ),\n        toggle-button-background-focus: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        toggle-button-foreground-disabled: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n    )\n);\n\n/// Generates an indigo combo schema.\n/// @type {Map}\n/// @prop {Color} clear-button-background-focus [transparent] - The combo clear button background color when the combo is focused.\n/// @prop {Map} clear-button-foreground [color: ('gray', 600)] - The combo toggle clear foreground color.\n/// @prop {Map} clear-button-foreground-focus [color: ('gray', 600)] - The combo clear button foreground color when the combo is focused.\n/// @prop {Map} toggle-button-foreground-disabled [color: ('gray', 300)] - The combo toggle button foreground color when the combo is disabled.\n/// @prop {Color} toggle-button-background-disabled [transparent] - The combo toggle button background color when the combo is disabled.\n/// @prop {Color} toggle-button-background-focus [transparent] - The combo toggle button background color when the combo is focused.\n/// @requires {Map} $light-combo\n$indigo-combo: extend(\n    $light-combo,\n    (\n        clear-button-background-focus: transparent,\n        clear-button-foreground: (\n            color: (\n                'gray',\n                600,\n            ),\n        ),\n        toggle-button-background-focus: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        clear-button-foreground-focus: (\n            color: (\n                'gray',\n                600,\n            ),\n        ),\n        toggle-button-foreground-disabled: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        toggle-button-background-disabled: transparent,\n    )\n);\n","@use '../../../../utils/map' as *;\n@use '../../../../typography/functions' as *;\n@use '../elevation/drop-down' as *;\n\n////\n/// @package theming\n/// @group schemas\n/// @access public\n////\n\n/* stylelint-disable max-line-length */\n\n/// Generates a light drop-down schema.\n/// @type {Map}\n/// @prop {Map} background-color [color: 'surface'] - The drop-down background color.\n/// @prop {Map} header-text-color [color: ('secondary', 500)] - The drop-down header text color.\n/// @prop {Map} item-text-color [color: ('gray', 800)] - The drop-down text color.\n/// @prop {Map} hover-item-text-color [color: ('gray', 800)] - The drop-down hover text color.\n/// @prop {Map} hover-item-background [color: ('gray', 100, .8)4] - The drop-down hover item background color.\n/// @prop {Map} focused-item-background [color: ('gray', 100, .8)] - The drop-down focused item background color.\n/// @prop {Map} focused-item-text-color [color: ('gray', 800)] - The drop-down focused item text color.\n/// @prop {Map} selected-item-background [color: ('secondary', 100)] - The drop-down selected item background color.\n/// @prop {Map} selected-item-text-color [contrast-color: ('secondary', 100)] - The drop-down selected item text color.\n/// @prop {Map} selected-hover-item-background [color: ('secondary', 200)] - The drop-down selected item hover background color.\n/// @prop {Map} selected-hover-item-text-color [contrast-color: ('secondary', 200)] - The drop-down selected item hover text color.\n/// @prop {Map} selected-focus-item-background [color: ('secondary', 200)] - The drop-down selected item focus background color.\n/// @prop {Map} selected-focus-item-text-color [contrast-color: ('secondary', 200)] - The drop-down selected item focus text color.\n/// @prop {Color} disabled-item-background [transparent] - The drop-down disabled item background color.\n/// @prop {Map} disabled-item-text-color [color: 'surface', text-contrast: (), rgba: .38] - The drop-down disabled item text color.\n/// @prop {Number} elevation [8] - The elevation level, between 0-24, to be used for the drop-down shadow.\n/// @prop {Number} border-width [0] - The border width used for drop-down component.\n/// @prop {Map} border-color [color: ('gray', 300)] - The border color used for drop-down component.\n/// @prop {List} border-radius [(rem(4px), rem(0), rem(20px))] - The border radius used for drop-down component.\n/// @prop {List} item-border-radius [(rem(0), rem(0), rem(20px))] - The border radius used for the drop-down items.\n/// @prop {List} size [(rem(28px), rem(32px), rem(40px))] - The size used for the dropdown item height.\n/// @prop {Number} default-size [2] - The default size used for the drop down component.\n/// @requires {Map} $default-elevation-drop-down\n$light-drop-down: extend(\n    $default-elevation-drop-down,\n    (\n        background-color: (\n            color: 'surface',\n        ),\n        header-text-color: (\n            color: (\n                'secondary',\n                500,\n            ),\n        ),\n        item-text-color: (\n            color: (\n                'gray',\n                800,\n            ),\n        ),\n        hover-item-text-color: (\n            color: (\n                'gray',\n                800,\n            ),\n        ),\n        hover-item-background: (\n            color: (\n                'gray',\n                100,\n                0.8,\n            ),\n        ),\n        focused-item-background: (\n            color: (\n                'gray',\n                100,\n                0.8,\n            ),\n        ),\n        focused-item-text-color: (\n            color: (\n                'gray',\n                800,\n            ),\n        ),\n        selected-item-background: (\n            color: (\n                'secondary',\n                100,\n            ),\n        ),\n        selected-item-text-color: (\n            contrast-color: (\n                'secondary',\n                100,\n            ),\n        ),\n        selected-hover-item-background: (\n            color: (\n                'secondary',\n                200,\n            ),\n        ),\n        selected-hover-item-text-color: (\n            contrast-color: (\n                'secondary',\n                200,\n            ),\n        ),\n        selected-focus-item-background: (\n            color: (\n                'secondary',\n                200,\n            ),\n        ),\n        selected-focus-item-text-color: (\n            contrast-color: (\n                'secondary',\n                200,\n            ),\n        ),\n        disabled-item-background: (\n            color: (\n                'gray',\n                50,\n                0,\n            ),\n        ),\n        disabled-item-text-color: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n        border-color: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        border-width: 0,\n        border-radius: (\n            border-radius: (\n                rem(4px),\n                rem(0),\n                rem(20px),\n            ),\n        ),\n        item-border-radius: (\n            border-radius: (\n                rem(0),\n                rem(0),\n                rem(20px),\n            ),\n        ),\n        size: (\n            sizable: (\n                rem(28px),\n                rem(32px),\n                rem(40px),\n            ),\n        ),\n        default-size: 2,\n    )\n);\n\n/// Generates a fluent drop-down schema.\n/// @type {Map}\n/// @prop {Map} selected-item-background [color: ('gray', 100)] - The drop-down selected item background color.\n/// @prop {Map} selected-item-text-color [contrast-color: ('gray', 100)] - The drop-down selected item text color.\n/// @prop {Map} selected-hover-item-background [color: ('gray', 200)] - The drop-down selected item hover background color.\n/// @prop {Map} selected-hover-item-text-color [contrast-color: ('gray', 200)] - The drop-down selected item hover text color.\n/// @prop {Map} selected-focus-item-background [color: ('gray', 200)] - The drop-down selected item focus background color.\n/// @prop {Map} selected-focus-item-text-color [contrast-color: ('gray', 200)] - The drop-down selected item focus text color.\n/// @prop {Number} elevation [4] - The elevation level, between 0-24, to be used for the drop-down shadow.\n/// @prop {List} border-radius [(rem(2px), rem(0), rem(20px))] - The border radius used for drop-down component.\n/// @requires {Map} $light-drop-down\n/// @requires {Map} $fluent-elevation-drop-down\n$fluent-drop-down: extend(\n    $light-drop-down,\n    $fluent-elevation-drop-down,\n    (\n        selected-item-background: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        selected-item-text-color: (\n            contrast-color: (\n                'gray',\n                100,\n            ),\n        ),\n        selected-hover-item-background: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        selected-hover-item-text-color: (\n            contrast-color: (\n                'gray',\n                200,\n            ),\n        ),\n        selected-focus-item-background: (\n            color: (\n                'gray',\n                200,\n            ),\n        ),\n        selected-focus-item-text-color: (\n            contrast-color: (\n                'gray',\n                200,\n            ),\n        ),\n        border-radius: (\n            border-radius: (\n                rem(2px),\n                rem(0),\n                rem(20px),\n            ),\n        ),\n    )\n);\n\n/// Generates a bootstrap drop-down schema.\n/// @type {Map}\n/// @prop {Map} header-text-color [color: ('gray', 700)] - The drop-down header text color.\n/// @prop {Map} hover-item-background [color: ('gray', 100)] - The drop-down hover item background color.\n/// @prop {Map} focused-item-background [color: ('primary', 500)] - The drop-down focused item background color.\n/// @prop {Map} focused-item-text-color [contrast-color('primary', 600)] - The drop-down focused item text color.\n/// @prop {Map} selected-item-background [color: ('primary', 500)] - The drop-down selected item background color.\n/// @prop {Map} selected-item-text-color [contrast-color('primary', 600)] - The drop-down selected item text color.\n/// @prop {Map} selected-hover-item-background [color: ('primary', 600)] - The drop-down selected item hover background color.\n/// @prop {Map} selected-hover-item-text-color [contrast-color('primary', 600)] - The drop-down selected item hover text color.\n/// @prop {Map} selected-focus-item-background [color: ('primary', 600)] - The drop-down selected item focus background color.\n/// @prop {Map} selected-focus-item-text-color [contrast-color('primary', 600)] - The drop-down selected item focus text color.\n/// @prop {Number} elevation [0] - The elevation level, between 0-24, to be used for the drop-down shadow.\n/// @prop {Number} border-width [1px] - The border width used for drop-down component.\n/// @requires {Map} $light-drop-down\n/// @requires {Map} $bootstrap-elevation-drop-down\n$bootstrap-drop-down: extend(\n    $light-drop-down,\n    $bootstrap-elevation-drop-down,\n    (\n        header-text-color: (\n            color: (\n                'gray',\n                700,\n            ),\n        ),\n        hover-item-background: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        focused-item-background: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        focused-item-text-color: (\n            contrast-color: (\n                'primary',\n                600,\n            ),\n        ),\n        selected-item-background: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        selected-item-text-color: (\n            contrast-color: (\n                'primary',\n                600,\n            ),\n        ),\n        selected-hover-item-background: (\n            color: (\n                'primary',\n                600,\n            ),\n        ),\n        selected-hover-item-text-color: (\n            contrast-color: (\n                'primary',\n                600,\n            ),\n        ),\n        selected-focus-item-background: (\n            color: (\n                'primary',\n                600,\n            ),\n        ),\n        selected-focus-item-text-color: (\n            contrast-color: (\n                'primary',\n                600,\n            ),\n        ),\n        border-width: 1px,\n        disabled-item-text-color: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n    )\n);\n\n/// Generates an indigo drop-down schema.\n/// @type {Map}\n/// @prop {Map} header-text-color [color: ('primary', 500)] - The drop-down header text color.\n/// @prop {Color} item-text-color [color: ('gray', 700)] - The drop-down text color.\n/// @prop {Map} hover-item-background [color: ('primary', 500, .15)] - The drop-down hover item background color.\n/// @prop {Map} focused-item-background [color: ('primary', 500, .15)] - The drop-down focused item background color.\n/// @prop {Map} selected-item-background [color: ('primary', 500)] - The drop-down selected item background color.\n/// @prop {Color} selected-item-text-color [#fff] - The drop-down selected item text color.\n/// @prop {Map} selected-hover-item-background [color: ('primary', 400)] - The drop-down selected item hover background color.\n/// @prop {Color} selected-hover-item-text-color [#fff] - The drop-down selected item hover text color.\n/// @prop {Map} selected-focus-item-background [color: ('primary', 400)] - The drop-down selected item focus background color.\n/// @prop {Color} selected-focus-item-text-color [#fff] - The drop-down selected item focus text color.\n/// @prop {Number} elevation [3] - The elevation level, between 0-24, to be used for the badge shadow.\n/// @prop {List} border-radius [(rem(2px), rem(0), rem(20px))] - The border radius used for drop-down component.\n/// @prop {List} item-border-radius [(rem(2px), rem(0), rem(20px))] - The border radius used for the drop-down items.\n/// @requires {Map} $light-drop-down\n/// @requires {Map} $indigo-elevation-drop-down\n$indigo-drop-down: extend(\n    $light-drop-down,\n    $indigo-elevation-drop-down,\n    (\n        header-text-color: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        item-text-color: (\n            color: (\n                'gray',\n                700,\n            ),\n        ),\n        hover-item-background: (\n            color: (\n                'primary',\n                500,\n                0.15,\n            ),\n        ),\n        focused-item-background: (\n            color: (\n                'primary',\n                500,\n                0.15,\n            ),\n        ),\n        selected-item-background: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        selected-item-text-color: (\n            contrast-color: (\n                'primary',\n                500,\n            ),\n        ),\n        selected-hover-item-background: (\n            color: (\n                'primary',\n                400,\n            ),\n        ),\n        selected-hover-item-text-color: (\n            contrast-color: (\n                'primary',\n                400,\n            ),\n        ),\n        selected-focus-item-background: (\n            color: (\n                'primary',\n                400,\n            ),\n        ),\n        selected-focus-item-text-color: (\n            contrast-color: (\n                'primary',\n                400,\n            ),\n        ),\n        border-radius: (\n            border-radius: (\n                rem(2px),\n                rem(0),\n                rem(20px),\n            ),\n        ),\n        item-border-radius: (\n            border-radius: (\n                rem(2px),\n                rem(0),\n                rem(20px),\n            ),\n        ),\n    )\n);\n","////\n/// @package theming\n/// @group schemas\n/// @access public\n////\n\n/* stylelint-disable max-line-length */\n\n/// @type Map\n/// @prop {Number} search-resting-elevation [1] - The elevation level, between 0-24, to be used for the resting state of the search input.\n/// @prop {Number} search-hover-elevation [2] - The elevation level, between 0-24, to be used for the hover state of the search input.\n/// @prop {Number} search-disabled-elevation [0] - The elevation level, between 0-24, to be used for the disabled state of the search input.\n$default-elevation-input-group: (\n    search-resting-elevation: 1,\n    search-hover-elevation: 2,\n    search-disabled-elevation: 0,\n);\n\n/// @type Map\n/// @prop {Number} search-resting-elevation [0] - The elevation level, between 0-24, to be used for the resting state of the search input.\n/// @prop {Number} search-hover-elevation [0] - The elevation level, between 0-24, to be used for the hover state of the search input.\n/// @prop {Number} search-disabled-elevation [0] - The elevation level, between 0-24, to be used for the disabled state of the search input.\n$fluent-elevation-input-group: (\n    search-resting-elevation: 0,\n    search-hover-elevation: 0,\n    search-disabled-elevation: 0,\n);\n\n/// @type Map\n/// @prop {Number} search-resting-elevation [1] - The elevation level, between 0-24, to be used for the resting state of the search input.\n/// @prop {Number} search-hover-elevation [1] - The elevation level, between 0-24, to be used for the hover state of the search input.\n/// @prop {Number} search-disabled-elevation [1] - The elevation level, between 0-24, to be used for the disabled state of the search input.\n$indigo-elevation-input-group: (\n    search-resting-elevation: 1,\n    search-hover-elevation: 1,\n    search-disabled-elevation: 1,\n);\n","@use '../../../../utils/map' as *;\n@use '../../../../typography/functions' as *;\n@use '../elevation/input-group' as *;\n\n////\n/// @package theming\n/// @group schemas\n/// @access public\n////\n\n/* stylelint-disable max-line-length */\n\n/// Generates a light input-group schema.\n/// @type {Map}\n/// @prop {Map} input-prefix-color [color: ('gray', 700)] - The text color of an input prefix of type line, box and border.\n/// @prop {Color} input-prefix-background [transparent] - The background color of an input prefix of type line, box and border.\n/// @prop {Map} input-suffix-color [color: ('gray', 700)] - The text color of an input suffix of type line, box and border.\n/// @prop {Color} input-suffix-background [transparent] - The background color of an input suffix of type line, box and border.\n/// @prop {Map} idle-text-color [color: ('gray', 700)] - The input text color in the idle state.\n/// @prop {Map} filled-text-color [color: ('gray', 900)] - The input text color in the filled state.\n/// @prop {Map} focused-text-color [color: ('gray', 900)] - The input text color in the focused state.\n/// @prop {Map} disabled-text-color [color: ('gray', 500)] - The input text color in the disabled state.\n/// @prop {Map} helper-text-color [color: ('gray', 700)] - The helper text color.\n/// @prop {Map} idle-secondary-color [color: ('gray', 700)] - The label color in the idle state.\n/// @prop {Map} filled-secondary-color [color: ('gray', 600)] - The label color in the filled state.\n/// @prop {Map} focused-secondary-color [ color: ('primary', 500)] - The label color in the focused state.\n/// @prop {Map} idle-bottom-line-color [color: ('gray', 600)] - The bottom line and border colors in the idle state.\n/// @prop {Map} hover-bottom-line-color [color: ('gray', 900)] - The bottom line and border colors in the hover state.\n/// @prop {Map} focused-bottom-line-color [color: ('primary', 500)] - The bottom line and border colors in the focused state.\n/// @prop {Map} interim-bottom-line-color [color: ('primary', 500, .12)] - The bottom line and border colors during the to-focused transition.\n/// @prop {Map} disabled-bottom-line-color [color: ('gray', 500)] - The bottom line and border colors in the disabled state.\n/// @prop {Map} border-color [color: ('gray', 600)] - The border color for input groups of type border and fluent.\n/// @prop {Map} hover-border-color [color: ('gray', 900)] - The hover input border for input groups of type border and fluent.\n/// @prop {Map} focused-border-color [color: ('primary', 500)] - The focused input border color for input groups of type border and fluent.\n/// @prop {Map} disabled-border-color [color: ('gray', 400)] - The disabled border color for input groups of type border and fluent.\n/// @prop {Map} box-background [color: ('gray', 100)] - The background color of an input group of type box.\n/// @prop {Map} box-background-hover [color: ('gray', 200)] - The background color of an input group of type box on hover.\n/// @prop {Map} box-background-focus [color: ('gray', 200)] - The background color of an input group of type box on focus.\n/// @prop {Map} box-disabled-background [color: ('gray', 100)] - The background color of an input group of type box in the disabled state.\n/// @prop {Color} border-background [transparent] - The background color of an input group of type border.\n/// @prop {Color} border-disabled-background [transparent] - The background color of an input group of type border in the disabled state.\n/// @prop {Map} search-background [color: ('gray', 50)] - The background color of an input group of type search.\n/// @prop {Map} search-disabled-background [color: ('gray', 100)] - The background color of an input group of type search in the disabled state.\n/// @prop {Number} search-resting-elevation [1] - The elevation level, between 0-24, to be used for the resting state of the search input.\n/// @prop {Number} search-hover-elevation [2] - The elevation level, between 0-24, to be used for the hover state of the search input.\n/// @prop {Number} search-disabled-elevation [0] - The elevation level, between 0-24, to be used for the disabled state of the search input.\n/// @prop {Map} success-secondary-color [color: ('success')] - The success color used in the valid state.\n/// @prop {Map} warning-secondary-color [color: ('warn')] - The warning color used in the warning state.\n/// @prop {Map} error-secondary-color [color: ('error')] - The error color used in the error state.\n/// @prop {Map} success-shadow-color [color: ('success', 500, .38)] - The shadow/border color for success state for bootstrap input group.\n/// @prop {Map} error-shadow-color [color: ('error', 500, .38)] - The shadow/border color for error state for bootstrap input group.\n/// @prop {Map} placeholder-color [color: ('gray', 700)] - The placeholder color of an input group.\n/// @prop {Map} disabled-placeholder-color [color: ('gray', 500)] - The disabled placeholder color of an input group.\n/// @prop {List} box-border-radius [(rem(4px), rem(0), rem(20px))] - The border radius used for box input.\n/// @prop {List} border-border-radius [(rem(4px), rem(0), rem(20px))] - The border radius used for border input.\n/// @prop {List} search-border-radius [(rem(4px), rem(0), rem(20px))] - The border radius used for search input.\n/// @prop {Map} input-prefix-color--filled [color: ('gray', 900)] - The input prefix color in the filled state.\n/// @prop {Color} input-prefix-background--filled [inherit] - The background color of an input prefix in the filled state.\n/// @prop {Map} input-prefix-color--focused [color: ('gray', 900)] - The input prefix color in the focused state.\n/// @prop {Color} input-prefix-background--focused [inherit] - The background color of an input prefix in the focused state.\n/// @prop {Map} input-suffix-color--filled [color: ('gray', 900)] - The input suffix color in the filled state.\n/// @prop {Color} input-suffix-background-filled [inherit] - The background color of an input suffix in the filled state.\n/// @prop {Map} input-suffix-color--focused [color: ('gray', 900)] - The input suffix color in the focused state.\n/// @prop {Color} input-suffix-background--focused [inherit] - The background color of an input suffix in the focused state.\n/// @prop {List} size [(rem(40px), rem(48px), rem(56px))] - The size used for the input group.\n/// @prop {Number} default-size [2] - The default size used for the input group component.\n/// @requires {Map} $default-elevation-input-group\n$light-input-group: extend(\n    $default-elevation-input-group,\n    (\n        helper-text-color: (\n            color: (\n                'gray',\n                700,\n            ),\n        ),\n        input-prefix-background: transparent,\n        input-prefix-color: (\n            color: (\n                'gray',\n                700,\n            ),\n        ),\n        input-prefix-background--filled: inherit,\n        input-prefix-color--filled: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        input-prefix-background--focused: inherit,\n        input-prefix-color--focused: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        input-suffix-background: transparent,\n        input-suffix-color: (\n            color: (\n                'gray',\n                700,\n            ),\n        ),\n        input-suffix-background--filled: inherit,\n        input-suffix-color--filled: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        input-suffix-background--focused: inherit,\n        input-suffix-color--focused: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        // Text colors\n        idle-text-color:\n            (\n                color: (\n                    'gray',\n                    700,\n                ),\n            ),\n        filled-text-color: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        focused-text-color: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        disabled-text-color: (\n            color: (\n                'gray',\n                500,\n            ),\n        ),\n        // State colors\n        idle-secondary-color:\n            (\n                color: (\n                    'gray',\n                    700,\n                ),\n            ),\n        filled-secondary-color: (\n            color: (\n                'gray',\n                600,\n            ),\n        ),\n        focused-secondary-color: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        idle-bottom-line-color: (\n            color: (\n                'gray',\n                500,\n            ),\n        ),\n        hover-bottom-line-color: (\n            color: (\n                'gray',\n                800,\n            ),\n        ),\n        focused-bottom-line-color: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        interim-bottom-line-color: (\n            color: (\n                'primary',\n                500,\n                0.12,\n            ),\n        ),\n        disabled-bottom-line-color: (\n            color: (\n                'gray',\n                500,\n            ),\n        ),\n        disabled-border-color: (\n            color: (\n                'gray',\n                500,\n            ),\n        ),\n        border-color: (\n            color: (\n                'gray',\n                600,\n            ),\n        ),\n        hover-border-color: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        focused-border-color: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        border-background: transparent,\n        border-disabled-background: transparent,\n        search-background: (\n            color: (\n                'gray',\n                50,\n            ),\n        ),\n        search-disabled-background: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        success-secondary-color: (\n            color: (\n                'success',\n            ),\n        ),\n        warning-secondary-color: (\n            color: (\n                'warn',\n            ),\n        ),\n        error-secondary-color: (\n            color: (\n                'error',\n            ),\n        ),\n        placeholder-color: (\n            color: (\n                'gray',\n                700,\n            ),\n        ),\n        disabled-placeholder-color: (\n            color: (\n                'gray',\n                500,\n            ),\n        ),\n        box-background: (\n            color: (\n                'gray',\n                200,\n            ),\n        ),\n        box-background-hover: (\n            color: (\n                'gray',\n                200,\n            ),\n        ),\n        box-background-focus: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        box-disabled-background: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        box-border-radius: (\n            border-radius: (\n                rem(4px),\n                rem(0),\n                rem(20px),\n            ),\n        ),\n        border-border-radius: (\n            border-radius: (\n                rem(4px),\n                rem(0),\n                rem(20px),\n            ),\n        ),\n        search-border-radius: (\n            border-radius: (\n                rem(4px),\n                rem(0),\n                rem(20px),\n            ),\n        ),\n        success-shadow-color: (\n            color: (\n                'success',\n                500,\n                0.38,\n            ),\n        ),\n        error-shadow-color: (\n            color: (\n                'error',\n                500,\n                0.38,\n            ),\n        ),\n        size: (\n            sizable: (\n                rem(40px),\n                rem(48px),\n                rem(56px),\n            ),\n        ),\n        default-size: 2,\n    )\n);\n\n/// Generates a fluent input-group schema.\n/// @type {Map}\n/// @prop {Map} idle-secondary-color [color: ('gray', 900)] - The label color in the idle state.\n/// @prop {Map} idle-text-color [color: ('gray', 900)] - The input text color in the idle state.\n/// @prop {Map} disabled-text-color [color: ('gray', 500)] - The input text color in the disabled state.\n/// @prop {Map} border-color [color: ('gray', 500)] - The border color for input groups of type border and fluent.\n/// @prop {Map} hover-border-color [color: ('gray', 700)] - The hover input border for input groups of type border and fluent.\n/// @prop {Map} disabled-border-color [color: ('gray', 100)] - The disabled border color for input groups of type border and fluent.\n/// @prop {Map} focused-border-color [color: ('primary', 500)] - The focused input border color for input groups of type border and fluent.\n/// @prop {Map} border-disabled-background [color: ('gray', 100)] - The background color of an input group of type border in the disabled state.\n/// @prop {Map} search-disabled-background [color: ('gray', 100)] - The background color of an input group of type search in the disabled state.\n/// @prop {Number} search-resting-elevation [0] - The elevation level, between 0-24, to be used for the resting state of the search input.\n/// @prop {Number} search-hover-elevation [0] - The elevation level, between 0-24, to be used for the hover state of the search input.\n/// @prop {Number} search-disabled-elevation [0] - The elevation level, between 0-24, to be used for the disabled state of the search input.\n/// @prop {List} box-border-radius [(rem(2px), rem(0), rem(20px))] - The border radius used for box input.\n/// @prop {List} border-border-radius [(rem(2px), rem(0), rem(20px))] - The border radius used for border input.\n/// @prop {List} search-border-radius [(rem(2px), rem(0), rem(20px))] - The border radius used for search input.\n/// @prop {Map} input-prefix-color [color: ('gray', 700)] - The text color of an input prefix of type line, box and border.\n/// @prop {Map} input-prefix-color--filled [color: ('gray', 700)] - The input prefix color in the filled state.\n/// @prop {Map} input-prefix-color--focused [color: ('gray', 700)] - The input prefix color in the focused state.\n/// @prop {Map} input-prefix-background [color: ('gray', 100)] - The background color of an input prefix of type line, box, border and fluent.\n/// @prop {Map} input-prefix-background--filled [color: ('gray', 100)] - The background color of an input prefix in the filled state.\n/// @prop {Map} input-prefix-background--focused [color: ('gray', 100)] - The background color of an input prefix in the focused state.\n/// @prop {Map} input-suffix-color [color: ('gray', 700)] - The text color of an input suffix of type line, box and border.\n/// @prop {Map} input-suffix-color--filled [color: ('gray', 700)] - The input suffix color in the filled state.\n/// @prop {Map} input-suffix-color--focused [color: ('gray', 700)] - The input suffix color in the focused state.\n/// @prop {Map} input-suffix-background [color: ('gray', 100)] - The background color of an input suffix of type line, box and border.\n/// @prop {Map} input-suffix-background-filled [color: ('gray', 100)] - The background color of an input suffix in the filled state.\n/// @prop {Map} input-suffix-background--focused [color: ('gray', 100)] - The background color of an input suffix in the focused state.\n/// @prop {List} size [(rem(32px), rem(40px), rem(48px))] - The size used for the input group.\n/// @requires {Map} $light-input-group\n/// @requires {Map} $fluent-elevation-input-group\n$fluent-input-group: extend(\n    $light-input-group,\n    $fluent-elevation-input-group,\n    (\n        idle-secondary-color: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        idle-text-color: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        disabled-text-color: (\n            color: (\n                'gray',\n                500,\n            ),\n        ),\n        border-color: (\n            color: (\n                'gray',\n                500,\n            ),\n        ),\n        hover-border-color: (\n            color: (\n                'gray',\n                700,\n            ),\n        ),\n        focused-border-color: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        disabled-border-color: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        border-disabled-background: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        search-disabled-background: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        input-prefix-color: (\n            color: (\n                'gray',\n                700,\n            ),\n        ),\n        input-prefix-color--filled: (\n            color: (\n                'gray',\n                700,\n            ),\n        ),\n        input-prefix-color--focused: (\n            color: (\n                'gray',\n                700,\n            ),\n        ),\n        input-prefix-background: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        input-prefix-background--filled: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        input-prefix-background--focused: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        input-suffix-color: (\n            color: (\n                'gray',\n                700,\n            ),\n        ),\n        input-suffix-color--filled: (\n            color: (\n                'gray',\n                700,\n            ),\n        ),\n        input-suffix-color--focused: (\n            color: (\n                'gray',\n                700,\n            ),\n        ),\n        input-suffix-background: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        input-suffix-background--filled: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        input-suffix-background--focused: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        box-border-radius: (\n            border-radius: (\n                rem(2px),\n                rem(0),\n                rem(20px),\n            ),\n        ),\n        border-border-radius: (\n            border-radius: (\n                rem(2px),\n                rem(0),\n                rem(20px),\n            ),\n        ),\n        search-border-radius: (\n            border-radius: (\n                rem(2px),\n                rem(0),\n                rem(20px),\n            ),\n        ),\n        size: (\n            sizable: (\n                rem(32px),\n                rem(40px),\n                rem(48px),\n            ),\n        ),\n    )\n);\n\n/// Generates a bootstrap input-group schema.\n/// @type {Map}\n/// @prop {Map} border-disabled-background [color: ('gray', 100)] - The background color of an input group of type border in the disabled state.\n/// @prop {Map} border-color [color: ('gray', 400)] - The border color for input groups of type border and fluent.\n/// @prop {Map} idle-secondary-color [color: ('gray', 700)] - The label color in the idle state.\n/// @prop {Map} disabled-border-color [color: ('gray', 300)] - The disabled border color for input groups of type border and fluent.\n/// @prop {Map} focused-secondary-color [color: ('primary', 500, .38)] - The label color in the focused state.\n/// @prop {Map} success-secondary-color [color: ('success', 500)] - The success color used in the valid state.\n/// @prop {Map} warning-secondary-color [color: ('warn', 500)] - The warning color used in the warning state.\n/// @prop {Map} error-secondary-color [color: ('error')] - The error color used in the error state.\n/// @prop {Map} disabled-text-color [color: ('gray', 400)] - The input text color in the disabled state.\n/// @prop {Map} interim-bottom-line-color [color: ('primary', 500)] - The bottom line and border colors during the to-focused transition.\n/// @prop {Map} disabled-placeholder-color [color: ('gray', 400)] - The disabled placeholder color of an input group.\n/// @prop {Map} input-prefix-color [color: ('gray', 800)] - The input prefix color in the idle state.\n/// @prop {Map} input-prefix-color--filled [color: ('gray', 800)] - The input prefix color in the filled state.\n/// @prop {Map} input-prefix-color--focused [color: ('gray', 800)] - The input prefix color in the focused state.\n/// @prop {Map} input-prefix-background [color: ('gray', 300)] - The background color of an input prefix in the idle state.\n/// @prop {Map} input-prefix-background--filled [color: ('gray', 300)] - The background color of an input prefix in the filled state.\n/// @prop {Map} input-prefix-background--focused [color: ('gray', 300)] - The background color of an input prefix in the focused state.\n/// @prop {Map} input-suffix-color [color: ('gray', 800)] - The input suffix color in the idle state\n/// @prop {Map} input-suffix-color--filled [color: ('gray', 800)] - The input suffix color in the filled state.\n/// @prop {Map} input-suffix-color--focused [color: ('gray', 800)] - The input suffix color in the focused state.\n/// @prop {Map} input-suffix-background [color: ('gray', 300)] - The background color of an input suffix in the idle state.\n/// @prop {Map} input-suffix-background-filled [color: ('gray', 300)] - The background color of an input suffix in the filled state.\n/// @prop {Map} input-suffix-background--focused [color: ('gray', 300)] - The background color of an input suffix in the focused state.\n/// @prop {List} size [(rem(31px), rem(38px), rem(48px))] - The size used for the input group.\n/// @requires {Map} $light-input-group\n$bootstrap-input-group: extend(\n    $light-input-group,\n    (\n        interim-bottom-line-color: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        border-disabled-background: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        focused-secondary-color: (\n            color: (\n                'primary',\n                500,\n                0.38,\n            ),\n        ),\n        success-secondary-color: (\n            color: (\n                'success',\n                500,\n            ),\n        ),\n        warning-secondary-color: (\n            color: (\n                'warn',\n                500,\n            ),\n        ),\n        error-secondary-color: (\n            color: (\n                'error',\n                500,\n            ),\n        ),\n        border-color: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n        idle-secondary-color: (\n            color: (\n                'gray',\n                700,\n            ),\n        ),\n        input-prefix-color: (\n            color: (\n                'gray',\n                800,\n            ),\n        ),\n        input-prefix-background: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        input-prefix-background--filled: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        input-prefix-background--focused: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        input-suffix-color: (\n            color: (\n                'gray',\n                800,\n            ),\n        ),\n        input-suffix-background: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        input-suffix-background--filled: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        input-suffix-background--focused: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        disabled-text-color: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n        disabled-border-color: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        box-disabled-background: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        disabled-placeholder-color: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n        size: (\n            sizable: (\n                rem(31px),\n                rem(38px),\n                rem(48px),\n            ),\n        ),\n    )\n);\n\n/// Generates an indigo input-group schema.\n/// @type {Map}\n/// @prop {Map} input-prefix-color [color: ('gray', 600)] - The text color of an input prefix of type line, box and border.\n/// @prop {Map} input-suffix-color [color: ('gray', 600)] - The text color of an input suffix of type line, box and border.\n/// @prop {Map} helper-text-color [color: ('gray', 600)] - The helper text color.\n/// @prop {Map} border-color [color: ('gray', 400)] - The border color for input groups of type border and fluent.\n/// @prop {Color} box-background [transparent] - The background color of an input group of type box.\n/// @prop {Map} box-background-hover [color: ('gray', 100)] - The background color of an input group of type box on hover.\n/// @prop {Map} disabled-border-color [color: ('gray', 300)] - The disabled border color for input groups of type border and fluent.\n/// @prop {Map} disabled-bottom-line-color [color: ('gray', 300)] - The bottom line and border colors in the disabled state.\n/// @prop {Color} box-disabled-background [transparent] - The background color of an input group in the disabled state.\n/// @prop {Map} disabled-text-color [color: ('gray', 300)] - The input text color in the disabled state.\n/// @prop {Map} idle-bottom-line-color [color: ('gray', 500)] - The bottom line and border colors in the idle state.\n/// @prop {Map} focused-bottom-line-color [color: ('secondary', 500)] - The bottom line and border colors in the focused state.\n/// @prop {Map} focused-border-color [color: ('primary', 400)] - The focused input border color for input groups of type border and fluent.\n/// @prop {Map} hover-border-color [color: ('gray', 600)] - The hover input border for input groups of type border and fluent.\n/// @prop {Map} hover-bottom-line-color [color: ('gray', 500)] - The bottom line and border colors in the hover state.\n/// @prop {Map} idle-text-color [color: ('gray', 600)] - The input text color in the idle state.\n/// @prop {Number} search-resting-elevation [1] - The elevation level, between 0-24, to be used for the resting state of the search input.\n/// @prop {Number} search-hover-elevation [1] - The elevation level, between 0-24, to be used for the hover state of the search input.\n/// @prop {Number} search-disabled-elevation [1] - The elevation level, between 0-24, to be used for the disabled state of the search input.\n/// @prop {List} box-border-radius [(rem(0), rem(0), rem(20px))] - The border radius used for box input.\n/// @prop {List} border-border-radius [(rem(0), rem(0), rem(20px))] - The border radius used for border input.\n/// @prop {List} search-border-radius [(rem(2px), rem(0), rem(20px))] - The border radius used for search input.\n/// @prop {Map} placeholder-color [color: ('gray', 300)] - The placeholder color of an input group.\n/// @prop {Map} disabled-placeholder-color [color: ('gray', 300)] - The disabled placeholder color of an input group.\n/// @prop {Map} input-prefix-color--filled [color: ('gray', 600)] - The input prefix color in the filled state.\n/// @prop {Map} input-suffix-color--filled [color: ('gray', 600)] - The input suffix color in the filled state.\n/// @prop {Map} input-prefix-color--focused [color: ('gray', 600)] - The input prefix color in the focused state.\n/// @prop {Map} input-suffix-color--focused [color: ('gray', 600)] - The input suffix color in the focused state.\n/// @requires {Map} $light-input-group\n/// @requires {Map} $indigo-elevation-input-group\n$indigo-input-group: extend(\n    $light-input-group,\n    $indigo-elevation-input-group,\n    (\n        input-prefix-color: (\n            color: (\n                'gray',\n                600,\n            ),\n        ),\n        input-suffix-color: (\n            color: (\n                'gray',\n                600,\n            ),\n        ),\n        input-prefix-color--filled: (\n            color: (\n                'gray',\n                600,\n            ),\n        ),\n        input-suffix-color--filled: (\n            color: (\n                'gray',\n                600,\n            ),\n        ),\n        input-prefix-color--focused: (\n            color: (\n                'gray',\n                600,\n            ),\n        ),\n        input-suffix-color--focused: (\n            color: (\n                'gray',\n                600,\n            ),\n        ),\n        helper-text-color: (\n            color: (\n                'gray',\n                600,\n            ),\n        ),\n        border-color: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n        hover-border-color: (\n            color: (\n                'gray',\n                600,\n            ),\n        ),\n        focused-border-color: (\n            color: (\n                'primary',\n                400,\n            ),\n        ),\n        disabled-border-color: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        idle-bottom-line-color: (\n            color: (\n                'gray',\n                500,\n            ),\n        ),\n        focused-bottom-line-color: (\n            color: (\n                'secondary',\n                500,\n            ),\n        ),\n        hover-bottom-line-color: (\n            color: (\n                'gray',\n                500,\n            ),\n        ),\n        disabled-bottom-line-color: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        box-background: transparent,\n        box-disabled-background: transparent,\n        box-background-hover: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        idle-text-color: (\n            color: (\n                'gray',\n                600,\n            ),\n        ),\n        disabled-text-color: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        placeholder-color: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        disabled-placeholder-color: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        box-border-radius: (\n            border-radius: (\n                rem(0),\n                rem(0),\n                rem(20px),\n            ),\n        ),\n        border-border-radius: (\n            border-radius: (\n                rem(0),\n                rem(0),\n                rem(20px),\n            ),\n        ),\n        search-border-radius: (\n            border-radius: (\n                rem(2px),\n                rem(0),\n                rem(20px),\n            ),\n        ),\n        idle-secondary-color: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n    )\n);\n","@use '../../../../utils/map' as *;\n@use '../../../../typography/functions' as *;\n\n////\n/// @package theming\n/// @group schemas\n/// @access public\n////\n\n/* stylelint-disable max-line-length */\n\n/// @prop {Map} label-color [color: ('gray', 900)] - sets the color for the label.\n/// @prop {Map} value-label [color: ('gray', 700)] - sets the color for the value label.\n/// @prop {Number} symbol-size [rem(36px)] - the size of the symbols.\n/// @prop {Map} symbol-empty-color [color: ('gray', 900)] - sets the idle color for the symbol when it is a plane text.\n/// @prop {Map} symbol-full-color [color: ('primary')] - sets the color in selected state for the symbol when it is a plane text.\n/// @prop {Function} symbol-empty-filter [grayscale(100%) opacity(50%)] - the filter(s) used for the empty symbol.\n/// @prop {Function} symbol-full-filter [grayscale(50%)] - the filter(s) used for the filled symbol.\n/// @prop {Map} disabled-label-color [color: ('gray', 400)] - sets the color for the label in disabled state.\n/// @prop {Map} disabled-empty-symbol-color [color: ('gray', 400)] - sets the idle color for the symbol in disabled state when it is a plane text.\n/// @prop {Map} disabled-full-symbol-color [color: ('gray', 600)] - sets the color for the symbol in selected/disabled state when it is a plane text.\n/// @prop {Number} default-size [2] - The default size used for the rating component.\n/// Generates a light rating schema.\n/// @type {Map}\n$light-rating: (\n    symbol-size: null,\n\n    label-color: (\n        color: (\n            'gray',\n            900,\n        ),\n    ),\n    value-label: (\n        color: (\n            'gray',\n            700,\n        ),\n    ),\n    symbol-empty-color: (\n        color: (\n            'gray',\n            600,\n        ),\n    ),\n    symbol-full-color: (\n        color: (\n            'warn',\n        ),\n    ),\n    symbol-empty-filter: (\n        grayscale(100%) opacity(50%),\n    ),\n    symbol-full-filter: (\n        grayscale(50%),\n    ),\n    disabled-label-color: (\n        color: (\n            'gray',\n            400,\n        ),\n    ),\n    disabled-value-label: (\n        color: (\n            'gray',\n            400,\n        ),\n    ),\n    disabled-empty-symbol-color: (\n        color: (\n            'gray',\n            400,\n        ),\n    ),\n    disabled-full-symbol-color: (\n        color: (\n            'warn',\n            200,\n        ),\n    ),\n    default-size: 2,\n);\n\n/// Generates a fluent rating schema.\n/// @type {Map}\n/// @prop {Map} value-label [color: ('gray', 900)] - sets the color for the value label.\n/// @prop {Map} disabled-idle-symbols-color [color: ('gray', 200)] - sets the idle color for the symbol in disabled state when it is a plane text.\n/// @prop {Map} symbol-empty-color [color: ('gray', 700)] - sets the idle color for the symbol when it is a plane text.\n/// @prop {Map} symbol-full-color [[color: ('warn', 900)] - sets the color in selected state for the symbol when it is a plane text.\n/// @prop {Map} disabled-empty-symbol-color [color: ('warn', 100)] - sets the idle color for the symbol in disabled state when it is a plane text.\n/// @prop {Map} disabled-full-symbol-color [color: ('warn', 100)] - sets the color for the symbol in selected/disabled state when it is a plane text.\n/// @requires {Map} $light-rating\n$fluent-rating: extend(\n    $light-rating,\n    (\n        value-label: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        symbol-empty-color: (\n            color: (\n                'gray',\n                700,\n            ),\n        ),\n        symbol-full-color: (\n            color: (\n                'warn',\n                900,\n            ),\n        ),\n        disabled-value-label: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n        disabled-empty-symbol-color: (\n            color: (\n                'warn',\n                100,\n            ),\n        ),\n        disabled-full-symbol-color: (\n            color: (\n                'warn',\n                100,\n            ),\n        ),\n    )\n);\n\n/// Generates a bootstrap rating schema.\n/// @type {Map}\n/// @prop {Map} value-label [color: ('gray', 900)] - sets the color for the value label.\n/// @requires {Map} $light-rating\n$bootstrap-rating: extend(\n    $light-rating,\n    (\n        value-label: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n    )\n);\n\n/// Generates an indigo rating schema.\n/// @type {Map}\n/// @prop {Map} value-label [color: ('gray', 900)] - sets the color for the value label.\n/// @requires {Map} $light-rating\n$indigo-rating: extend(\n    $light-rating,\n    (\n        value-label: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n    )\n);\n","@use '../../../../utils/map' as *;\n@use '../../../../typography/functions' as *;\n\n////\n/// @package theming\n/// @group schemas\n/// @access public\n////\n\n/* stylelint-disable max-line-length */\n\n/// Generates a light select schema.\n/// @type {Map}\n/// @prop {Map} toggle-button-background [color: ('gray', 300)] - The select toggle button background color.\n/// @prop {Map} toggle-button-background-focus [color: ('gray', 400, .3)] - The select toggle button background color when the select is focused.\n/// @prop {Map} toggle-button-foreground [color: ('gray', 700)] - The select toggle button foreground color.\n/// @prop {Map} toggle-button-foreground-focus [color: ('gray', 700)] - The select toggle button foreground color when the select is focused.\n/// @prop {Map} toggle-button-foreground-filled [color: ('gray', 900)] - The select toggle button foreground color when the select is filled.\n/// @prop {Map} toggle-button-background-disabled [color: ('gray', 100] - The select toggle button background color when the select is disabled.\n/// @prop {Map} toggle-button-foreground-disabled [color: ('gray', 500)] - The select toggle button foreground color when the select is disabled.\n/// @prop {Map} toggle-button-background-focus--border [color: ('gray', 300)] The select toggle button background color when the select is focused in material border and line variants.\n/// @prop {Number} default-size [2] - The default size used for the select component.\n$light-select: (\n    toggle-button-background-focus--border: (\n        color: (\n            'gray',\n            300,\n        ),\n    ),\n    toggle-button-background: (\n        color: (\n            'gray',\n            300,\n        ),\n    ),\n    toggle-button-background-focus: (\n        color: (\n            'gray',\n            400,\n            0.3,\n        ),\n    ),\n    toggle-button-foreground: (\n        color: (\n            'gray',\n            700,\n        ),\n    ),\n    toggle-button-foreground-focus: (\n        color: (\n            'gray',\n            700,\n        ),\n    ),\n    toggle-button-foreground-filled: (\n        color: (\n            'gray',\n            900,\n        ),\n    ),\n    toggle-button-background-disabled: (\n        color: (\n            'gray',\n            100,\n        ),\n    ),\n    toggle-button-foreground-disabled: (\n        color: (\n            'gray',\n            500,\n        ),\n    ),\n    default-size: 2,\n);\n\n/// Generates a fluent select schema.\n/// @type {Map}\n/// @prop {Map} toggle-button-background [color: ('gray', 100)] - The select toggle button background color.\n/// @prop {Map} toggle-button-background-focus [color: ('gray', 100)] - The select toggle button background color when the select is focused.\n/// @prop {Map} toggle-button-foreground-filled [color: ('gray', 700)] - The select toggle button foreground color when the select is focused.\n/// @prop {Map} toggle-button-foreground-disabled [color: ('gray', 400)] - The select toggle button foreground color when the select is disabled.\n/// @requires {Map} $light-select\n$fluent-select: extend(\n    $light-select,\n    (\n        toggle-button-background: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        toggle-button-background-focus: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        toggle-button-foreground-filled: (\n            color: (\n                'gray',\n                700,\n            ),\n        ),\n        toggle-button-foreground-disabled: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n    )\n);\n\n/// Generates a bootstrap select schema.\n/// @type {Map}\n/// @prop {Map} toggle-button-foreground-disabled [color: ('gray', 400)] - The select toggle button foreground color when the select is disabled.\n/// @prop {Map} toggle-button-foreground [color: ('gray', 800)] - The select toggle button foreground color.\n/// @prop {Map} toggle-button-foreground-focus [color: ('gray', 800)] - The select toggle button foreground color when the select is focused.\n/// @prop {Map} toggle-button-foreground-filled [color: ('gray', 800)] - The select toggle button foreground color when the select is focused.\n/// @requires {Map} $light-select\n$bootstrap-select: extend(\n    $light-select,\n    (\n        toggle-button-foreground-disabled: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n        toggle-button-foreground: (\n            color: (\n                'gray',\n                800,\n            ),\n        ),\n        toggle-button-foreground--focus: (\n            color: (\n                'gray',\n                800,\n            ),\n        ),\n        toggle-button-foreground-filled: (\n            color: (\n                'gray',\n                800,\n            ),\n        ),\n    )\n);\n\n/// Generates an indigo select schema.\n/// @type {Map}\n/// @prop {Color} toggle-button-background-disabled [transparent] - The select toggle button background color when the select is disabled.\n/// @prop {Map} toggle-button-foreground-disabled [color: ('gray', 300)] - The select toggle button foreground color when the select is disabled.\n/// @requires {Map} $light-select\n$indigo-select: extend(\n    $light-select,\n    (\n        toggle-button-background-disabled: transparent,\n        toggle-button-foreground-disabled: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n    )\n);\n","@use '../../../../utils/map' as *;\n@use '../../../../typography/functions' as *;\n\n////\n/// @package theming\n/// @group schemas\n/// @access public\n////\n\n/* stylelint-disable max-line-length */\n\n/// Generates a light slider schema.\n/// @type {Map}\n/// @prop {Map} track-color [color: ('secondary', 500)] - The color of the track.\n/// @prop {Color} track-step-color [color: ('secondary', 200)] - The color of the track steps.\n/// @prop {Number} track-step-size [rem(3px)] - The size of the track steps.\n/// @prop {Map} track-hover-color [color: ('secondary', 400)] - The color of the track on hover.\n/// @prop {Map} thumb-color [color: ('secondary', 500)] - The color of the thumb.\n/// @prop {Color} thumb-focus-color [transparent] - The focus outline color of the thumb.\n/// @prop {Map} thumb-border-color [color: ('secondary', 500)] - The thumb border color.\n/// @prop {Map} thumb-border-focus-color [color: ('secondary', 500)] - The thumb border color when focused.\n/// @prop {Map} thumb-disabled-border-color [color: ('gray', 400)] - The thumb border color when it's disabled.\n/// @prop {Map} disabled-thumb-color [color: ('gray', 400)] - The thumb color when its disabled.\n/// @prop {Map} label-background-color [color: ('gray', 700)] - The background color of the bubble label.\n/// @prop {Map} label-text-color [contrast-color: ('gray', 700)] - The text color of the bubble label.\n/// @prop {Map} base-track-color [color: ('secondary', 500, .24)] - The base background color of the track.\n/// @prop {Map} base-track-hover-color [color: ('secondary', 500, .24)] - The base background color of the track on hover.\n/// @prop {Map} disabled-base-track-color [color: ('gray', 200)] - The base background color of the track when is disabled.\n/// @prop {Map} disabled-fill-track-color [color: ('gray', 400)] - The background color of the fill track when is disabled.\n/// @prop {Map} tick-label-color [color: ('gray', 500)] - The color of the tick label.\n/// @prop {Map} tick-color [color: ('gray', 500)] - The background-color of the tick.\n$light-slider: (\n    track-color: (\n        color: (\n            'secondary',\n            500,\n        ),\n    ),\n    track-step-color: (\n        color: (\n            'secondary',\n            200,\n        ),\n    ),\n    track-step-size: rem(3px),\n    track-hover-color: (\n        color: (\n            'secondary',\n            400,\n        ),\n    ),\n    thumb-color: (\n        color: (\n            'secondary',\n            500,\n        ),\n    ),\n    thumb-focus-color: transparent,\n    thumb-border-color: (\n        color: (\n            'secondary',\n            500,\n        ),\n    ),\n    thumb-border-focus-color: (\n        color: (\n            'secondary',\n            500,\n        ),\n    ),\n    thumb-disabled-border-color: (\n        color: (\n            'gray',\n            400,\n        ),\n    ),\n    disabled-thumb-color: (\n        color: (\n            'gray',\n            400,\n        ),\n    ),\n    label-background-color: (\n        color: (\n            'gray',\n            700,\n        ),\n    ),\n    label-text-color: (\n        contrast-color: (\n            'gray',\n            700,\n        ),\n    ),\n    base-track-color: (\n        color: (\n            'secondary',\n            500,\n            0.24,\n        ),\n    ),\n    base-track-hover-color: (\n        color: (\n            'secondary',\n            500,\n            0.24,\n        ),\n    ),\n    disabled-base-track-color: (\n        color: (\n            'gray',\n            200,\n        ),\n    ),\n    disabled-fill-track-color: (\n        color: (\n            'gray',\n            400,\n        ),\n    ),\n    tick-color: (\n        color: (\n            'gray',\n            500,\n        ),\n    ),\n    tick-label-color: (\n        color: (\n            'gray',\n            500,\n        ),\n    ),\n);\n\n/// Generates a fluent slider schema.\n/// @type {Map}\n/// @prop {Map} track-color [color: ('gray', 800)] - The color of the track.\n/// @prop {Color} track-step-color [white] - The color of the track steps.\n/// @prop {Map} track-hover-color [color: ('primary', 500)] - The color of the track on hover.\n/// @prop {Map} thumb-color [color: ('surface', 500)] - The color of the thumb.\n/// @prop {Map} thumb-border-color [color: ('gray', 700)] - The thumb border color.\n/// @prop {Map} thumb-border-focus-color [color: ('gray', 700)] - The thumb border color when focused.\n/// @prop {Map} thumb-focus-color [color: ('primary', 700)] - The focus outline color of the thumb.\n/// @prop {Map} thumb-disabled-border-color [color: ('gray', 400)] - The thumb border color when it's disabled.\n/// @prop {Map} disabled-thumb-color [color: ('surface', 500)] - The thumb color when its disabled.\n/// @prop {Map} label-background-color [color: ('primary', 500)] - The background color of the bubble label.\n/// @prop {Map} base-track-color [color: ('gray', 600)] - The base background color of the track.\n/// @prop {Map} base-track-hover-color [color: ('gray', 600)] - The base background color of the track on hover.\n/// @prop {Map} disabled-base-track-color [color: ('gray', 100)] - The base background color of the track when is disabled.\n/// @prop {Map} disabled-fill-track-color [color: ('gray', 500)] - The background color of the fill track when is disabled.\n///\n/// @requires {Map} $light-slider\n$fluent-slider: extend(\n    $light-slider,\n    (\n        track-color: (\n            color: (\n                'gray',\n                800,\n            ),\n        ),\n        track-step-color: white,\n        track-hover-color: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        thumb-color: (\n            color: (\n                'surface',\n                500,\n            ),\n        ),\n        thumb-border-color: (\n            color: (\n                'gray',\n                700,\n            ),\n        ),\n        thumb-border-focus-color: (\n            color: (\n                'gray',\n                700,\n            ),\n        ),\n        thumb-focus-color: (\n            color: (\n                'primary',\n                700,\n            ),\n        ),\n        thumb-disabled-border-color: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n        disabled-thumb-color: (\n            color: (\n                'surface',\n                500,\n            ),\n        ),\n        base-track-color: (\n            color: (\n                'gray',\n                600,\n            ),\n        ),\n        base-track-hover-color: (\n            color: (\n                'gray',\n                600,\n            ),\n        ),\n        disabled-base-track-color: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        disabled-fill-track-color: (\n            color: (\n                'gray',\n                500,\n            ),\n        ),\n        label-background-color: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n    )\n);\n\n/// Generates a bootstrap slider schema.\n/// @type {Map}\n/// @prop {Map} base-track-color [color: ('secondary', 500, .24)] - The base background color of the track.\n/// @prop {Map} base-track-hover-color [color: ('secondary', 500, .24)] - The base background color of the track on hover.\n/// @prop {Map} thumb-color [color: ('primary', 500)] - The color of the thumb.\n/// @prop {Map} thumb-border-color [color: ('primary', 500)] - The thumb border color.\n/// @prop {Map} thumb-border-focus-color [color: ('surface', 500)] - The thumb border color when focused.\n/// @prop {Map} thumb-focus-color [color: ('primary', 200)] - The focus outline color of the thumb.\n/// @prop {Map} disabled-thumb-color [color: ('gray', 400)] - The thumb color when its disabled.\n///\n/// @requires {Map} $light-slider\n$bootstrap-slider: extend(\n    $fluent-slider,\n    (\n        base-track-color: (\n            color: (\n                'secondary',\n                500,\n                0.24,\n            ),\n        ),\n        base-track-hover-color: (\n            color: (\n                'secondary',\n                500,\n                0.24,\n            ),\n        ),\n        thumb-color: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        thumb-border-color: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        thumb-border-focus-color: (\n            color: (\n                'surface',\n                500,\n            ),\n        ),\n        thumb-focus-color: (\n            color: (\n                'primary',\n                200,\n            ),\n        ),\n        disabled-thumb-color: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n    )\n);\n\n/// Generates an indigo slider schema.\n/// @type {Map}\n/// @prop {Color} track-step-color [white] - The color of the track steps.\n/// @prop {Map} track-hover-color [color: ('primary', 400)] - The color of the track on hover.\n/// @prop {Map} base-track-color [color: ('gray', 400)] - The base background color of the track.\n/// @prop {Map} base-track-hover-color [color: ('gray', 500)] - The base background color of the track on hover.\n/// @prop {Map} thumb-focus-color [color: ('primary', 200)] - The focus outline color of the thumb.\n/// @prop {Map} disabled-thumb-color [color: ('gray', 300)] - The thumb color when its disabled.\n/// @prop {Map} disabled-base-track-color [color: ('gray', 300)] - The base background color of the track when is disabled.\n/// @prop {Map} disabled-fill-track-color [color: ('gray', 300)] - The background color of the fill track when is disabled.\n///\n/// @requires {Map} $light-slider\n$indigo-slider: extend(\n    $light-slider,\n    (\n        track-step-color: white,\n        track-hover-color: (\n            color: (\n                'primary',\n                400,\n            ),\n        ),\n        base-track-color: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n        base-track-hover-color: (\n            color: (\n                'gray',\n                500,\n            ),\n        ),\n        thumb-focus-color: (\n            color: (\n                'primary',\n                200,\n            ),\n        ),\n        disabled-thumb-color: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        disabled-base-track-color: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        disabled-fill-track-color: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n    )\n);\n","@use '../../../../utils/map' as *;\n@use '../../../../typography/functions' as *;\n@use '../elevation/switch' as *;\n\n////\n/// @package theming\n/// @group schemas\n/// @access public\n////\n\n/* stylelint-disable max-line-length */\n\n/// Generates a light switch schema.\n/// @type {Map}\n/// @prop {Map} thumb-on-color [color: ('secondary', 500)] - The color of the thumb when the switch is on.\n/// @prop {Map} track-on-color [color: ('secondary', 200)] - The color of the track when the switch is on.\n/// @prop {Map} thumb-off-color [color: ('gray', 50)] - The color of the thumb when the switch is off.\n/// @prop {Map} track-off-color [color: ('gray', 500)] - The color of the track when the switch is off.\n/// @prop {Map} thumb-disabled-color [color: ('gray', 200)] - The color of the thumb when the switch is disabled.\n/// @prop {Map} thumb-on-disabled-color [color: ('secondary', 100)] - The color of the thumb when the switch is on and disabled.\n/// @prop {Map} track-disabled-color [color: ('gray', 300)] - The color of the track when the switch is disabled.\n/// @prop {Map} track-on-disabled-color [color: ('secondary', 50)] - The color of the track when the switch is on and disabled.\n/// @prop {Map} label-color [color: ('gray', 900)] - The color of the switch label\n/// @prop {Map} label-disabled-color [color: ('gray', 500)] - The color of the switch label when the switch is disabled\n/// @prop {Number} resting-elevation [2] - The elevation level, between 0-24, to be used for the resting state.\n/// @prop {Number} hover-elevation [3] - The elevation level, between 0-24, to be used for the hover state.\n/// @prop {Number} disabled-elevation [1] - The elevation level, between 0-24, to be used for the disabled state.\n/// @prop {List} border-radius-track [(rem(7px), rem(0), rem(7px))] - The border radius used for switch track.\n/// @prop {List} border-radius-thumb [(rem(10px), rem(0), rem(10px))] - The border radius used for switch thumb.\n/// @prop {List} border-radius-ripple [(rem(24px), rem(0), rem(24px))] - The border radius used for switch ripple.\n/// @prop {Color} border-color [transparent] - The border color of the switch.\n/// @prop {Color} border-hover-color [transparent] - The border color of the switch on hover.\n/// @prop {Color} border-disabled-color [transparent] - The border color of the disabled switch.\n/// @prop {Color} border-on-color [transparent] - The border color of the on-switch.\n/// @prop {Color} border-on-hover-color [transparent] - The border color of the  on-switch.\n/// @prop {Map} label-invalid-color [color: ('gray', 900)] - The color of the switch label in invalid state.\n/// @prop {Map} track-error-color [color: ('gray', 500)] - The color of the track in invalid state when the switch is off.\n/// @prop {Map} thumb-on-error-color [color: ('secondary', 500)] - The color of the thumb when the switch is on and invalid.\n/// @prop {Map} error-color [color: ('gray', 50)] - The color of the thumb in invalid state.\n/// @prop {Map} error-color-hover [color: ('gray', 500)] - The border color in invalid state on hover.\n/// @requires {Map} $default-elevation-switch\n$light-switch: extend(\n    $default-elevation-switch,\n    (\n        border-color: transparent,\n        border-hover-color: transparent,\n        border-disabled-color: transparent,\n        border-on-color: transparent,\n        border-on-hover-color: transparent,\n        thumb-on-color: (\n            color: (\n                'secondary',\n                500,\n            ),\n        ),\n        track-on-color: (\n            color: (\n                'secondary',\n                200,\n            ),\n        ),\n        thumb-off-color: (\n            color: (\n                'gray',\n                50,\n            ),\n        ),\n        track-disabled-color: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        track-on-disabled-color: (\n            color: (\n                'secondary',\n                50,\n            ),\n        ),\n        track-off-color: (\n            color: (\n                'gray',\n                500,\n            ),\n        ),\n        thumb-disabled-color: (\n            color: (\n                'gray',\n                200,\n            ),\n        ),\n        thumb-on-disabled-color: (\n            color: (\n                'secondary',\n                100,\n            ),\n        ),\n        label-color: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        label-disabled-color: (\n            color: (\n                'gray',\n                500,\n            ),\n        ),\n        label-invalid-color: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        track-error-color: (\n            color: (\n                'gray',\n                500,\n            ),\n        ),\n        thumb-on-error-color: (\n            color: (\n                'secondary',\n                500,\n            ),\n        ),\n        error-color: (\n            color: (\n                'gray',\n                50,\n            ),\n        ),\n        error-color-hover: (\n            color: (\n                'gray',\n                500,\n            ),\n        ),\n        border-radius-track: (\n            border-radius: (\n                rem(7px),\n                rem(0),\n                rem(7px),\n            ),\n        ),\n        border-radius-thumb: (\n            border-radius: (\n                rem(10px),\n                rem(0),\n                rem(10px),\n            ),\n        ),\n        border-radius-ripple: (\n            border-radius: (\n                rem(24px),\n                rem(0),\n                rem(24px),\n            ),\n        ),\n    )\n);\n\n/// Generates a fluent switch schema.\n/// @type {Map}\n///\n/// @prop {Map} border-color [color('gray', 700)] - The border color of the switch.\n/// @prop {Map} border-hover-color [color('gray', 800)] - The border color of the switch on hover.\n/// @prop {Map} border-disabled-color [color('gray', 400)] - The border color of the disabled switch.\n/// @prop {Map} border-on-color [color('primary', 500)] - The border color of the on-switch.\n/// @prop {Map} border-on-hover-color [color('primary', 800)] - The border color of the on-switch.\n///\n/// @prop {Map} thumb-on-color [color: ('gray', 50)] - The color of the thumb when the switch is on.\n/// @prop {Map} thumb-off-color [color: ('gray', 700)] - The color of the thumb when the switch is off.\n/// @prop {Map} track-on-color [color: ('primary', 500)] - The color of the track when the switch is on.\n/// @prop {Color} track-off-color [transparent] - The color of the track when the switch is off.\n/// @prop {Map} track-on-hover-color [color: ('primary', 800)] - The color of the track when the switch is on and hovered.\n/// @prop {Map} track-on-disabled-color [color: ('gray', 400)] - The color of the track when the switch is on and disabled.\n/// @prop {Color} track-disabled-color [transparent] - The color of the track when the switch is disabled.\n/// @prop {Map} thumb-disabled-color [color: ('gray', 400)] - The color of the thumb when the switch is disabled.\n/// @prop {Map} thumb-on-disabled-color [color: ('gray', 100)] - The color of the thumb when the switch is on and disabled.\n/// @prop {Map} focus-outline-color [color: ('gray', 700)] - The focus outlined color.\n/// @prop {Map} error-color [color: ('gray', 700)] - The border and thumb color in invalid state.\n/// @prop {Map} error-color-hover [color: ('gray', 800)] - The border and thumb color in invalid state on hover.\n/// @prop {Map} thumb-on-error-color [color: ('gray', 50)] - The color of the thumb when the switch is on and invalid.\n///\n/// @prop {List} border-radius-track [(rem(10px), rem(0), rem(10px))] - The border radius used for switch track.\n///\n///\n/// @requires {Map} $light-switch\n$fluent-switch: extend(\n    $light-switch,\n    (\n        focus-outline-color: (\n            color: (\n                'gray',\n                700,\n            ),\n        ),\n        border-color: (\n            color: (\n                'gray',\n                700,\n            ),\n        ),\n        thumb-off-color: (\n            color: (\n                'gray',\n                700,\n            ),\n        ),\n        track-off-color: transparent,\n        border-hover-color: (\n            color: (\n                'gray',\n                800,\n            ),\n        ),\n        track-on-color: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        border-on-color: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        track-on-hover-color: (\n            color: (\n                'primary',\n                800,\n            ),\n        ),\n        border-on-hover-color: (\n            color: (\n                'primary',\n                800,\n            ),\n        ),\n        thumb-on-color: (\n            color: (\n                'gray',\n                50,\n            ),\n        ),\n        track-on-disabled-color: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n        thumb-disabled-color: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n        thumb-on-disabled-color: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        border-disabled-color: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n        thumb-on-error-color: (\n            color: (\n                'gray',\n                50,\n            ),\n        ),\n        error-color: (\n            color: (\n                'gray',\n                700,\n            ),\n        ),\n        error-color-hover: (\n            color: (\n                'gray',\n                800,\n            ),\n        ),\n        track-disabled-color: transparent,\n        border-radius-track: (\n            border-radius: (\n                rem(10px),\n                rem(0),\n                rem(10px),\n            ),\n        ),\n    )\n);\n\n/// Generates a bootstrap switch schema.\n/// @type {Map}\n/// @prop {Map} focus-outline-color [color: ('primary', 100)] - The focus outlined color.\n/// @prop {Map} focus-fill-color [color: ('primary', 200)] - The focus fill color.\n/// @prop {Map} border-color [color('gray', 400)] - The border color of the switch.\n/// @prop {Map} border-disabled-color [color: ('gray', 300)] - The border color of the disabled switch.\n/// @prop {Map} thumb-off-color [color: ('gray', 400)] - The color of the thumb when the switch is off.\n/// @prop {Map} thumb-disabled-color [color: ('gray', 300)] - The color of the thumb when the switch is disabled.\n/// @prop {Map} track-on-color [color: ('primary', 500)] - The color of the track when the switch is on.\n/// @prop {Map} track-on-disabled-color [color: ('primary', 200)] - The color of the track when the switch is on and disabled.\n/// @prop {Map} thumb-on-disabled-color [color: ('gray', 50)] - The color of the thumb when the switch is on and disabled.\n/// @prop {Color} track-disabled-color [transparent] - The color of the track when the switch is disabled.\n/// @prop {Map} error-color [color: ('gray', 400)] - The border and thumb color in invalid state.\n/// @prop {Map} error-color-hover [color: ('primary', 200)] - The border and thumb color in invalid state on hover.\n/// @prop {List} border-radius-track [(rem(32px), rem(0), rem(32px))] - The border radius used for switch track.\n/// @prop {List} border-radius-thumb [(rem(32px), rem(0), rem(32px))] - The border radius used for switch thumb.\n///\n///\n/// @requires {Map} $fluent-switch\n$bootstrap-switch: extend(\n    $fluent-switch,\n    (\n        focus-outline-color: (\n            color: (\n                'primary',\n                100,\n            ),\n        ),\n        focus-fill-color: (\n            color: (\n                'primary',\n                200,\n            ),\n        ),\n        border-color: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n        border-disabled-color: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        thumb-off-color: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n        thumb-disabled-color: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        thumb-on-disabled-color: (\n            color: (\n                'gray',\n                50,\n            ),\n        ),\n        track-on-color: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        track-on-disabled-color: (\n            color: (\n                'primary',\n                200,\n            ),\n        ),\n        error-color: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n        error-color-hover: (\n            color: (\n                'primary',\n                200,\n            ),\n        ),\n        border-radius-track: (\n            border-radius: (\n                rem(32px),\n                rem(0),\n                rem(32px),\n            ),\n        ),\n        border-radius-thumb: (\n            border-radius: (\n                rem(32px),\n                rem(0),\n                rem(32px),\n            ),\n        ),\n    )\n);\n\n/// Generates an indigo switch schema.\n/// @type {Map}\n///\n/// @prop {Map} thumb-on-color [color: ('gray', 50)] - The color of the thumb when the switch is on.\n/// @prop {Map} track-on-color [color: ('primary', 500)] - The color of the track when the switch is on.\n/// @prop {Map} thumb-off-color [color: ('gray', 600)] - The color of the thumb when the switch is off.\n/// @prop {Color} track-off-color [transparent] - The color of the track when the switch is off.\n/// @prop {Map} thumb-disabled-color [color: ('gray', 300)] - The color of the thumb when the switch is disabled.\n/// @prop {Color} track-disabled-color [transparent] - The color of the track when the switch is disabled.\n///\n/// @prop {Map} border-color [color: ('gray', 600)] - The border color of the switch.\n/// @prop {Map} border-hover-color [color: ('gray', 600)] - The border color of the switch on hover.\n/// @prop {Map} border-disabled-color [color: ('gray', 300)] - The border color of the disabled switch.\n/// @prop {Map} border-on-color [color: ('primary', 500)] - The border color of the on-switch.\n/// @prop {Map} border-on-hover-color [color: ('primary', 500)] - The border color of the  on-switch.\n/// @prop {Map} label-disabled-color [color: ('gray', 300)] - The color of the switch label when the switch is disabled\n/// @prop {Map} thumb-on-error-color [color: ('gray', 50)] - The color of the thumb when the switch is on and invalid.\n/// @prop {Map} error-color [color: ('gray', 500)] - The border and thumb color in invalid state.\n/// @prop {Map} error-color-hover [color: ('gray', 300)] - The border and thumb color in invalid state on hover.\n/// @prop {List} border-radius-track [(rem(8px), rem(0), rem(8px))] - The border radius used for switch track.\n/// @prop {Map} focus-outline-color [color: ('gray', 300)] - The focus outlined color.\n/// @prop {Map} focus-outline-color-focused [color: ('primary', 200)] - The focus outlined color for focused state.\n///\n///\n/// @requires $light-switch\n$indigo-switch: extend(\n    $light-switch,\n    (\n        focus-outline-color: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        focus-outline-color-focused: (\n            color: (\n                'primary',\n                200,\n            ),\n        ),\n        border-color: (\n            color: (\n                'gray',\n                500,\n            ),\n        ),\n        border-hover-color: (\n            color: (\n                'gray',\n                500,\n            ),\n        ),\n        border-disabled-color: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        border-on-color: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        border-on-hover-color: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        thumb-on-color: (\n            color: (\n                'gray',\n                50,\n            ),\n        ),\n        thumb-off-color: (\n            color: (\n                'gray',\n                600,\n            ),\n        ),\n        track-on-color: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        thumb-on-error-color: (\n            color: (\n                'gray',\n                50,\n            ),\n        ),\n        error-color: (\n            color: (\n                'gray',\n                500,\n            ),\n        ),\n        error-color-hover: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        track-off-color: transparent,\n        track-disabled-color: transparent,\n        thumb-disabled-color: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        label-disabled-color: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        border-radius-track: (\n            border-radius: (\n                rem(8px),\n                rem(0),\n                rem(8px),\n            ),\n        ),\n    )\n);\n","@use '../../../../utils/map' as *;\n@use '../../../../typography/functions' as *;\n\n////\n/// @package theming\n/// @group schemas\n/// @access public\n////\n\n/* stylelint-disable max-line-length */\n\n/// Generates a light tabs schema.\n/// @type {Map}\n/// @prop {Map} item-text-color [color: ('gray', 700)] - The color used for the tab text color.\n/// @prop {Color} item-background [color: ('surface')] - The background color used for the tabs header.\n/// @prop {Map} item-hover-background [color: ('gray', 200)] - The background used for the tabs on hover.\n/// @prop {Map} item-hover-color [color: ('gray', 700)] - The text color used for the tabs on hover.\n/// @prop {Map} item-icon-color [color: ('gray', 700)] - The color used for the tab icon.\n/// @prop {Map} item-active-icon-color [color: ('primary', 500)] - The color used for the active tab icon.\n/// @prop {Map} item-hover-icon-color [color: ('gray', 700)] - The color used for the tab icon on hover.\n/// @prop {Map} item-disabled-icon-color [color: ('gray', 500)] - The color used for the disabled tab icon.\n/// @prop {Map} item-active-color [color: ('primary', 500)] - The color used for the active tabs text.\n/// @prop {Map} item-active-background [color: ('gray', 200)] - The color used for the active/focused tab background.\n/// @prop {Map} item-disabled-color [color: ('gray', 500)] - The color used for the disabled tabs text.\n/// @prop {Map} indicator-color [color: ('primary', 500)] - The color used for the active tab indicator.\n/// @prop {Map} button-color [color: ('gray', 700)] - The color used for the button icon/text color.\n/// @prop {Map} button-hover-color [color: ('gray', 900)] - The color used for the button icon/text color on hover.\n/// @prop {Map} button-disabled-color [color: ('gray', 500)] - The color used for the disabled button icon/text.\n/// @prop {Color} button-background [color: ('surface')] - The color used for the button background.\n/// @prop {Map} button-hover-background [color: ('gray', 100)] - The color used for the button background on hover.\n/// @prop {Map} border-color [transparent] - The color used for the tab items bottom border.\n/// @prop {Map} border-color--hover [transparent] - The color used for the tab items bottom border on hover.\n/// @prop {Map} tab-ripple-color [color: ('gray', 100)] - The color used for the button background.\n/// @prop {Map} button-ripple-color [color: ('gray', 100)] - The color used for the button background on hover.\n/// @prop {List} border-radius [(rem(0), rem(0), rem(6px))] - The border radius used for tabs.\n$light-tabs: (\n    item-text-color: (\n        color: (\n            'gray',\n            700,\n        ),\n    ),\n    item-background: (\n        color: (\n            'surface',\n        ),\n    ),\n    item-hover-background: (\n        color: (\n            'gray',\n            200,\n        ),\n    ),\n    item-hover-color: (\n        color: (\n            'gray',\n            700,\n        ),\n    ),\n    item-active-color: (\n        color: (\n            'primary',\n            500,\n        ),\n    ),\n    item-icon-color: (\n        color: (\n            'gray',\n            700,\n        ),\n    ),\n    item-active-icon-color: (\n        color: (\n            'primary',\n            500,\n        ),\n    ),\n    item-hover-icon-color: (\n        color: (\n            'gray',\n            700,\n        ),\n    ),\n    item-disabled-icon-color: (\n        color: (\n            'gray',\n            500,\n        ),\n    ),\n    item-active-background: (\n        color: (\n            'gray',\n            200,\n        ),\n    ),\n    item-disabled-color: (\n        color: (\n            'gray',\n            500,\n        ),\n    ),\n    indicator-color: (\n        color: (\n            'primary',\n            500,\n        ),\n    ),\n    button-color: (\n        color: (\n            'gray',\n            700,\n        ),\n    ),\n    button-background: (\n        color: (\n            'surface',\n        ),\n    ),\n    button-hover-background: (\n        color: (\n            'gray',\n            100,\n        ),\n    ),\n    button-hover-color: (\n        color: (\n            'gray',\n            900,\n        ),\n    ),\n    button-disabled-color: (\n        color: (\n            'gray',\n            500,\n        ),\n    ),\n    tab-ripple-color: (\n        color: (\n            'gray',\n            100,\n        ),\n    ),\n    button-ripple-color: (\n        color: (\n            'gray',\n            100,\n        ),\n    ),\n    border-color: transparent,\n    border-color--hover: transparent,\n    border-radius: (\n        border-radius: (\n            rem(0),\n            rem(0),\n            rem(6px),\n        ),\n    ),\n);\n\n/// Generates a fluent tabs schema.\n/// @type {Map}\n/// @prop {Map} item-text-color [color: ('gray', 900)] - The color used for the tab text color.\n/// @prop {Map} item-hover-color [color: ('gray', 900)] - The text color used for the tabs on hover.\n/// @prop {Map} item-disabled-color [color: ('gray', 400)] - The color used for the disabled tabs text.\n/// @prop {Map} item-disabled-icon-color [color: ('gray', 400)] - The color used for the disabled tab icon.\n/// @prop {Map} button-color [color: ('gray', 500)] - The color used for the button icon/text color.\n/// @prop {Map} button-hover-color [color: ('gray', 600)] - The color used for the button icon/text color on hover.\n/// @prop {Map} button-disabled-color [color: ('gray', 400)] - The color used for the disabled button icon/text.\n/// @requires {Map} $light-tabs\n$fluent-tabs: extend(\n    $light-tabs,\n    (\n        item-text-color: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        item-hover-color: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        item-disabled-color: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n        item-disabled-icon-color: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n        button-color: (\n            color: (\n                'gray',\n                500,\n            ),\n        ),\n        button-hover-color: (\n            color: (\n                'gray',\n                600,\n            ),\n        ),\n        button-disabled-color: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n    )\n);\n\n/// Generates a bootstrap tabs schema.\n/// @type {Map}\n/// @prop {map} item-text-color [color: ('primary', 500)] - The color used for the tab text color.\n/// @prop {map} item-icon-color [color: ('primary', 500)] - The color used for the tab icon.\n/// @prop {map} item-hover-color [color: ('primary', 700)] - The text color used for the tabs on hover.\n/// @prop {Map} item-hover-icon-color [color: ('primary', 700)] - The color used for the tab icon on hover.\n/// @prop {map} item-active-color [color: ('gray', 800)] - The color used for the active tabs text.\n/// @prop {map} item-active-icon-color [color: ('gray', 800)] - The color used for the active tabs icon.\n/// @prop {Map} item-disabled-color [color: ('primary', 500, .5)] - The color used for the disabled tabs text.\n/// @prop {Map} item-disabled-icon-color [color: ('primary', 500, .5)] - The color used for the disabled tab icon.\n/// @prop {map} item-background [color: ('surface')] - The background color used for the tabs header.\n/// @prop {map} button-background [color: ('surface')] - The color used for the button background.\n/// @prop {Map} button-color [color: ('gray', 500)] - The color used for the button icon/text color.\n/// @prop {Map} button-hover-color [color: ('gray', 600)] - The color used for the button icon/text color on hover.\n/// @prop {Map} button-disabled-color [color: ('primary', 500, .5)] - The color used for the disabled button icon/text.\n/// @prop {map} item-hover-background [color: ('surface')] - The background used for the tabs on hover.\n/// @prop {map} item-active-background [color: ('surface')] - The color used for the active/focused tab background.\n/// @prop {map} border-color [color: ('gray', 300)] - The color used for the tab items border.\n/// @prop {map} border-color--hover [color: ('gray', 200)] - The color used for the tab items border on hover.\n/// @prop {List} border-radius [(rem(4px), rem(0), rem(6px))] - The border radius used for tabs.\n/// @requires {Map} $light-tabs\n$bootstrap-tabs: extend(\n    $light-tabs,\n    (\n        item-background: (\n            color: (\n                'surface',\n            ),\n        ),\n        button-background: (\n            color: (\n                'surface',\n            ),\n        ),\n        button-color: (\n            color: (\n                'gray',\n                500,\n            ),\n        ),\n        button-hover-color: (\n            color: (\n                'gray',\n                600,\n            ),\n        ),\n        item-hover-background: (\n            color: (\n                'surface',\n            ),\n        ),\n        button-disabled-color: (\n            color: (\n                'primary',\n                500,\n                0.5,\n            ),\n        ),\n        item-active-background: (\n            color: (\n                'surface',\n            ),\n        ),\n        border-color: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        border-color--hover: (\n            color: (\n                'gray',\n                200,\n            ),\n        ),\n        item-text-color: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        item-icon-color: (\n            color: (\n                'primary',\n                500,\n            ),\n        ),\n        item-hover-color: (\n            color: (\n                'primary',\n                700,\n            ),\n        ),\n        item-hover-icon-color: (\n            color: (\n                'primary',\n                700,\n            ),\n        ),\n        item-active-color: (\n            color: (\n                'gray',\n                800,\n            ),\n        ),\n        item-active-icon-color: (\n            color: (\n                'gray',\n                800,\n            ),\n        ),\n        item-disabled-color: (\n            color: (\n                'primary',\n                500,\n                0.5,\n            ),\n        ),\n        item-disabled-icon-color: (\n            color: (\n                'primary',\n                500,\n                0.5,\n            ),\n        ),\n        border-radius: (\n            border-radius: (\n                rem(4px),\n                rem(0),\n                rem(6px),\n            ),\n        ),\n    )\n);\n\n/// Generates an indigo tabs schema.\n/// @type {Map}\n/// @prop {Color} item-background [transparent] - The background color used for the tabs header.\n/// @prop {Color} item-hover-background [transparent] - The background used for the tabs on hover.\n/// @prop {Color} item-active-background [transparent] - The color used for the active/focused tab background.\n/// @prop {Map} item-hover-color [color: ('gray', 900)] - The text color used for the tabs on hover.\n/// @prop {Map} item-hover-icon-color [color: ('gray', 900)] - The color used for the tab icon on hover.\n/// @prop {Map} item-active-color [color: ('gray', 900)] - The color used for the active tabs text.\n/// @prop {Map} item-active-icon-color [color: ('primary', 400)] - The color used for the active tabs icon.\n/// @prop {Map} indicator-color [color: ('primary', 400)] - The color used for the tabs borders.\n/// @prop {Map} button-disabled-color [color: ('gray', 500)] - The color used for the disabled button icon/text.\n/// @prop {Color} button-background [transparent] - The color used for the button background.\n/// @prop {Color} button-hover-background [transparent] - The color used for the button background on hover.\n/// @requires {Map} $light-tabs\n$indigo-tabs: extend(\n    $light-tabs,\n    (\n        item-background: transparent,\n        item-hover-background: transparent,\n        item-active-background: transparent,\n        item-hover-color: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        item-hover-icon-color: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        item-active-color: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        item-active-icon-color: (\n            color: (\n                'primary',\n                400,\n            ),\n        ),\n        indicator-color: (\n            color: (\n                'primary',\n                400,\n            ),\n        ),\n        button-disabled-color: (\n            color: (\n                'gray',\n                500,\n            ),\n        ),\n        button-background: transparent,\n        button-hover-background: transparent,\n    )\n);\n","@use '../../../../utils/map' as *;\n@use '../../../../typography/functions' as *;\n\n////\n/// @package theming\n/// @group schemas\n/// @access public\n////\n\n/* stylelint-disable max-line-length */\n\n/// Generates a light tree schema.\n/// @type {Map}\n/// @prop {Map} background [ color: ('surface')] - The background color used for the tree node.\n/// @prop {Map} background-selected [color: ('secondary', 200)] - The background color used for the selected tree node.\n/// @prop {Map} background-active [color: ('gray', 200)] - The background color used for the active tree node.\n/// @prop {Map} background-active-selected [color: ('secondary', 300)] - The background color used for the active selected tree node.\n/// @prop {Map} background-disabled [color: ('surface')] - The background color used for the tree node in disabled state.\n/// @prop {Map} foreground [contrast-color: ('surface')] - The color used for the tree node content.\n/// @prop {Map} foreground-selected [contrast-color: ('secondary', 200)] - The color used for the content of the selected tree node.\n/// @prop {Map} foreground-active [contrast-color: ('gray', 200)] - The color used for the content in active state of the tree node.\n/// @prop {Map} foreground-active-selected [contrast-color: ('secondary', 300)] - The color used for the content of the active selected tree node.\n/// @prop {Map} foreground-disabled [color: ('gray', 500)] - The color used for the content of the disabled tree node.\n/// @prop {Map} drop-area-color [color: ('secondary')] - The background color used for the tree node drop aria.\n/// @prop {Map} hover-color [color: ('gray', 900, .1)] - The background color used for the tree node on hover.\n/// @prop {Map} hover-selected-color [color: ('gray', 900, .1)] - The background color used for the selected tree node on hover.\n/// @prop {Map} border-color [color: ('secondary')] - The outline shadow color used for tree node in focus state.\n/// @prop {List} size [(rem(32px), rem(40px), rem(50px))] - The size used for the tree node.\n/// @prop {Number} default-size [2] - The default size used for the tree component.\n$light-tree: (\n    background: (\n        color: (\n            'surface',\n        ),\n    ),\n    foreground: (\n        contrast-color: (\n            'surface',\n        ),\n    ),\n    background-selected: (\n        color: (\n            'secondary',\n            200,\n        ),\n    ),\n    foreground-selected: (\n        contrast-color: (\n            'secondary',\n            200,\n        ),\n    ),\n    background-active: (\n        color: (\n            'gray',\n            200,\n        ),\n    ),\n    foreground-active: (\n        contrast-color: (\n            'gray',\n            200,\n        ),\n    ),\n    background-active-selected: (\n        color: (\n            'secondary',\n            300,\n        ),\n    ),\n    foreground-active-selected: (\n        contrast-color: (\n            'secondary',\n            300,\n        ),\n    ),\n    border-color: (\n        color: (\n            'secondary',\n        ),\n    ),\n    // Same for all themes\n    background-disabled:\n        (\n            color: (\n                'surface',\n            ),\n        ),\n    foreground-disabled: (\n        color: (\n            'gray',\n            500,\n        ),\n    ),\n    drop-area-color: (\n        color: (\n            'secondary',\n        ),\n    ),\n    hover-color: (\n        color: (\n            'gray',\n            900,\n            0.1,\n        ),\n    ),\n    hover-selected-color: (\n        color: (\n            'gray',\n            900,\n            0.1,\n        ),\n    ),\n    size: (\n        sizable: (\n            rem(32px),\n            rem(40px),\n            rem(50px),\n        ),\n    ),\n    default-size: 2,\n);\n\n/// Generates a light fluent tree schema.\n/// @type {Map}\n/// @prop {Map} background [ color: ('surface')] - The background color used for the tree node.\n/// @prop {Map} foreground [contrast-color: ('surface')] - The color used for the tree node content.\n/// @prop {Map} background-selected [color: ('gray', 200)] - The background color used for the selected tree node.\n/// @prop {Map} foreground-selected [contrast-color: ('gray', 200)] - The color used for the content of the selected tree node.\n/// @prop {Map} background-active [color: ('gray', 200)] - The background color used for the active tree node.\n/// @prop {Map} foreground-active [contrast-color: ('gray', 200)] - The color used for the content in active state of the tree node.\n/// @prop {Map} background-active-selected [color: ('gray', 300)] - The background color used for the active selected tree node.\n/// @prop {Map} foreground-active-selected [contrast-color: ('gray', 300)] - The color used for the content of the active selected tree node.\n/// @prop {Map} border-color [color: ('gray', 800)] - The outline shadow color used for tree node in focus state.\n/// @requires {Map} $light-tree\n$fluent-tree: extend(\n    $light-tree,\n    (\n        background: (\n            color: (\n                'surface',\n            ),\n        ),\n        foreground: (\n            contrast-color: (\n                'surface',\n            ),\n        ),\n        background-selected: (\n            color: (\n                'gray',\n                200,\n            ),\n        ),\n        foreground-selected: (\n            contrast-color: (\n                'gray',\n                200,\n            ),\n        ),\n        background-active: (\n            color: (\n                'gray',\n                200,\n            ),\n        ),\n        foreground-active: (\n            contrast-color: (\n                'gray',\n                200,\n            ),\n        ),\n        background-active-selected: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        foreground-active-selected: (\n            contrast-color: (\n                'gray',\n                300,\n            ),\n        ),\n        border-color: (\n            color: (\n                'gray',\n                800,\n            ),\n        ),\n    )\n);\n\n/// Generates a bootstrap tree schema.\n/// @type {Map}\n/// @prop {Map} foreground-active [contrast-color: ('primary')] - The color used for the content in active state of the tree node.\n/// @prop {Map} background-selected [color: ('primary')] - The background color used for the selected tree node.\n/// @prop {Map} foreground-selected [contrast-color: ('primary', 600)] - The color used for the content of the selected tree node.\n/// @prop {Map} background-active-selected [color: ('primary', 600)] - The background color used for the active selected tree node.\n/// @prop {Map} foreground-active-selected [contrast-color: ('primary', 600)] - The color used for the content of the active selected tree node.\n/// @prop {Map} border-color [color: ('primary', 200)] - The outline shadow color used for tree node in focus state.\n/// @requires $light-tree\n$bootstrap-tree: extend(\n    $light-tree,\n    (\n        foreground-active: (\n            color: (\n                'primary',\n            ),\n        ),\n        background-selected: (\n            color: (\n                'primary',\n            ),\n        ),\n        foreground-selected: (\n            contrast-color: (\n                'primary',\n                600,\n            ),\n        ),\n        background-active-selected: (\n            color: (\n                'primary',\n                600,\n            ),\n        ),\n        foreground-active-selected: (\n            contrast-color: (\n                'primary',\n                600,\n            ),\n        ),\n        border-color: (\n            color: (\n                'primary' 200,\n            ),\n        ),\n    )\n);\n\n/// Generates an indigo tree schema.\n/// @type {Map}\n/// @prop {Map} background-active [color: ('surface')] - The background color used for the active tree node.\n/// @prop {Map} foreground-active [contrast-color: ('primary')] - The color used for the content in active state of the tree node.\n/// @prop {Map} background-selected [color: ('primary')] - The background color used for the selected tree node.\n/// @prop {Map} foreground-selected [contrast-color: ('primary')] - The color used for the content of the selected tree node.\n/// @prop {Map} background-active-selected [color: ('primary', 400)] - The background color used for the active selected tree node.\n/// @prop {Map} foreground-active-selected [contrast-color: ('primary', 400)] - The color used for the content of the active selected tree node.\n/// @prop {Map} border-color [color: ('primary', 300)] - The outline shadow color used for tree node in focus state.\n/// @prop {Map} hover-color [color: ('primary', 100)] - The background color used for the tree node on hover.\n/// @prop {Map} hover-selected-color [color: ('primary', 100)] - The background color used for the selected tree node on hover.\n/// @requires {Map} $light-tree\n$indigo-tree: extend(\n    $light-tree,\n    (\n        background-active: (\n            color: (\n                'surface',\n            ),\n        ),\n        foreground-active: (\n            color: (\n                'primary',\n            ),\n        ),\n        background-selected: (\n            color: (\n                'primary',\n            ),\n        ),\n        foreground-selected: (\n            contrast-color: (\n                'primary',\n            ),\n        ),\n        background-active-selected: (\n            color: (\n                'primary',\n                400,\n            ),\n        ),\n        foreground-active-selected: (\n            contrast-color: (\n                'primary',\n                400,\n            ),\n        ),\n        border-color: (\n            color: (\n                'primary',\n                300,\n            ),\n        ),\n        hover-color: (\n            color: (\n                'primary',\n                100,\n            ),\n        ),\n        hover-selected-color: (\n            color: (\n                'primary',\n                100,\n            ),\n        ),\n    )\n);\n","@use '../../../../utils/map' as *;\n@use '../light/button' as *;\n\n/* stylelint-disable max-line-length */\n\n////\n/// @package theming\n/// @group schemas\n/// @access public\n////\n\n/// @type {Map}\n/// @prop {Map} disabled-background [color: ('gray', 100, .3)] - The disabled background color of the button.\n/// @prop {Color} disabled-foreground [color: ('gray', 200)] - The disabled foreground color of the button.\n/// @requires {Map} $material-base-button\n$material-base-button-dark: (\n    disabled-background: (\n        color: (\n            'gray',\n            100,\n            0.3,\n        ),\n    ),\n    disabled-foreground: (\n        color: (\n            'gray',\n            200,\n        ),\n    ),\n);\n\n/// @type {Map}\n/// @prop {Map} hover-background [color: ('secondary', 500, .12)] - The hover background color of a flat button.\n/// @prop {Map} focus-background [color: ('secondary', 400, .24)] - The focus background color of a flat button.\n/// @prop {Map} focus-visible-background [color: ('secondary', 400, .24)] - The focus-visible background color of a flat button.\n/// @prop {Color} disabled-background [transparent] - The disabled background color a flat button.\n/// @requires {Map} $material-base-button-dark\n/// @requires {Map} $material-flat-button\n$material-flat-button-dark: extend(\n    $material-flat-button,\n    $material-base-button-dark,\n    (\n        hover-background: (\n            color: (\n                'secondary',\n                500,\n                0.12,\n            ),\n        ),\n        focus-background: (\n            color: (\n                'secondary',\n                400,\n                0.24,\n            ),\n        ),\n        focus-visible-background: (\n            color: (\n                'secondary',\n                400,\n                0.24,\n            ),\n        ),\n        disabled-background: transparent,\n    )\n);\n\n/// @type {Map}\n/// @prop {Map} hover-background [color: ('gray', 100, .5)] - The hover background color of an icon button.\n/// @prop {Map} focus-background [color: ('gray', 200, .8)] - The focus background color of a icon button.\n/// @prop {Map} focus-visible-background [color: ('gray', 200, .8)] - The focus-visible background color of a icon button.\n/// @prop {Color} disabled-background [transparent] - The disabled background color a icon button.\n/// @requires {Map} $material-base-button-dark\n/// @requires {Map} $material-icon-button\n$material-icon-button-dark: extend(\n    $material-icon-button,\n    $material-base-button-dark,\n    (\n        hover-background: (\n            color: (\n                'gray',\n                100,\n                0.5,\n            ),\n        ),\n        focus-background: (\n            color: (\n                'gray',\n                200,\n                0.8,\n            ),\n        ),\n        focus-visible-background: (\n            color: (\n                'gray',\n                200,\n                0.8,\n            ),\n        ),\n        disabled-background: transparent,\n    )\n);\n\n/// @requires {Map} $material-raised-button\n/// @requires {Map} $material-base-button-dark\n$material-raised-button-dark: extend($material-raised-button, $material-base-button-dark);\n\n/// @requires {Map} $material-fab-button\n/// @requires {Map} $material-base-button-dark\n$material-fab-button-dark: extend($material-fab-button, $material-base-button-dark);\n\n/// @requires {Map} $material-outlined-button\n/// @requires {Map} $material-base-button-dark\n/// @prop {Map} disabled-border-color [color: ('gray', 100, .3)] - The disabled focused border color of an outlined button.\n/// @prop {Color} disabled-background [transparent] - The disabled background color an outlined button.\n$material-outlined-button-dark: extend(\n    $material-outlined-button,\n    $material-base-button-dark,\n    (\n        disabled-border-color: (\n            color: (\n                'gray',\n                100,\n                0.3,\n            ),\n        ),\n        disabled-background: transparent,\n    )\n);\n\n/// Generates a dark material button schema.\n/// @type {Map}\n/// @requires {Map} $material-flat-button-dark\n/// @requires {Map} $material-outlined-button\n/// @requires {Map} $material-raised-button\n/// @requires {Map} $material-fab-button\n/// @requires {Map} $material-icon-button-dark\n$dark-button: (\n    flat: $material-flat-button-dark,\n    outlined: $material-outlined-button-dark,\n    raised: $material-raised-button-dark,\n    fab: $material-fab-button-dark,\n    icon: $material-icon-button-dark,\n);\n\n/// @type {Map}\n/// @requires {Map} $material-base-button\n/// @prop {Map} disabled-background [color: ('primary', 50)] - The disabled background color of the button.\n/// @prop {Map} disabled-foreground [color: ('primary', 100)] - The disabled foreground color of the button.\n$fluent-base-button-dark: (\n    disabled-background: (\n        color: (\n            'gray',\n            50,\n        ),\n    ),\n    disabled-foreground: (\n        color: (\n            'gray',\n            100,\n        ),\n    ),\n);\n\n/// @type {Map}\n/// @prop {Color} disabled-background [transparent] - The disabled background color an outlined button.\n/// @requires {Map} $fluent-flat-button\n/// @requires {Map} $fluent-base-button-dark\n$fluent-flat-button-dark: extend(\n    $fluent-flat-button,\n    $fluent-base-button-dark,\n    (\n        disabled-background: transparent,\n    )\n);\n\n/// @type {Map}\n/// @prop {Map} background [color: ('primary', 300)] - The background color of an raised button.\n/// @prop {Map} foreground [color: ('surface', 500] - The idle text color of a raised button.\n/// @prop {Map} border-color [color: ('primary', 300)] - The border color of a raised button.\n/// @prop {Map} hover-border-color [color: ('primary', 200)] - The hover border color of a raised button.\n/// @prop {Map} focus-border-color [color: ('primary', 300)] - The focus border color of a raised button.\n/// @prop {Map} focus-visible-border-color [color: ('primary', 200)] - The focus-visible border color of a raised button.\n/// @prop {Map} active-border-color [color: ('primary', 200)] - The active border color of a raised button.\n/// @prop {Map} hover-background [color: ('primary', 200)] - The hover background of a raised button.\n/// @prop {Map} hover-foreground [color: ('surface', 500] - The hover text color of a raised button.\n/// @prop {Map} focus-background [color: ('primary', 300)] - The focus background color of a raised button.\n/// @prop {Map} focus-foreground [color: ('surface', 500] - The focus text color of a raised button.\n/// @prop {Map} focus-visible-background [color: ('primary', 200)] - The focus-visible background color of a raised button.\n/// @prop {Map} focus-visible-foreground [color: ('surface', 500] - The focus-visible text color of a raised button.\n/// @prop {Map} active-background [color: ('primary', 200)] - The active background color of a raised button.\n/// @prop {Map} active-foreground [color: ('surface', 500] - The active text color of a raised button.\n/// @requires {Map} $fluent-raised-button\n/// @requires {Map} $fluent-base-button-dark\n$fluent-raised-button-dark: extend(\n    $fluent-raised-button,\n    $fluent-base-button-dark,\n    (\n        background: (\n            color: (\n                'primary',\n                300,\n            ),\n        ),\n        foreground: (\n            color: (\n                'surface',\n                500,\n            ),\n        ),\n        border-color: (\n            color: (\n                'primary',\n                300,\n            ),\n        ),\n        hover-background: (\n            color: (\n                'primary',\n                200,\n            ),\n        ),\n        hover-foreground: (\n            color: (\n                'surface',\n                500,\n            ),\n        ),\n        hover-border-color: (\n            color: (\n                'primary',\n                200,\n            ),\n        ),\n        focus-background: (\n            color: (\n                'primary',\n                300,\n            ),\n        ),\n        focus-foreground: (\n            color: (\n                'surface',\n                500,\n            ),\n        ),\n        focus-border-color: (\n            color: (\n                'primary',\n                300,\n            ),\n        ),\n        focus-visible-background: (\n            color: (\n                'primary',\n                200,\n            ),\n        ),\n        focus-visible-foreground: (\n            color: (\n                'surface',\n                500,\n            ),\n        ),\n        focus-visible-border-color: (\n            color: (\n                'primary',\n                200,\n            ),\n        ),\n        active-background: (\n            color: (\n                'primary',\n                200,\n            ),\n        ),\n        active-foreground: (\n            color: (\n                'surface',\n                500,\n            ),\n        ),\n        active-border-color: (\n            color: (\n                'primary',\n                200,\n            ),\n        ),\n    )\n);\n\n/// @requires {Map} $fluent-fab-button\n/// @requires {Map} $fluent-base-button-dark\n$fluent-fab-button-dark: extend($fluent-fab-button, $fluent-base-button-dark, $fluent-raised-button-dark);\n\n/// @prop {Map} hover-background [color: ('gray', 50)] - The hover background color of an icon button.\n/// @prop {Map} active-background [color: ('gray', 100, .8)] - The active background color of an icon button.\n/// @prop {Map} disabled-border-color [color: ('gray', 50)] - The disabled focused border color of an icon button.\n/// @requires {Map} $fluent-icon-button\n/// @requires {Map} $fluent-base-button-dark\n$fluent-icon-button-dark: extend(\n    $fluent-icon-button,\n    $fluent-base-button-dark,\n    (\n        hover-background: (\n            color: (\n                'gray',\n                50,\n            ),\n        ),\n        active-background: (\n            color: (\n                'gray',\n                100,\n                0.8,\n            ),\n        ),\n        disabled-border-color: (\n            color: (\n                'gray',\n                50,\n            ),\n        ),\n    )\n);\n\n/// @prop {Map} hover-foreground [color: ('gray', 50)] - TThe hover text color of an outlined button.\n/// @prop {Map} active-background [color: ('gray', 100, .8)] - The active background color of an outlined button.\n/// @prop {Map} active-foreground [contrast-color: ('gray' 100)] - The active text color of an outlined button.\n/// @prop {Map} border-color [color: ('gray', 100)] - The border color of an outlined button.\n/// @requires {Map} $fluent-outlined-button\n/// @requires {Map} $fluent-base-button-dark\n$fluent-outlined-button-dark: extend(\n    $fluent-outlined-button,\n    $fluent-base-button-dark,\n    (\n        hover-background: (\n            color: (\n                'gray',\n                50,\n            ),\n        ),\n        active-background: (\n            color: (\n                'gray',\n                100,\n                0.8,\n            ),\n        ),\n        active-foreground: (\n            contrast-color: (\n                'gray',\n                100,\n            ),\n        ),\n        border-color: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n    )\n);\n\n/// Generates a dark fluent button schema.\n/// @type {Map}\n/// @requires {Map} $fluent-flat-button-dark\n/// @requires {Map} $fluent-outlined-button\n/// @requires {Map} $fluent-raised-button\n/// @requires {Map} $fluent-fab-button\n/// @requires {Map} $fluent-icon-button\n$dark-fluent-button: (\n    flat: $fluent-flat-button-dark,\n    outlined: $fluent-outlined-button-dark,\n    raised: $fluent-raised-button-dark,\n    fab: $fluent-fab-button-dark,\n    icon: $fluent-icon-button-dark,\n);\n\n/// @type {Map}\n/// @requires {Map} $bootstrap-base-button\n$bootstrap-base-button-dark: $bootstrap-base-button;\n\n/// @type {Map}\n/// @prop {Map} disabled-border-color [color: ('primary', 900)] - The disabled border color of the button.\n/// @requires {Map} $bootstrap-base-button-dark\n/// @requires {Map} $bootstrap-outlined-button\n$bootstrap-outlined-button-dark: extend(\n    $bootstrap-base-button-dark,\n    $bootstrap-outlined-button,\n    (\n        disabled-border-color: (\n            color: (\n                'primary',\n                900,\n            ),\n        ),\n    )\n);\n\n/// @type {Map}\n/// @requires {Map} $bootstrap-base-button-dark\n/// @requires {Map} $bootstrap-flat-button\n$bootstrap-flat-button-dark: extend($bootstrap-base-button-dark, $bootstrap-flat-button);\n\n/// Generates a dark bootstrap button schema.\n/// @type {Map}\n/// @requires {Map} $bootstrap-flat-button\n/// @requires {Map} $bootstrap-outlined-button\n/// @requires {Map} $bootstrap-raised-button\n/// @requires {Map} $bootstrap-fab-button\n/// @requires {Map} $bootstrap-icon-button\n$dark-bootstrap-button: (\n    flat: $bootstrap-flat-button-dark,\n    outlined: $bootstrap-outlined-button-dark,\n    raised: $bootstrap-raised-button,\n    fab: $bootstrap-fab-button,\n    icon: $bootstrap-icon-button,\n);\n\n/// @type {Map}\n/// @prop {Color} disabled-foreground [color: ('gray', 300)] - The disabled foreground color of the button.\n/// @prop {Color} disabled-background [color: ('gray', 200, .1)] - The disabled background color of the button.\n/// @requires {Map} $indigo-base-button\n$indigo-base-button-dark: (\n    disabled-foreground: (\n        color: (\n            'gray',\n            300,\n        ),\n    ),\n    disabled-background: (\n        color: (\n            'gray',\n            200,\n            0.1,\n        ),\n    ),\n);\n\n/// @type {Map}\n/// @prop {Map} foreground [color: ('gray', 600, .8)] - The idle text color of a outlined button.\n/// @prop {Color} disabled-background [transparent] - The disabled background color an outlined button.\n/// @requires {Map} $indigo-base-button-dark\n/// @requires {Map} $indigo-flat-button\n$indigo-flat-button-dark: extend(\n    $indigo-flat-button,\n    $indigo-base-button-dark,\n    (\n        foreground: (\n            color: (\n                'gray',\n                600,\n                0.8,\n            ),\n        ),\n        disabled-background: transparent,\n    )\n);\n\n/// @type {Map}\n/// @prop {Color} foreground [color: ('gray', 900)] - The idle text color of a raised button.\n/// @prop {Color} hover-foreground [color: ('gray', 900)] - The hover text color of a raised button.\n/// @prop {Color} focus-foreground [color: ('gray', 900)] - The focus text color of a raised button.\n/// @prop {Color} focus-visible-foreground [color: ('gray', 900)] - The focus-visible text color of a raised button.\n/// @requires {Map} $indigo-base-button-dark\n/// @requires {Map} $indigo-raised-button\n$indigo-raised-button-dark: extend(\n    $indigo-raised-button,\n    $indigo-base-button-dark,\n    (\n        foreground: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        hover-foreground: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        focus-foreground: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        focus-visible-foreground: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n    )\n);\n\n/// @type {Map}\n/// @prop {Map} foreground [color: ('gray', 500)] - The idle text color of a outlined button.\n/// @prop {Map} border-color [color: ('gray', 300)] - The border color of an outlined button.\n/// @prop {Map} shadow-color [color: ('gray', 200, .8)] - The shadow color of an outlined button.\n/// @prop {Color} disabled-background [transparent] - The disabled background color an outlined button.\n/// @requires {Map} $indigo-base-button-dark\n/// @requires {Map} $indigo-outlined-button\n$indigo-outlined-button-dark: extend(\n    $indigo-outlined-button,\n    $indigo-base-button-dark,\n    (\n        foreground: (\n            color: (\n                'gray',\n                500,\n            ),\n        ),\n        border-color: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        shadow-color: (\n            color: (\n                'gray',\n                200,\n                0.8,\n            ),\n        ),\n        disabled-background: transparent,\n    )\n);\n\n/// @type {Map}\n/// @prop {Color} disabled-background [transparent] - The disabled background color an outlined button.\n/// @requires {Map} $indigo-base-button-dark\n/// @requires {Map} $indigo-icon-button\n$indigo-icon-button-dark: extend(\n    $indigo-icon-button,\n    $indigo-base-button-dark,\n    (\n        disabled-background: transparent,\n    )\n);\n\n/// @type {Map}\n/// @prop {Color} foreground [color: ('gray', 900) - The idle text color of a fab button.\n/// @prop {Color} hover-foreground [color: ('gray', 900)] - The hover text color of a fab button.\n/// @prop {Color} focus-foreground [color: ('gray', 900)] - The focus text color of a fab button.\n/// @prop {Color} focus-visible-foreground [color: ('gray', 900)] - The focus-visible text color of a fab button.\n/// @requires {Map} $indigo-base-button-dark\n/// @requires {Map} $indigo-fab-button\n$indigo-fab-button-dark: extend(\n    $indigo-fab-button,\n    $indigo-base-button-dark,\n    (\n        foreground: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        hover-foreground: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        focus-foreground: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        focus-visible-foreground: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n    )\n);\n\n/// Generates a dark indigo button schema.\n/// @type {Map}\n/// @requires {Map} $indigo-flat-button\n/// @requires {Map} $indigo-outlined-button\n/// @requires {Map} $indigo-raised-button\n/// @requires {Map} $indigo-fab-button\n/// @requires {Map} $indigo-icon-button\n$dark-indigo-button: (\n    flat: $indigo-flat-button-dark,\n    outlined: $indigo-outlined-button-dark,\n    raised: $indigo-raised-button-dark,\n    fab: $indigo-fab-button-dark,\n    icon: $indigo-icon-button-dark,\n);\n","@use '../../../../utils/map' as *;\n@use '../../../../typography/functions' as *;\n@use '../light/combo' as *;\n\n////\n/// @package theming\n/// @group schemas\n/// @access public\n////\n\n/* stylelint-disable max-line-length */\n\n/// Generates a dark combo schema.\n/// @type {Map}\n/// @requires $light-combo\n$dark-combo: $light-combo;\n\n/// Generates a dark fluent combo schema.\n/// @type {Map}\n/// @requires $fluent-combo\n$dark-fluent-combo: $fluent-combo;\n\n/// Generates a dark bootstrap combo schema.\n/// @type {Map}\n/// @requires $bootstrap-combo\n$dark-bootstrap-combo: $bootstrap-combo;\n\n/// Generates a dark indigo combo schema.\n/// @prop {Map} toggle-button-foreground [color: ('gray', 600)] - The combo toggle button foreground color.\n/// @prop {Map} toggle-button-foreground-focus [color: ('gray', 600)] - The combo toggle button foreground color when the combo is focused.\n/// @prop {Map} toggle-button-foreground-filled [color: ('gray', 600)] - The combo toggle button foreground color when the combo is focused.\n/// @type {Map}\n/// @requires $indigo-combo\n$dark-indigo-combo: extend(\n    $indigo-combo,\n    (\n        toggle-button-foreground: (\n            color: (\n                'gray',\n                600,\n            ),\n        ),\n        toggle-button-foreground-focus: (\n            color: (\n                'gray',\n                600,\n            ),\n        ),\n        toggle-button-foreground-filled: (\n            color: (\n                'gray',\n                600,\n            ),\n        ),\n    )\n);\n","@use '../../../../utils/map' as *;\n@use '../../../../typography/functions' as *;\n@use '../light/drop-down' as *;\n\n////\n/// @package theming\n/// @group schemas\n/// @access public\n////\n\n/* stylelint-disable max-line-length */\n\n/// Generates a base dark drop-down schema.\n/// @type {Map}\n/// @prop {Map} border-color [color: ('gray', 100)] - The border color used for drop-down component.\n$base-dark-drop-down: (\n    border-color: (\n        color: (\n            'gray',\n            100,\n        ),\n    ),\n);\n\n/// Generates a dark drop-down schema.\n/// @type {Map}\n/// @requires $light-drop-down\n/// @requires $base-dark-drop-down\n$dark-drop-down: extend($light-drop-down, $base-dark-drop-down);\n\n/// Generates a dark fluent drop-down schema.\n/// @type {Map}\n/// @prop {Map} selected-item-text-color [contrast-color: 'surface'] - The drop-down selected item text color.\n/// @prop {Map} selected-hover-item-text-color [contrast-color: 'surface'] - The drop-down selected item hover text color.\n/// @prop {Map} selected-focus-item-text-color [contrast-color: 'surface'] - The drop-down selected item focus text color.\n/// @requires $fluent-drop-down\n/// @requires $base-dark-drop-down\n$dark-fluent-drop-down: extend(\n    $fluent-drop-down,\n    $base-dark-drop-down,\n    (\n        selected-item-text-color: (\n            contrast-color: 'surface',\n        ),\n        selected-hover-item-text-color: (\n            contrast-color: 'surface',\n        ),\n        selected-focus-item-text-color: (\n            contrast-color: 'surface',\n        ),\n    )\n);\n\n/// Generates a dark bootstrap drop-down schema.\n/// @type {Map}\n/// @prop {Map} item-text-color [contrast-color: 'surface'] - The drop-down text color.\n/// @prop {Map} hover-item-text-color [contrast-color: 'surface'] - The drop-down hover text color.\n/// @requires $bootstrap-drop-down\n/// @requires $base-dark-drop-down\n$dark-bootstrap-drop-down: extend(\n    $bootstrap-drop-down,\n    $base-dark-drop-down,\n    (\n        item-text-color: (\n            contrast-color: 'surface',\n        ),\n        hover-item-text-color: (\n            contrast-color: 'surface',\n        ),\n    )\n);\n\n/// Generates a dark indigo drop-down schema.\n/// @type {Map}\n/// @prop {Map} header-text-color [contrast-color: 'surface'] - The drop-down header text color.\n/// @requires $indigo-drop-down\n/// @requires $base-dark-drop-down\n$dark-indigo-drop-down: extend(\n    $indigo-drop-down,\n    $base-dark-drop-down,\n    (\n        header-text-color: (\n            contrast-color: 'surface',\n        ),\n    )\n);\n","@use '../../../../utils/map' as *;\n@use '../light/input-group' as *;\n\n/* stylelint-disable max-line-length */\n\n////\n/// @package theming\n/// @group schemas\n/// @access public\n////\n\n/// Generates a base dark input-group schema.\n/// @type {Map}\n$base-dark-input-group: $light-input-group;\n\n/// Generates a dark input-group schema based on a mix of $light-input-group and $base-dark-input-group..\n/// @type {Map}\n/// @prop {Map} box-background-focus [color: ('gray', 100)] - The background color of an input group of type box on focus.\n/// @requires $base-dark-input-group\n$dark-input-group: extend(\n    $base-dark-input-group,\n    (\n        box-background-focus: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        hover-bottom-line-color: (\n            color: (\n                'gray',\n                800,\n            ),\n        ),\n    )\n);\n\n/// Generates a dark fluent input-group schema based on a mix of $fluent-input-group and $base-dark-input-group.\n/// @type {Map}\n/// @prop {Map} input-prefix-background [color: ('gray', 100)] - The background color of an input prefix of type line, box and border.\n/// @prop {Map} input-suffix-background [color: ('gray', 100)] - The background color of an input sufix of type line, box and border.\n/// @prop {Map} box-background [color: ('gray', 100)] - The background color of an input group of type box.\n/// @prop {Map} border-color [color: ('gray', 500)] - The border color for input groups of type border and fluent.\n/// @prop {Map} hover-border-color [color: ('gray', 700)] - The hover input border for input groups of type border and fluent.\n/// @prop {Map} focused-border-color [color: ('gray', 500)] - The focused input border color for input groups of type border and fluent.\n/// @prop {Map} disabled-border-color [color: ('gray', 100)] - The disabled border color for input groups of type border and fluent.\n/// @requires $fluent-input-group\n/// @requires $base-dark-input-group\n$dark-fluent-input-group: extend(\n    $base-dark-input-group,\n    $fluent-input-group,\n    (\n        input-prefix-background: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        input-suffix-background: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        box-background: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        border-color: (\n            color: (\n                'gray',\n                500,\n            ),\n        ),\n        hover-border-color: (\n            color: (\n                'gray',\n                700,\n            ),\n        ),\n        focused-border-color: (\n            color: (\n                'gray',\n                500,\n            ),\n        ),\n        disabled-border-color: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n    )\n);\n\n/// Generates a dark bootstrap input-group schema based on a mix of $bootstrap-input-group and $base-dark-input-group.\n/// @type {Map}\n/// @requires $bootstrap-input-group\n/// @requires $base-dark-input-group\n$dark-bootstrap-input-group: extend($base-dark-input-group, $bootstrap-input-group);\n\n/// Generates an dark indigo input-group schema\n/// @type {Map}\n/// @prop {Map} success-secondary-color [color: ('success', 500, .7)] - The success color used in the valid state.\n/// @prop {Map} warning-secondary-color [color: ('warn', 500, .7)] - The warning color used in the warning state.\n/// @prop {Map} error-secondary-color [color: ('error', 500, .7)] - The error color used in the error state.\n/// @prop {Map} $idle-secondary-color [contrast-color: ('surface')] - The label color in the idle state.\n/// @prop {Map} $filled-secondary-color [color: ('gray', 900)] - The label color in the filled state.\n/// @prop {Map} $focused-secondary-color [color: ('gray', 900)] - The label color in the focused state.\n/// @prop {Map} placeholder-color [color: ('gray', 400)] - The placeholder color of an input group.\n/// @prop {Map} disabled-placeholder-color [color: ('gray', 400)] - The disabled placeholder color of an input group.\n/// @requires $indigo-input-group\n$dark-indigo-input-group: extend(\n    $indigo-input-group,\n    (\n        search-background: transparent,\n        success-secondary-color: (\n            color: (\n                'success',\n                500,\n                0.7,\n            ),\n        ),\n        warning-secondary-color: (\n            color: (\n                'warn',\n                500,\n                0.7,\n            ),\n        ),\n        error-secondary-color: (\n            color: (\n                'error',\n                500,\n                0.7,\n            ),\n        ),\n        idle-secondary-color: (\n            contrast-color: (\n                'surface',\n            ),\n        ),\n        filled-secondary-color: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        focused-secondary-color: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        placeholder-color: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n        disabled-placeholder-color: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n    )\n);\n","@use '../../../../utils/map' as *;\n@use '../../../../typography/functions' as *;\n@use '../light/select' as *;\n\n////\n/// @package theming\n/// @group schemas\n/// @access public\n////\n\n/* stylelint-disable max-line-length */\n\n/// Generates a dark select schema.\n/// @type {Map}\n/// @requires $light-select\n$dark-select: $light-select;\n\n/// Generates a dark fluent select schema.\n/// @type {Map}\n/// @requires $fluent-select\n$dark-fluent-select: $fluent-select;\n\n/// Generates a dark bootstrap select schema.\n/// @type {Map}\n/// @requires $bootstrap-select\n$dark-bootstrap-select: $bootstrap-select;\n\n/// Generates a dark indigo select schema.\n/// @type {Map}\n/// @prop {Map} toggle-button-foreground [color: ('gray', 600)] - The select toggle button foreground color.\n/// @prop {Map} toggle-button-foreground-focus [color: ('gray', 600)] - The select toggle button foreground color when the select is focused.\n/// @prop {Map} toggle-button-foreground-filled [color: ('gray', 600)] - The select toggle button foreground color when the select is focused.\n/// @requires $indigo-select\n$dark-indigo-select: extend(\n    $indigo-select,\n    (\n        toggle-button-foreground: (\n            color: (\n                'gray',\n                600,\n            ),\n        ),\n        toggle-button-foreground-focus: (\n            color: (\n                'gray',\n                600,\n            ),\n        ),\n        toggle-button-foreground-filled: (\n            color: (\n                'gray',\n                600,\n            ),\n        ),\n    )\n);\n","@use '../../../../utils/map' as *;\n@use '../../../../typography/functions' as *;\n@use '../light/slider' as *;\n\n////\n/// @package theming\n/// @group schemas\n/// @access public\n////\n\n/* stylelint-disable max-line-length */\n\n/// Generates a dark slider schema.\n/// @type {Map}\n/// @requires $light-slider\n$dark-slider: $light-slider;\n\n/// Generates a dark fluent slider schema.\n/// @type {Map}\n/// @prop {Map} base-track-color [color: ('gray', 300)] - The base background color of the track.\n/// @prop {Map} base-track-hover-color [color: ('gray', 300)] - The base background color of the track on hover.\n/// @prop {Map} track-color [color: ('gray', 600)] - The color of the track.\n/// @prop {Map} track-hover-color [color: ('primary', 300)] - The color of the track on hover.\n/// @prop {Map} thumb-border-color [color: ('gray', 400)] - The thumb border color.\n/// @prop {Map} thumb-focus-color [color: ('primary', 100)] - The focus outline color of the thumb.\n/// @prop {Map} thumb-disabled-border-color [color: ('gray', 200)] - The thumb border color when it's disabled.\n/// @prop {Map} disabled-base-track-color [color: ('gray', 100)] - The base background color of the track when is disabled.\n/// @prop {Map} disabled-fill-track-color [color: ('gray', 300)] - The background color of the fill track when is disabled.\n/// @requires $fluent-slider\n$dark-fluent-slider: extend(\n    $fluent-slider,\n    (\n        base-track-color: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        base-track-hover-color: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n        track-color: (\n            color: (\n                'gray',\n                600,\n            ),\n        ),\n        track-hover-color: (\n            color: (\n                'primary',\n                300,\n            ),\n        ),\n        thumb-border-color: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n        thumb-focus-color: (\n            color: (\n                'primary',\n                100,\n            ),\n        ),\n        thumb-disabled-border-color: (\n            color: (\n                'gray',\n                200,\n            ),\n        ),\n        disabled-base-track-color: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        disabled-fill-track-color: (\n            color: (\n                'gray',\n                300,\n            ),\n        ),\n    )\n);\n\n/// Generates a dark bootstrap slider schema.\n/// @type {Map}\n/// @prop {Map} base-track-color [color: ('secondary', 500, .48)] - The base background color of the track.\n/// @prop {Map} base-track-hover-color [color: ('secondary', 500, .48)] - The base background color of the track on hover.\n/// @requires $bootstrap-slider\n$dark-bootstrap-slider: extend(\n    $bootstrap-slider,\n    (\n        base-track-color: (\n            color: (\n                'secondary',\n                500,\n                0.48,\n            ),\n        ),\n        base-track-hover-color: (\n            color: (\n                'secondary',\n                500,\n                0.48,\n            ),\n        ),\n    )\n);\n\n/// Generates a dark indigo slider schema.\n/// @type {Map}\n/// @prop {Map} base-track-color [color: ('gray', 200)] - The base background color of the track.\n/// @prop {Map} base-track-hover-color [color: ('gray', 400)] - The base background color of the track on hover.\n/// @requires $indigo-slider\n$dark-indigo-slider: extend(\n    $indigo-slider,\n    (\n        base-track-color: (\n            color: (\n                'gray',\n                200,\n            ),\n        ),\n        base-track-hover-color: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n    )\n);\n","@use '../../../../utils/map' as *;\n@use '../../../../typography/functions' as *;\n@use '../light/switch' as *;\n\n////\n/// @package theming\n/// @group schemas\n/// @access public\n////\n\n/* stylelint-disable max-line-length */\n\n/// Generates a base dark switch schema.\n/// @type {Map}\n/// @prop {Color} thumb-disabled-color [color: ('gray', 200)] - The color of the thumb when the switch is disabled.\n$base-dark-switch: (\n    thumb-disabled-color: (\n        color: (\n            'gray',\n            200,\n        ),\n    ),\n);\n\n/// Generates a dark switch schema based on a mix of $light-switch and $base-dark-switch.\n/// @type {Map}\n/// @requires $light-switch\n/// @requires $base-dark-switch\n$dark-switch: extend($light-switch, $base-dark-switch);\n\n/// Generates a dark fluent switch schema based on a mix of $fluent-switch and $base-dark-switch.\n/// @type {Map}\n/// @prop {Map} border-color [color: ('gray', 500)] - The border color of the switch.\n/// @prop {Map} border-on-color [color('primary', 300)] - The border color of the on-switch.\n/// @prop {Map} border-on-hover-color [color('primary',100)] - The border color of the on-switch.\n/// @prop {Map} border-disabled-color [color: ('gray', 200)] - The border color of the disabled switch.\n/// @prop {Map} track-on-color [color: ('primary', 300)] - The color of the track when the switch is on.\n/// @prop {Map} track-on-disabled-color [color: ('gray', 200)] - The color of the track when the switch is on and disabled.\n/// @prop {Map} track-on-hover-color [color: ('primary', 100)] - The color of the track when the switch is on and hovered.\n/// @prop {Map} thumb-off-color [color: ('gray', 500)] - The color of the thumb when the switch is off.\n/// @prop {Map} thumb-disabled-color [color: ('gray', 200)] - The color of the thumb when the switch is disabled.\n/// @prop {Map} error-color [color: ('gray', 500)] - The border and thumb color in invalid state.\n///\n/// @requires $fluent-switch\n/// @requires $base-dark-switch\n$dark-fluent-switch: extend(\n    $fluent-switch,\n    $base-dark-switch,\n    (\n        border-color: (\n            color: (\n                'gray',\n                500,\n            ),\n        ),\n        thumb-off-color: (\n            color: (\n                'gray',\n                500,\n            ),\n        ),\n        border-on-color: (\n            color: (\n                'primary',\n                300,\n            ),\n        ),\n        border-on-hover-color: (\n            color: (\n                'primary',\n                100,\n            ),\n        ),\n        track-on-color: (\n            color: (\n                'primary',\n                300,\n            ),\n        ),\n        track-on-hover-color: (\n            color: (\n                'primary',\n                100,\n            ),\n        ),\n        border-disabled-color: (\n            color: (\n                'gray',\n                200,\n            ),\n        ),\n        thumb-disabled-color: (\n            color: (\n                'gray',\n                200,\n            ),\n        ),\n        track-on-disabled-color: (\n            color: (\n                'gray',\n                200,\n            ),\n        ),\n        error-color: (\n            color: (\n                'gray',\n                500,\n            ),\n        ),\n    )\n);\n\n/// Generates a dark bootstrap switch schema based on a mix of $bootstrap-switch and $base-dark-switch.\n/// @type {Map}\n/// @prop {Map} thumb-on-color [color: ('gray', 900)] - The color of the thumb when the switch is on.\n/// @prop {Map} thumb-on-disabled-color [color: ('gray', 900)] - The color of the thumb when the switch is on and disabled.\n/// @prop {Map} thumb-on-error-color [color: ('gray', 900)] - The color of the thumb when the switch is on and invalid.\n/// @requires $bootstrap-switch\n/// @requires $base-dark-switch\n$dark-bootstrap-switch: extend(\n    $bootstrap-switch,\n    $base-dark-switch,\n    (\n        thumb-on-color: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        thumb-on-disabled-color: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        thumb-on-error-color: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n    )\n);\n\n/// Generates a dark indigo switch schema.\n/// @type {Map}\n/// @prop {Color} thumb-on-color [color: 'surface'] - The color of the thumb when the switch is on.\n/// @prop {Map} track-on-color [color: ('gray', 900)] - The color of the track when the switch is on.\n/// @prop {Map} thumb-off-color [color: ('gray', 700)] - The color of the thumb when the switch is off.\n/// @prop {Color} track-off-color [transparent] - The color of the track when the switch is off.\n///\n/// @prop {Map} border-color [color: ('gray', 700)] - The border color of the switch.\n/// @prop {Map} border-hover-color [color: ('gray', 700)] - The border color of the switch on hover.\n/// @prop {Map} border-disabled-color [color: ('gray', 400)] - The border color of the disabled switch.\n/// @prop {Map} border-on-color [color: ('gray', 900)] - The border color of the on-switch.\n/// @prop {Map} border-on-hover-color [color: ('gray', 900)] - The border color of the  on-switch.\n/// @prop {Map} label-disabled-color [color: ('gray', 400)] - The color of the switch label when the switch is disabled\n/// @prop {Map} error-color [color: ('gray', 700)] - The border and thumb color in invalid state.\n/// @requires $indigo-switch\n$dark-indigo-switch: extend(\n    $indigo-switch,\n    (\n        border-color: (\n            color: (\n                'gray',\n                700,\n            ),\n        ),\n        border-hover-color: (\n            color: (\n                'gray',\n                700,\n            ),\n        ),\n        border-disabled-color: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n        border-on-color: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        border-on-hover-color: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        thumb-on-color: (\n            color: 'surface',\n        ),\n        thumb-off-color: (\n            color: (\n                'gray',\n                700,\n            ),\n        ),\n        track-on-color: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        track-off-color: transparent,\n        label-disabled-color: (\n            color: (\n                'gray',\n                400,\n            ),\n        ),\n        error-color: (\n            color: (\n                'gray',\n                700,\n            ),\n        ),\n    )\n);\n","@use '../../../../utils/map' as *;\n@use '../../../../typography/functions' as *;\n@use '../light/tabs' as *;\n\n////\n/// @package theming\n/// @group schemas\n/// @access public\n////\n\n/* stylelint-disable max-line-length */\n\n/// Generates a base dark tabs schema.\n/// @type {Map}\n/// @prop {Map} item-hover-background [color: ('gray', 100, .5)] - The background used for the tabs on hover.\n/// @prop {Map} item-active-background [color: ('gray', 100, .5)] - The color used for the active/focused tab background.\n$base-dark-tabs: (\n    item-hover-background: (\n        color: (\n            'gray',\n            100,\n            0.5,\n        ),\n    ),\n    item-active-background: (\n        color: (\n            'gray',\n            100,\n            0.5,\n        ),\n    ),\n);\n\n/// Generates a dark tabs schema based on a mix of $light-tabs and $base-dark-tabs.\n/// @type {Map}\n/// @requires $light-tabs\n/// @requires $base-dark-tabs\n$dark-tabs: extend($light-tabs, $base-dark-tabs);\n\n/// Generates a dark fluent tabs schema based on a mix of $fluent-tabs and $base-dark-tabs.\n/// @type {Map}\n/// @requires $fluent-tabs\n/// @requires $base-dark-tabs\n$dark-fluent-tabs: extend($fluent-tabs, $base-dark-tabs);\n\n/// Generates a dark bootstrap tabs schema based on a mix of $bootstrap-tabs and $base-dark-tabs.\n/// @type {Map}\n/// @prop {Map} item-background [color: ('primary', 400)] - The background color used for the tabs header.\n/// @requires $bootstrap-tabs\n$dark-bootstrap-tabs: extend(\n    $bootstrap-tabs,\n    (\n        item-hover-color: (\n            color: (\n                'primary',\n                400,\n            ),\n        ),\n    )\n);\n\n/// Generates a dark indigo tabs schema.\n/// @type {Map}\n/// @requires $indigo-tabs\n$dark-indigo-tabs: $indigo-tabs;\n","@use '../../../../utils/map' as *;\n@use '../../../../typography/functions' as *;\n@use '../light/tree' as *;\n\n////\n/// @package theming\n/// @group schemas\n/// @access public\n////\n\n/* stylelint-disable max-line-length */\n\n/// Generates a base dark tree schema.\n/// @type {Map}\n/// @prop {Map} background-active [color: ('gray', 100)] - The background color used for the active tree node.\n/// @prop {Map} foreground-active [color: ('gray', 900)] - The color used for the content in active state of the tree node.\n/// @prop {Map} hover-color [color: ('gray', 50, .1)] - The background color used for the tree node on hover.\n/// @prop {Map} hover-selected-color [color: ('gray', 50, .1)] - The background color used for the selected tree node on hover.\n$base-dark-tree: (\n    background-active: (\n        color: (\n            'gray',\n            100,\n        ),\n    ),\n    foreground-active: (\n        color: (\n            'gray',\n            900,\n        ),\n    ),\n    hover-color: (\n        color: (\n            'gray',\n            50,\n            0.1,\n        ),\n    ),\n    hover-selected-color: (\n        color: (\n            'gray',\n            50,\n            0.1,\n        ),\n    ),\n);\n\n/// Generates a dark tree schema.\n/// @type {Map}\n/// @requires $light-tree\n/// @requires $base-dark-tree\n$dark-tree: extend(\n    $light-tree,\n    $base-dark-tree,\n    (\n        hover-color: (\n            color: (\n                'gray',\n                200,\n                0.5,\n            ),\n        ),\n    )\n);\n\n/// Generates a dark fluent tree schema.\n/// @type {Map}\n/// @prop {Map} background-active [color: ('gray', 100)] - The background color used for the active tree node.\n/// @prop {Map} background-selected [color: ('gray', 100)] - The background color used for the selected tree node.\n/// @prop {Map} foreground-selected [color: ('gray', 900)] - The color used for the content of the selected tree node.\n/// @prop {Map} background-active-selected [color: ('gray', 200)] - The background color used for the active selected tree node.\n/// @prop {Map} foreground-active-selected [color: ('gray', 900)] - The color used for the content of the active selected tree node.\n/// @prop {Map} hover-color [color: ('gray', 200, .5)] - The background color used for the tree node on hover.\n/// @requires $fluent-tree\n/// @requires $base-dark-tree\n$dark-fluent-tree: extend(\n    $fluent-tree,\n    $base-dark-tree,\n    (\n        background-active: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        background-selected: (\n            color: (\n                'gray',\n                100,\n            ),\n        ),\n        foreground-selected: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        background-active-selected: (\n            color: (\n                'gray',\n                200,\n            ),\n        ),\n        foreground-active-selected: (\n            color: (\n                'gray',\n                900,\n            ),\n        ),\n        hover-color: (\n            color: (\n                'gray',\n                200,\n                0.5,\n            ),\n        ),\n    )\n);\n\n/// Generates a dark bootstrap tree schema.\n/// @type {Map}\n/// @prop {Map} hover-color [color: ('gray', 500, .3)] - The background color used for the tree node on hover.\n/// @requires $bootstrap-tree\n/// @requires $base-dark-tree\n$dark-bootstrap-tree: extend(\n    $bootstrap-tree,\n    $base-dark-tree,\n    (\n        hover-color: (\n            color: (\n                'gray',\n                500,\n                0.3,\n            ),\n        ),\n    )\n);\n\n/// Generates a dark indigo tree schema.\n/// @type {Map}\n/// @prop {Map} hover-color [color: ('primary', 200, .5)] - The background color used for the tree node on hover.\n/// @requires $indigo-tree\n/// @requires $base-dark-tree\n$dark-indigo-tree: extend(\n    $indigo-tree,\n    $base-dark-tree,\n    (\n        hover-color: (\n            color: (\n                'primary',\n                200,\n                0.5,\n            ),\n        ),\n    )\n);\n","/* stylelint-disable keyframes-name-pattern */\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:string';\n\n////\n/// @package theming\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n$keyframes: () !default;\n\n/// Registers a keyframes animation in the keyframes registry.\n/// @param {String} $name - The name of the keyframes animation.\n@mixin keyframes($name) {\n    $keyframe: map.has-key($keyframes, $name);\n\n    @if not($keyframe) {\n        $keyframe: string.unique-id();\n        $keyframes: map.merge($keyframes, (#{$name}: $keyframe)) !global;\n\n        @at-root {\n            @keyframes #{$name} {\n                @content;\n            }\n        }\n    }\n}\n\n/// Animates an element.\n/// @param {List} $animate - The list of animation properties.\n/// @example scss - Animating an element\n///  @include fade-in(); // include the 'fade-in' keyframes animation mixin\n///\n///  .bozo {\n///     @include animation('fade-in' .3s ease-out);\n///  }\n@mixin animation($animate...) {\n    $max: list.length($animate);\n    $animations: '';\n\n    @for $i from 1 through $max {\n        $animations: #{$animations + list.nth($animate, $i)};\n\n        @if $i < $max {\n            $animations: #{$animations + ', '};\n        }\n    }\n\n    animation: #{$animations};\n}\n","@use '../functions' as *;\n\n////\n/// @package theming\n/// @group elevations\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// Level 1 - The color used to generate umbra shadows.\n/// @type Color\n/// @access private\n$color-1: rgba(0 0 0 / 26%) !default;\n\n/// Level 2 - The color used to generate penumbra shadows.\n/// @type Color\n/// @access private\n$color-2: rgba(0 0 0 / 12%) !default;\n\n/// Level 3 - The color used to generate ambient shadows.\n/// @type Color\n/// @access private\n$color-3: rgba(0 0 0 / 8%) !default;\n\n/// All elevation levels\n/// @access private\n$_1: box-shadow((0 1px 3px 0 $color-1, 0 1px 1px 0 $color-2, 0 2px 1px -1px $color-3));\n$_2: box-shadow((0 1px 5px 0 $color-1, 0 2px 2px 0 $color-2, 0 3px 1px -2px $color-3));\n$_3: box-shadow((0 1px 8px 0 $color-1, 0 3px 4px 0 $color-2, 0 3px 3px -2px $color-3));\n$_4: box-shadow((0 2px 4px -1px $color-1, 0 4px 5px 0 $color-2, 0 1px 10px 0 $color-3));\n$_5: box-shadow((0 3px 5px -1px $color-1, 0 5px 8px 0 $color-2, 0 1px 14px 0 $color-3));\n$_6: box-shadow((0 3px 5px -1px $color-1, 0 6px 10px 0 $color-2, 0 1px 18px 0 $color-3));\n$_7: box-shadow((0 4px 5px -2px $color-1, 0 7px 10px 1px $color-2, 0 2px 16px 1px $color-3));\n$_8: box-shadow((0 5px 5px -3px $color-1, 0 8px 10px 1px $color-2, 0 3px 14px 2px $color-3));\n$_9: box-shadow((0 5px 6px -3px $color-1, 0 9px 12px 1px $color-2, 0 3px 16px 2px $color-3));\n$_10: box-shadow((0 6px 6px -3px $color-1, 0 10px 14px 1px $color-2, 0 4px 18px 3px $color-3));\n$_11: box-shadow((0 6px 7px -4px $color-1, 0 11px 15px 1px $color-2, 0 4px 20px 3px $color-3));\n$_12: box-shadow((0 7px 8px -4px $color-1, 0 12px 17px 2px $color-2, 0 5px 22px 4px $color-3));\n$_13: box-shadow((0 7px 8px -4px $color-1, 0 13px 19px 2px $color-2, 0 5px 24px 4px $color-3));\n$_14: box-shadow((0 7px 9px -4px $color-1, 0 14px 21px 2px $color-2, 0 5px 26px 4px $color-3));\n$_15: box-shadow((0 8px 9px -5px $color-1, 0 15px 22px 2px $color-2, 0 6px 28px 5px $color-3));\n$_16: box-shadow((0 8px 10px -5px $color-1, 0 16px 24px 2px $color-2, 0 6px 30px 5px $color-3));\n$_17: box-shadow((0 8px 11px -5px $color-1, 0 17px 26px 2px $color-2, 0 6px 32px 5px $color-3));\n$_18: box-shadow((0 9px 11px -5px $color-1, 0 18px 28px 2px $color-2, 0 7px 34px 6px $color-3));\n$_19: box-shadow((0 9px 12px -6px $color-1, 0 19px 29px 2px $color-2, 0 7px 36px 6px $color-3));\n$_20: box-shadow((0 10px 13px -6px $color-1, 0 20px 31px 3px $color-2, 0 8px 38px 7px $color-3));\n$_21: box-shadow((0 10px 13px -6px $color-1, 0 21px 33px 3px $color-2, 0 8px 40px 7px $color-3));\n$_22: box-shadow((0 10px 14px -6px $color-1, 0 22px 35px 3px $color-2, 0 8px 42px 7px $color-3));\n$_23: box-shadow((0 11px 14px -7px $color-1, 0 23px 36px 3px $color-2, 0 9px 44px 8px $color-3));\n$_24: box-shadow((0 11px 15px -7px $color-1, 0 24px 38px 3px $color-2, 0 9px 46px 8px $color-3));\n\n/// Configures shadow colors for the material elevations.\n/// @access public\n/// @param {Color} $color-1 - The umbra shadow color.\n/// @param {Color} $color-2 - The penumbra shadow color.\n/// @param {Color} $color-3 - The ambiant shadow color.\n@mixin configure($color-1, $color-2, $color-3) {\n    @if $color-1 {\n        $color-1: $color-1 !global;\n    }\n\n    @if $color-2 {\n        $color-2: $color-2 !global;\n    }\n\n    @if $color-3 {\n        $color-3: $color-3 !global;\n    }\n}\n\n/**\n * @sass-export-section=\"material\"\n */\n/// А map of 24 shadow elevations with the umbra, penumbra and ambient shadows.\n/// @type Map\n/// @access private\n$elevations: (\n    0: none,\n    1: $_1,\n    2: $_2,\n    3: $_3,\n    4: $_4,\n    5: $_5,\n    6: $_6,\n    7: $_7,\n    8: $_8,\n    9: $_9,\n    10: $_10,\n    11: $_11,\n    12: $_12,\n    13: $_13,\n    14: $_14,\n    15: $_15,\n    16: $_16,\n    17: $_17,\n    18: $_18,\n    19: $_19,\n    20: $_20,\n    21: $_21,\n    22: $_22,\n    23: $_23,\n    24: $_24,\n);\n\n// @end-sass-export-section\n","/* stylelint-disable max-line-length */\n@use '../../config' as *;\n@use '../functions' as *;\n@use '../../utils/map' as *;\n\n////\n/// @package theming\n/// @group Typography\n////\n\n/**\n * @sass-export-section=\"bootstrap\"\n */\n$typeface: \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'\";\n$h1: type-style(\n    $font-size: rem(40px),\n    $font-weight: 500,\n    $letter-spacing: rem(-1.5px),\n    $line-height: rem(48px),\n    $text-transform: none,\n    $margin-top: 0,\n    $margin-bottom: rem(8px),\n);\n$h2: type-style(\n    $font-size: rem(32px),\n    $font-weight: 500,\n    $letter-spacing: rem(-0.5px),\n    $line-height: rem(38.4px),\n    $text-transform: none,\n    $margin-top: 0,\n    $margin-bottom: rem(8px),\n);\n$h3: type-style(\n    $font-size: rem(28px),\n    $font-weight: 500,\n    $letter-spacing: 0,\n    $line-height: rem(33.6px),\n    $text-transform: none,\n    $margin-top: 0,\n    $margin-bottom: rem(8px),\n);\n$h4: type-style(\n    $font-size: rem(24px),\n    $font-weight: 500,\n    $letter-spacing: rem(0.25px),\n    $line-height: rem(28.8px),\n    $text-transform: none,\n    $margin-top: 0,\n    $margin-bottom: rem(8px),\n);\n$h5: type-style(\n    $font-size: rem(20px),\n    $font-weight: 500,\n    $letter-spacing: 0,\n    $line-height: rem(24px),\n    $text-transform: none,\n    $margin-top: 0,\n    $margin-bottom: rem(8px),\n);\n$h6: type-style(\n    $font-size: rem(16px),\n    $font-weight: 500,\n    $letter-spacing: rem(0.15px),\n    $line-height: rem(19.2px),\n    $text-transform: none,\n    $margin-top: 0,\n    $margin-bottom: rem(8px),\n);\n$body-1: type-style(\n    $font-size: rem(16px),\n    $font-weight: 400,\n    $letter-spacing: rem(0.5px),\n    $line-height: rem(24px),\n    $text-transform: none,\n    $margin-top: 0,\n    $margin-bottom: 0,\n);\n$body-2: type-style(\n    $font-size: rem(14.4px),\n    $font-weight: 400,\n    $letter-spacing: rem(0.25px),\n    $line-height: rem(24px),\n    $text-transform: none,\n    $margin-top: 0,\n    $margin-bottom: 0,\n);\n$subtitle-1: type-style(\n    $font-size: rem(14px),\n    $font-weight: 400,\n    $letter-spacing: rem(0.15px),\n    $line-height: rem(24px),\n    $text-transform: none,\n    $margin-top: 0,\n    $margin-bottom: 0,\n);\n$subtitle-2: type-style(\n    $font-size: rem(14.4px),\n    $font-weight: 400,\n    $letter-spacing: rem(0.1px),\n    $line-height: rem(21.6px),\n    $text-transform: none,\n    $margin-top: 0,\n    $margin-bottom: 0,\n);\n$button: type-style(\n    $font-size: rem(16px),\n    $font-weight: 500,\n    $letter-spacing: rem(0.75px),\n    $line-height: rem(24px),\n    $text-transform: none,\n    $margin-top: 0,\n    $margin-bottom: 0,\n);\n$caption: type-style(\n    $font-size: rem(12px),\n    $font-weight: 400,\n    $letter-spacing: rem(0.4px),\n    $line-height: rem(16px),\n    $text-transform: none,\n);\n$overline: type-style(\n    $font-size: rem(10px),\n    $font-weight: 400,\n    $letter-spacing: rem(1.5px),\n    $line-height: rem(16px),\n    $text-transform: uppercase,\n);\n$bootstrap_weekday: type-style(\n    $font-size: rem(13px),\n    $font-weight: 400,\n    $line-height: normal,\n    $text-transform: none,\n    $margin-top: 0,\n    $margin-bottom: 0,\n);\n$_base-scale: type-scale(\n    $_theme: 'bootstrap',\n    $h1: $h1,\n    $h2: $h2,\n    $h3: $h3,\n    $h4: $h4,\n    $h5: $h5,\n    $h6: $h6,\n    $body-1: $body-1,\n    $body-2: $body-2,\n    $subtitle-1: $subtitle-1,\n    $subtitle-2: $subtitle-2,\n    $button: $button,\n    $caption: $caption,\n    $overline: $overline,\n);\n$type-scale: extend(\n    $_base-scale,\n    (\n        calendar-labels: $bootstrap_weekday,\n    )\n);\n","@use '../../config' as *;\n@use '../functions' as *;\n\n////\n/// @package theming\n/// @group Typography\n////\n\n/**\n * @sass-export-section=\"material\"\n */\n$typeface: \"'Titillium Web', sans-serif\";\n$h1: type-style(\n    $font-size: rem(96px),\n    $font-weight: 300,\n    $font-style: normal,\n    $letter-spacing: rem(-1.5px),\n    $line-height: rem(112px),\n    $text-transform: none,\n    $margin-top: rem(28px),\n    $margin-bottom: rem(56px),\n);\n$h2: type-style(\n    $font-size: rem(60px),\n    $font-weight: 300,\n    $font-style: normal,\n    $letter-spacing: rem(-0.5px),\n    $line-height: rem(71px),\n    $text-transform: none,\n    $margin-top: rem(28px),\n    $margin-bottom: rem(28px),\n);\n$h3: type-style(\n    $font-size: rem(48px),\n    $font-weight: 400,\n    $font-style: normal,\n    $letter-spacing: 0,\n    $line-height: rem(57px),\n    $text-transform: none,\n    $margin-top: rem(28px),\n    $margin-bottom: 0,\n);\n$h4: type-style(\n    $font-size: rem(34px),\n    $font-weight: 400,\n    $font-style: normal,\n    $letter-spacing: rem(0.25px),\n    $line-height: rem(40px),\n    $text-transform: none,\n    $margin-top: rem(28px),\n    $margin-bottom: 0,\n);\n$h5: type-style(\n    $font-size: rem(24px),\n    $font-weight: 400,\n    $font-style: normal,\n    $letter-spacing: 0,\n    $line-height: rem(28px),\n    $text-transform: none,\n    $margin-top: rem(28px),\n    $margin-bottom: 0,\n);\n$h6: type-style(\n    $font-size: rem(20px),\n    $font-weight: 600,\n    $font-style: normal,\n    $letter-spacing: rem(0.15px),\n    $line-height: rem(24px),\n    $text-transform: none,\n    $margin-top: 0,\n    $margin-bottom: 0,\n);\n$body-1: type-style(\n    $font-size: rem(16px),\n    $font-weight: 400,\n    $font-style: normal,\n    $letter-spacing: rem(0.5px),\n    $line-height: rem(28px),\n    $text-transform: none,\n    $margin-top: rem(28px),\n    $margin-bottom: rem(16),\n);\n$body-2: type-style(\n    $font-size: rem(14px),\n    $font-weight: 400,\n    $font-style: normal,\n    $letter-spacing: rem(0.25px),\n    $line-height: rem(20px),\n    $text-transform: none,\n);\n$subtitle-1: type-style(\n    $font-size: rem(16px),\n    $font-weight: 400,\n    $font-style: normal,\n    $letter-spacing: rem(0.15px),\n    $line-height: rem(24px),\n    $text-transform: none,\n);\n$subtitle-2: type-style(\n    $font-size: rem(14px),\n    $font-weight: 600,\n    $font-style: normal,\n    $letter-spacing: rem(0.1px),\n    $line-height: rem(24px),\n    $text-transform: none,\n);\n$button: type-style(\n    $font-size: rem(14px),\n    $font-weight: 600,\n    $font-style: normal,\n    $letter-spacing: rem(0.75px),\n    $line-height: rem(16px),\n    $text-transform: uppercase,\n);\n$caption: type-style(\n    $font-size: rem(12px),\n    $font-weight: 400,\n    $font-style: normal,\n    $letter-spacing: rem(0.4px),\n    $line-height: rem(16px),\n    $text-transform: none,\n);\n$overline: type-style(\n    $font-size: rem(10px),\n    $font-weight: 400,\n    $font-style: normal,\n    $letter-spacing: rem(1.5px),\n    $line-height: rem(16px),\n    $text-transform: uppercase,\n);\n$type-scale: type-scale(\n    $_theme: 'material',\n    $h1: $h1,\n    $h2: $h2,\n    $h3: $h3,\n    $h4: $h4,\n    $h5: $h5,\n    $h6: $h6,\n    $body-1: $body-1,\n    $body-2: $body-2,\n    $subtitle-1: $subtitle-1,\n    $subtitle-2: $subtitle-2,\n    $button: $button,\n    $caption: $caption,\n    $overline: $overline,\n);\n","@use '../../config' as *;\n@use '../functions' as *;\n\n////\n/// @package theming\n/// @group Typography\n////\n\n/**\n * @sass-export-section=\"fluent\"\n */\n$typeface: \"'Open Sans', Helvetica, Arial, sans-serif\";\n$h1: type-style(\n    $font-size: rem(68px),\n    $font-weight: 700,\n    $letter-spacing: rem(-1.5px),\n    $line-height: rem(76px),\n    $text-transform: none,\n    $margin-top: 0,\n    $margin-bottom: 0,\n);\n$h2: type-style(\n    $font-size: rem(42px),\n    $font-weight: 700,\n    $letter-spacing: rem(-0.5px),\n    $line-height: rem(52px),\n    $text-transform: none,\n    $margin-top: 0,\n    $margin-bottom: 0,\n);\n$h3: type-style(\n    $font-size: rem(32px),\n    $font-weight: 600,\n    $letter-spacing: 0,\n    $line-height: rem(40px),\n    $text-transform: none,\n    $margin-top: 0,\n    $margin-bottom: 0,\n);\n$h4: type-style(\n    $font-size: rem(28px),\n    $font-weight: 400,\n    $letter-spacing: rem(0.25px),\n    $line-height: rem(36px),\n    $text-transform: none,\n    $margin-top: 0,\n    $margin-bottom: 0,\n);\n$h5: type-style(\n    $font-size: rem(24px),\n    $font-weight: 400,\n    $letter-spacing: 0,\n    $line-height: rem(32px),\n    $text-transform: none,\n    $margin-top: 0,\n    $margin-bottom: 0,\n);\n$h6: type-style(\n    $font-size: rem(20px),\n    $font-weight: 400,\n    $letter-spacing: rem(0.15px),\n    $line-height: rem(28px),\n    $text-transform: none,\n    $margin-top: 0,\n    $margin-bottom: 0,\n);\n$body-1: type-style(\n    $font-size: rem(16px),\n    $font-weight: 400,\n    $letter-spacing: rem(0.5px),\n    $line-height: rem(22px),\n    $text-transform: none,\n    $margin-top: 0,\n    $margin-bottom: 0,\n);\n$body-2: type-style(\n    $font-size: rem(14px),\n    $font-weight: 400,\n    $letter-spacing: rem(0.25px),\n    $line-height: rem(20px),\n    $text-transform: none,\n    $margin-top: 0,\n    $margin-bottom: 0,\n);\n$subtitle-1: type-style(\n    $font-size: rem(18px),\n    $font-weight: 400,\n    $letter-spacing: rem(0.15px),\n    $line-height: rem(24px),\n    $text-transform: none,\n    $margin-top: 0,\n    $margin-bottom: 0,\n);\n$subtitle-2: type-style(\n    $font-size: rem(14px),\n    $font-weight: 600,\n    $letter-spacing: rem(0.1px),\n    $line-height: rem(20px),\n    $text-transform: none,\n    $margin-top: 0,\n    $margin-bottom: 0,\n);\n$button: type-style(\n    $font-size: rem(14px),\n    $font-weight: 400,\n    $letter-spacing: rem(0.75px),\n    $line-height: rem(14px),\n    $text-transform: capitalize,\n    $margin-top: 0,\n    $margin-bottom: 0,\n);\n$caption: type-style(\n    $font-size: rem(12px),\n    $font-weight: 400,\n    $font-style: normal,\n    $letter-spacing: rem(0.4px),\n    $line-height: rem(16px),\n    $text-transform: none,\n);\n$overline: type-style(\n    $font-size: rem(10px),\n    $font-weight: 400,\n    $letter-spacing: rem(1.5px),\n    $line-height: rem(14px),\n    $text-transform: uppercase,\n    $margin-top: 0,\n    $margin-bottom: 0,\n);\n$type-scale: type-scale(\n    $_theme: 'fluent',\n    $h1: $h1,\n    $h2: $h2,\n    $h3: $h3,\n    $h4: $h4,\n    $h5: $h5,\n    $h6: $h6,\n    $body-1: $body-1,\n    $body-2: $body-2,\n    $subtitle-1: $subtitle-1,\n    $subtitle-2: $subtitle-2,\n    $button: $button,\n    $caption: $caption,\n    $overline: $overline,\n);\n","@use '../../config' as *;\n@use '../functions' as *;\n\n////\n/// @package theming\n/// @group Typography\n////\n\n/**\n * @sass-export-section=\"indigo\"\n */\n$typeface: \"'Nunito Sans', sans-serif\";\n$h1: type-style(\n    $font-size: rem(96px),\n    $font-weight: 200,\n    $letter-spacing: rem(-1.5px),\n    $line-height: rem(112px),\n    $text-transform: none,\n    $margin-top: 0,\n    $margin-bottom: 0,\n);\n$h2: type-style(\n    $font-size: rem(60px),\n    $font-weight: 200,\n    $letter-spacing: rem(-0.5px),\n    $line-height: rem(72px),\n    $text-transform: none,\n    $margin-top: 0,\n    $margin-bottom: 0,\n);\n$h3: type-style(\n    $font-size: rem(48px),\n    $font-weight: 200,\n    $letter-spacing: 0,\n    $line-height: rem(56px),\n    $text-transform: none,\n    $margin-top: 0,\n    $margin-bottom: 0,\n);\n$h4: type-style(\n    $font-size: rem(36px),\n    $font-weight: 200,\n    $letter-spacing: rem(0.25px),\n    $line-height: rem(42px),\n    $text-transform: none,\n    $margin-top: 0,\n    $margin-bottom: 0,\n);\n$h5: type-style(\n    $font-size: rem(24px),\n    $font-weight: 200,\n    $letter-spacing: 0,\n    $line-height: rem(28px),\n    $text-transform: none,\n    $margin-top: 0,\n    $margin-bottom: 0,\n);\n$h6: type-style(\n    $font-size: rem(20px),\n    $font-weight: 600,\n    $letter-spacing: rem(0.15px),\n    $line-height: rem(26px),\n    $text-transform: none,\n    $margin-top: 0,\n    $margin-bottom: 0,\n);\n$body-1: type-style(\n    $font-size: rem(16px),\n    $font-weight: 400,\n    $letter-spacing: rem(0.5px),\n    $line-height: rem(20px),\n    $text-transform: none,\n    $margin-top: 0,\n    $margin-bottom: 0,\n);\n$body-2: type-style(\n    $font-size: rem(14px),\n    $font-weight: 400,\n    $letter-spacing: rem(0.25px),\n    $line-height: rem(20px),\n    $text-transform: none,\n    $margin-top: 0,\n    $margin-bottom: 0,\n);\n$subtitle-1: type-style(\n    $font-size: rem(16px),\n    $font-weight: 600,\n    $letter-spacing: rem(0.15px),\n    $line-height: rem(22px),\n    $text-transform: none,\n    $margin-top: 0,\n    $margin-bottom: 0,\n);\n$subtitle-2: type-style(\n    $font-size: rem(14px),\n    $font-weight: 700,\n    $letter-spacing: rem(0.1px),\n    $line-height: rem(20px),\n    $text-transform: none,\n    $margin-top: 0,\n    $margin-bottom: 0,\n);\n$button: type-style(\n    $font-size: rem(12px),\n    $font-weight: 700,\n    $letter-spacing: rem(0.75px),\n    $line-height: normal,\n    $text-transform: uppercase,\n    $margin-top: 0,\n    $margin-bottom: 0,\n);\n$caption: type-style(\n    $font-size: rem(12px),\n    $font-weight: 400,\n    $letter-spacing: rem(0.4px),\n    $line-height: rem(16px),\n    $text-transform: normal,\n    $margin-top: 0,\n    $margin-bottom: 0,\n);\n$overline: type-style(\n    $font-size: rem(10px),\n    $font-weight: 700,\n    $letter-spacing: rem(0.2px),\n    $line-height: rem(14px),\n    $text-transform: uppercase,\n    $margin-top: 0,\n    $margin-bottom: 0,\n);\n$type-scale: type-scale(\n    $_theme: 'indigo',\n    $h1: $h1,\n    $h2: $h2,\n    $h3: $h3,\n    $h4: $h4,\n    $h5: $h5,\n    $h6: $h6,\n    $body-1: $body-1,\n    $body-2: $body-2,\n    $subtitle-1: $subtitle-1,\n    $subtitle-2: $subtitle-2,\n    $button: $button,\n    $caption: $caption,\n    $overline: $overline,\n);\n","@use '../../functions' as *;\n\n////\n/// @package theming\n/// @group palettes\n/// @access public\n////\n\n/**\n * @sass-export-section=\"light-material\"\n */\n/// Generates the light material palette.\n/// @type Map\n/// @name light-material-palette\n/// @prop {Color} primary [#09f] - The primary color\n/// @prop {Color} secondary [#e41c77] - The secondary color\n/// @prop {Color} gray [#000] - The gray color\n/// @prop {Color} surface [#fff] - The surface color\n/// @prop {Color} info [#1377d5] - The info color\n/// @prop {Color} success [#4eb862] - The success color\n/// @prop {Color} warn [#faa419] - The warn color\n/// @prop {Color} error [#ff134a] - The error color\n$palette: palette(\n    $primary: #09f,\n    $secondary: #e41c77,\n    $surface: white,\n    $info: #1377d5,\n    $success: #4eb862,\n    $warn: #faa419,\n    $error: #ff134a,\n    $variant: 'material',\n);\n","@use '../../functions' as *;\n\n////\n/// @package theming\n/// @group palettes\n/// @access public\n////\n\n/**\n * @sass-export-section=\"light-bootstrap\"\n */\n/// Generates the light bootstrap palette.\n/// @type Map\n/// @name light-bootstrap-palette\n/// @prop {Color} primary [#0d6efd] - The primary color\n/// @prop {Color} secondary [#6c757d] - The secondary color\n/// @prop {Color} gray [#adb5bd] - The gray color\n/// @prop {Color} surface [#f8f9fa] - The surface color\n/// @prop {Color} info [#0dcaf0] - The info color\n/// @prop {Color} success [#198754] - The success color\n/// @prop {Color} warn [#ffc107] - The warn color\n/// @prop {Color} error [#dc3545] - The error color\n$palette: palette(\n    $primary: #0d6efd,\n    $secondary: #6c757d,\n    $gray: #adb5bd,\n    $surface: #f8f9fa,\n    $info: #0dcaf0,\n    $success: #198754,\n    $warn: #ffc107,\n    $error: #dc3545,\n    $variant: 'bootstrap',\n);\n","@use '../../functions' as *;\n\n////\n/// @package theming\n/// @group palettes\n/// @access public\n////\n\n/**\n * @sass-export-section=\"light-fluent\"\n */\n/// Generates the light fluent palette.\n/// @type Map\n/// @name light-fluent-palette\n/// @prop {Color} primary [#0078d4] - The primary color\n/// @prop {Color} secondary [#2b88d8] - The secondary color\n/// @prop {Color} gray [#000] - The gray color\n/// @prop {Color} surface [#fff] - The surface color\n/// @prop {Color} info [#1377d5] - The info color\n/// @prop {Color} success [#107c10] - The success color\n/// @prop {Color} warn [#797673] - The warn color\n/// @prop {Color} error [#a80000] - The error color\n$palette: palette(\n    $primary: #0078d4,\n    $secondary: #2b88d8,\n    $surface: #fff,\n    $info: #1377d5,\n    $success: #107c10,\n    $warn: #797673,\n    $error: #a80000,\n    $variant: 'fluent',\n);\n\n/// Generates the light fluent word palette.\n/// @type Map\n/// @name light-fluent-word-palette\n/// @prop {Color} primary [#2b579a] - The primary color\n/// @prop {Color} secondary [#2b579a] - The secondary color\n/// @prop {Color} gray [#000] - The gray color\n/// @prop {Color} surface [#fff] - The surface color\n/// @prop {Color} info [#1377d5] - The info color\n/// @prop {Color} success [#107c10] - The success color\n/// @prop {Color} warn [#797673] - The warn color\n/// @prop {Color} error [#a80000] - The error color\n$word-palette: palette(\n    $primary: #2b579a,\n    $secondary: #2b579a,\n    $surface: #fff,\n    $info: #1377d5,\n    $success: #107c10,\n    $warn: #797673,\n    $error: #a80000,\n    $variant: 'fluent',\n);\n\n/// Generates the dark green palette.\n/// @type Map\n/// @name light-fluent-excel-palette\n/// @prop {Color} primary [#217346] - The primary color\n/// @prop {Color} secondary [#217346] - The secondary color\n/// @prop {Color} gray [#000] - The gray color\n/// @prop {Color} surface [#fff] - The surface color\n/// @prop {Color} info [#1377d5] - The info color\n/// @prop {Color} success [#107c10] - The success color\n/// @prop {Color} warn [#797673] - The warn color\n/// @prop {Color} error [#a80000] - The error color\n$excel-palette: palette(\n    $primary: #217346,\n    $secondary: #217346,\n    $surface: #fff,\n    $info: #1377d5,\n    $success: #107c10,\n    $warn: #797673,\n    $error: #a80000,\n    $variant: 'fluent',\n);\n","@use '../../functions' as *;\n\n////\n/// @package theming\n/// @group palettes\n/// @access public\n////\n\n/**\n * @sass-export-section=\"light-indigo\"\n */\n/// Generates the light indigo palette.\n/// @type Map\n/// @name light-indigo-palette\n/// @prop {Color} primary [#3f51b5] - The primary color\n/// @prop {Color} secondary [#3f51b5] - The secondary color\n/// @prop {Color} gray [hsl(236deg 8% 5%)] - The gray color\n/// @prop {Color} surface [#fff] - The surface color\n/// @prop {Color} info [#9208bc] - The info color\n/// @prop {Color} success [#689f38] - The success color\n/// @prop {Color} warn [#ff9800] - The warn color\n/// @prop {Color} error [#cf1a2b] - The error color\n$palette: palette(\n    $primary: #3f51b5,\n    $secondary: #3f51b5,\n    $gray: hsl(236deg 8% 5%),\n    $surface: #fff,\n    $info: #9208bc,\n    $success: #689f38,\n    $warn: #ff9800,\n    $error: #cf1a2b,\n    $variant: 'indigo',\n);\n","@use '../../functions' as *;\n\n////\n/// @package theming\n/// @group palettes\n/// @access public\n////\n\n/**\n * @sass-export-section=\"light\"\n */\n/// Generates the light green palette.\n/// @type Map\n/// @name light-green-palette\n/// @prop {Color} primary [#09f] - The primary color\n/// @prop {Color} secondary [#72da67] - The secondary color\n/// @prop {Color} gray [#000] - The gray color\n/// @prop {Color} surface [#fff] - The surface color\n/// @prop {Color} info [#1377d5] - The info color\n/// @prop {Color} success [#4eb862] - The success color\n/// @prop {Color} warn [#fbb13c] - The warn color\n/// @prop {Color} error [#ff134a] - The error color\n$green-palette: palette(\n    $primary: #09f,\n    $secondary: #72da67,\n    $surface: #fff,\n    $info: #1377d5,\n    $success: #4eb862,\n    $warn: #fbb13c,\n    $error: #ff134a,\n);\n\n/// Generates the light purple palette.\n/// @type Map\n/// @name light-purple-palette\n/// @prop {Color} primary [#00b4d6] - The primary color\n/// @prop {Color} secondary [#514590] - The secondary color\n/// @prop {Color} gray [#000] - The gray color\n/// @prop {Color} surface [#fff] - The surface color\n/// @prop {Color} info [#1377d5] - The info color\n/// @prop {Color} success [#4eb862] - The success color\n/// @prop {Color} warn [#fbb13c] - The warn color\n/// @prop {Color} error [#ff134a] - The error color\n$purple-palette: palette(\n    $primary: #00b4d6,\n    $secondary: #514590,\n    $surface: #fff,\n    $info: #1377d5,\n    $success: #4eb862,\n    $warn: #fbb13c,\n    $error: #ff134a,\n);\n","@use '../../functions' as *;\n\n////\n/// @package theming\n/// @group palettes\n/// @access public\n////\n\n/**\n * @sass-export-section=\"dark-material\"\n */\n/// Generates the dark material palette.\n/// @type Map\n/// @name dark-material-palette\n/// @prop {Color} primary [#09f] - The primary color\n/// @prop {Color} secondary [#e41c77] - The secondary color\n/// @prop {Color} gray [#fff] - The gray color\n/// @prop {Color} surface [#222] - The surface color\n/// @prop {Color} info [#1377d5] - The info color\n/// @prop {Color} success [#4eb862] - The success color\n/// @prop {Color} warn [#faa419] - The warn color\n/// @prop {Color} error [#ff134a] - The error color\n$palette: palette(\n    $primary: #09f,\n    $secondary: #e41c77,\n    $surface: #222,\n    $info: #1377d5,\n    $success: #4eb862,\n    $warn: #faa419,\n    $error: #ff134a,\n    $variant: 'material',\n);\n","@use '../../functions' as *;\n\n////\n/// @package theming\n/// @group palettes\n/// @access public\n////\n\n/**\n * @sass-export-section=\"dark-bootstrap\"\n */\n/// Generates the dark bootstrap palette.\n/// @type Map\n/// @name dark-bootstrap-palette\n/// @prop {Color} primary [#0d6efd] - The primary color\n/// @prop {Color} secondary [#6c757d] - The secondary color\n/// @prop {Color} gray [#adb5bd] - The gray color\n/// @prop {Color} surface [#212529] - The surface color\n/// @prop {Color} info [#0dcaf0] - The info color\n/// @prop {Color} success [#198754] - The success color\n/// @prop {Color} warn [#ffc107] - The warn color\n/// @prop {Color} error [#dc3545] - The error color\n$palette: palette(\n    $primary: #0d6efd,\n    $secondary: #6c757d,\n    $gray: #adb5bd,\n    $surface: #212529,\n    $info: #0dcaf0,\n    $success: #198754,\n    $warn: #ffc107,\n    $error: #dc3545,\n    $variant: 'bootstrap',\n);\n","@use '../../functions' as *;\n\n////\n/// @package theming\n/// @group palettes\n/// @access public\n////\n\n/**\n * @sass-export-section=\"dark-fluent\"\n */\n/// Generates the dark fluent palette.\n/// @type Map\n/// @name dark-fluent-palette\n/// @prop {Color} primary [#0078d4] - The primary color\n/// @prop {Color} secondary [#2b88d8] - The secondary color\n/// @prop {Color} gray [#fff] - The gray color\n/// @prop {Color} surface [#222] - The surface color\n/// @prop {Color} info [#1377d5] - The info color\n/// @prop {Color} success [#107c10] - The success color\n/// @prop {Color} warn [#797673] - The warn color\n/// @prop {Color} error [#a80000] - The error color\n$palette: palette(\n    $primary: #0078d4,\n    $secondary: #2b88d8,\n    $surface: #222,\n    $info: #1377d5,\n    $success: #107c10,\n    $warn: #797673,\n    $error: #a80000,\n    $variant: 'fluent',\n);\n\n/// Generates the dark fluent word palette.\n/// @type Map\n/// @name dark-fluent-word-palette\n/// @prop {Color} primary [#2b579a] - The primary color\n/// @prop {Color} secondary [#2b579a] - The secondary color\n/// @prop {Color} gray [#fff] - The gray color\n/// @prop {Color} surface [#222] - The surface color\n/// @prop {Color} info [#1377d5] - The info color\n/// @prop {Color} success [#107c10] - The success color\n/// @prop {Color} warn [#797673] - The warn color\n/// @prop {Color} error [#a80000] - The error color\n$word-palette: palette(\n    $primary: #2b579a,\n    $secondary: #2b579a,\n    $surface: #222,\n    $info: #1377d5,\n    $success: #107c10,\n    $warn: #797673,\n    $error: #a80000,\n    $variant: 'fluent',\n);\n\n/// Generates the dark fluent excel palette.\n/// @type Map\n/// @name dark-fluent-excel-palette\n/// @prop {Color} primary [#217346] - The primary color\n/// @prop {Color} secondary [#217346] - The secondary color\n/// @prop {Color} gray [#fff] - The gray color\n/// @prop {Color} surface [#222] - The surface color\n/// @prop {Color} info [#1377d5] - The info color\n/// @prop {Color} success [#107c10] - The success color\n/// @prop {Color} warn [#797673] - The warn color\n/// @prop {Color} error [#a80000] - The error color\n$excel-palette: palette(\n    $primary: #217346,\n    $secondary: #217346,\n    $surface: #222,\n    $info: #1377d5,\n    $success: #107c10,\n    $warn: #797673,\n    $error: #a80000,\n    $variant: 'fluent',\n);\n","@use '../../functions' as *;\n\n////\n/// @package theming\n/// @group palettes\n/// @access public\n////\n\n/**\n * @sass-export-section=\"dark-indigo\"\n */\n/// Generates the dark indigo palette.\n/// @type Map\n/// @name dark-indigo-palette\n/// @prop {Color} primary [#3f51b5] - The primary color\n/// @prop {Color} secondary [#3f51b5] - The secondary color\n/// @prop {Color} gray [hsl(262deg 8% 98%)] - The gray color\n/// @prop {Color} surface [#2a2b2f] - The surface color\n/// @prop {Color} info [#9208bc] - The info color\n/// @prop {Color} success [#689f38] - The success color\n/// @prop {Color} warn [#ff9800] - The warn color\n/// @prop {Color} error [#cf1a2b] - The error color\n$palette: palette(\n    $primary: #3f51b5,\n    $secondary: #3f51b5,\n    $gray: hsl(262deg 8% 98%),\n    $surface: #2a2b2f,\n    $info: #9208bc,\n    $success: #689f38,\n    $warn: #ff9800,\n    $error: #cf1a2b,\n    $variant: 'indigo',\n);\n","@use '../../functions' as *;\n\n////\n/// @package theming\n/// @group palettes\n/// @access public\n////\n\n/**\n * @sass-export-section=\"dark\"\n */\n/// Generates the dark green palette.\n/// @type Map\n/// @name dark-green-palette\n/// @prop {Color} primary [#09f] - The primary color\n/// @prop {Color} secondary [#72da67] - The secondary color\n/// @prop {Color} gray [#fff] - The gray color\n/// @prop {Color} surface [#222] - The surface color\n/// @prop {Color} info [#1377d5] - The info color\n/// @prop {Color} success [#4eb862] - The success color\n/// @prop {Color} warn [#fbb13c] - The warn color\n/// @prop {Color} error [#ff134a] - The error color\n$green-palette: palette(\n    $primary: #09f,\n    $secondary: #72da67,\n    $surface: #222,\n    $info: #1377d5,\n    $success: #4eb862,\n    $warn: #fbb13c,\n    $error: #ff134a,\n);\n\n/// Generates the dark purple palette.\n/// @type Map\n/// @name dark-purple-palette\n/// @prop {Color} primary [#00b4d6] - The primary color\n/// @prop {Color} secondary [#514590] - The secondary color\n/// @prop {Color} gray [#fff] - The gray color\n/// @prop {Color} surface [#333] - The surface color\n/// @prop {Color} info [#1377d5] - The info color\n/// @prop {Color} success [#4eb862] - The success color\n/// @prop {Color} warn [#fbb13c] - The warn color\n/// @prop {Color} error [#ff134a] - The error color\n$purple-palette: palette(\n    $primary: #00b4d6,\n    $secondary: #514590,\n    $surface: #333,\n    $info: #1377d5,\n    $success: #4eb862,\n    $warn: #fbb13c,\n    $error: #ff134a,\n);\n","////\n/// @group themes\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n@use '../base';\n\n// Used to configure color accessibility for charts\n@use 'igniteui-theming/sass/color/functions' as color;\n\n// Common components\n@use '../components/_common/igx-control';\n@use '../components/_common/igx-display-container' as display-container;\n@use '../components/_common/igx-drag' as drag;\n@use '../components/_common/igx-vhelper' as vhelper;\n@use '../components/ripple/ripple-component' as ripple;\n\n// Other components\n@use '../components/action-strip/action-strip-component' as action-strip;\n@use '../components/avatar/avatar-component' as avatar;\n@use '../components/badge/badge-component' as badge;\n@use '../components/bottom-nav/bottom-nav-component' as bottom-nav;\n@use '../components/button/button-component' as button;\n@use '../components/divider/divider-component' as divider;\n@use '../components/button-group/button-group-component' as button-group;\n@use '../components/banner/banner-component' as banner;\n@use '../components/calendar/calendar-component' as calendar;\n@use '../components/card/card-component' as card;\n@use '../components/carousel/carousel-component' as carousel;\n@use '../components/checkbox/checkbox-component' as checkbox;\n@use '../components/chip/chip-component' as chip;\n@use '../components/column-actions/column-actions-component' as column-actions;\n@use '../components/combo/combo-component' as combo;\n@use '../components/select/select-component' as select;\n@use '../components/charts/category-chart-component' as category-chart;\n@use '../components/charts/data-chart-component' as data-chart;\n@use '../components/charts/doughnut-chart-component' as doughnut-chart;\n@use '../components/charts/financial-chart-component' as financial-chart;\n@use '../components/charts/funnel-chart-component' as funnel-chart;\n@use '../components/charts/gauge-component' as gauge;\n@use '../components/charts/geo-map-component' as geo-map;\n@use '../components/charts/graph-component' as graph;\n@use '../components/charts/pie-chart-component' as pie-chart;\n@use '../components/charts/shape-chart-component' as shape-chart;\n@use '../components/charts/sparkline-component' as sparkline;\n@use '../components/date-picker/date-picker-component' as date-picker;\n@use '../components/date-range-picker/date-range-picker-component' as date-range-picker;\n@use '../components/dialog/dialog-component' as dialog;\n@use '../components/dock-manager/dock-manager-component' as dock-manager;\n@use '../components/rating/rating-component' as rating;\n@use '../components/drop-down/drop-down-component' as drop-down;\n@use '../components/expansion-panel/expansion-panel-component' as expansion-panel;\n@use '../components/grid/grid-component' as grid;\n@use '../components/grid/pivot-data-selector-component' as pivot-data-selector;\n@use '../components/grid-summary/grid-summary-component' as grid-summary;\n@use '../components/grid-toolbar/grid-toolbar-component' as grid-toolbar;\n@use '../components/highlight/highlight-component' as highlight;\n@use '../components/icon/icon-component' as icon;\n@use '../components/input/input-group-component' as input-group;\n@use '../components/label/label-component' as label;\n@use '../components/list/list-component' as list;\n@use '../components/navbar/navbar-component' as navbar;\n@use '../components/navdrawer/navdrawer-component' as navdrawer;\n@use '../components/overlay/overlay-component' as overlay;\n@use '../components/paginator/paginator-component' as paginator;\n@use '../components/progress/progress-component' as progress;\n@use '../components/radio/radio-component' as radio;\n@use '../components/query-builder/query-builder-component' as query-builder;\n@use '../components/scrollbar/scrollbar-component' as scrollbar;\n@use '../components/slider/slider-component' as slider;\n@use '../components/splitter/splitter-component' as splitter;\n@use '../components/snackbar/snackbar-component' as snackbar;\n@use '../components/switch/switch-component' as switch;\n@use '../components/stepper/stepper-component' as stepper;\n@use '../components/tabs/tabs-component' as tabs;\n@use '../components/toast/toast-component' as toast;\n@use '../components/tooltip/tooltip-component' as tooltip;\n@use '../components/time-picker/time-picker-component' as time-picker;\n@use '../components/tree/tree-component' as tree;\n@use '../components/watermark/watermark-component' as watermark;\n@use '../print';\n\n/// @param {boolean} $print-layout [true] - Activates the printing styles of the components.\n/// @param {boolean} $enhanced-accesibility [false] - Switches component colors and other properties to more accessible values.\n@mixin core(\n    $print-layout: true,\n    $enhanced-accessibility: false\n) {\n    @include color.configure-colors($enhanced-accessibility);\n\n    // Angular hack for binding to [hidden] property\n    // not working\n    [hidden] {\n        display: none !important;\n    }\n\n    // Common styles\n    @include vhelper.component();\n    @include display-container.component();\n    @include drag.component();\n\n    // Includes the base for each theme.\n    [class^='igx-'],\n    [class^='ig-'] {\n        &,\n        *,\n        *::before,\n        *::after {\n            box-sizing: border-box;\n        }\n    }\n\n    // Component styles\n    @include ripple.component();\n    @include action-strip.component();\n    @include avatar.component();\n    @include badge.component();\n    @include banner.component();\n    @include bottom-nav.component();\n    @include button.component();\n    @include button-group.component();\n    @include divider.component();\n    @include calendar.component();\n    @include card.component();\n    @include carousel.component();\n    @include checkbox.component();\n    @include chip.component();\n    @include column-actions.component();\n    @include combo.component();\n    @include select.component();\n    @include category-chart.component();\n    @include data-chart.component();\n    @include doughnut-chart.component();\n    @include financial-chart.component();\n    @include funnel-chart.component();\n    @include gauge.component();\n    @include geo-map.component();\n    @include graph.component();\n    @include pie-chart.component();\n    @include shape-chart.component();\n    @include sparkline.component();\n    @include date-picker.component();\n    @include date-range-picker.component();\n    @include dialog.component();\n    @include dock-manager.component();\n    @include rating.component();\n    @include drop-down.component();\n    @include expansion-panel.component();\n    @include grid.component();\n    @include grid-summary.component();\n    @include grid-toolbar.component();\n    @include pivot-data-selector.component();\n    @include highlight.component();\n    @include icon.component();\n    @include input-group.component();\n    @include label.component();\n    @include list.component();\n    @include navbar.component();\n    @include navdrawer.component();\n    @include overlay.component();\n    @include paginator.component();\n    @include progress.component();\n    @include radio.component();\n    @include query-builder.component();\n    @include scrollbar.component();\n    @include slider.component();\n    @include splitter.component();\n    @include snackbar.component();\n    @include switch.component();\n    @include stepper.component();\n    @include tabs.component();\n    @include toast.component();\n    @include tooltip.component();\n    @include time-picker.component();\n    @include tree.component();\n    @include watermark.component();\n\n    // Build the component dependecy-tree\n    @include base.dependecy-tree(base.$components);\n\n    @if $print-layout == true {\n        @include print.layout();\n    }\n}\n\n","@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use 'sass:string';\n@use 'sass:list';\n@use '../utils/meta' as *;\n@use '../typography/functions' as *;\n\n////\n/// @package theming\n////\n\n/// A list of ignored keywords to be excluded when generating CSS variables for a theme.\n/// @access private\n$ignored-keys: ('name', 'palette', 'variant', 'selector', 'type', '_meta');\n\n/// Parses a map of key value pairs from component themes to css variables.\n/// @access private\n/// @param {Map} $theme - The component theme to be used to generate css variables.\n/// @param {String} $name - The CSS variables name\n/// @param {Map} $ignored [$ignored-keys] - A list of ignored keywords to be excluded when generating CSS variables\n/// @example scss Convert theme colors to CSS variables.\n///   $theme: digest-schema((background: color(primary, 500), foreground: contrast-color(color, 500));\n///   :root {\n///     @include css-vars-from-theme($theme);\n///   }\n/// @require {mixin} css-vars\n@mixin css-vars-from-theme($theme, $name, $ignored: $ignored-keys) {\n    $themes: map.get($theme, 'themes');\n    $prefix: map.get($theme, 'prefix');\n\n    // This is here only because the button theme consists of 4 nested themes.\n    @if $themes and meta.type-of($themes) == 'map' {\n        @each $theme in $themes {\n            @include css-vars(list.nth($theme, 2));\n        }\n    }\n\n    @each $key, $value in map.remove($theme, $ignored...) {\n        $variable: if($prefix, #{$prefix}-#{$key}, #{$key});\n\n        @if meta.type-of($value) != 'map' and $key != 'prefix' {\n            --#{$variable}: var(--#{$name}-#{$key}, #{$value});\n        }\n    }\n}\n\n/// Add theme colors as CSS variables to a given scope.\n/// @access public\n/// @group themes\n/// @param {map} $theme - The component theme to be used.\n/// @param {map} $scope [null] - The CSS variables scope to be used. (optional)\n/// @requires {mixin} css-vars-from-theme\n/// @example scss Convert grid theme colors to css variables\n///   $my-grid-theme grid-theme(\n///     $header-background: red,\n///     $content-background: #222\n///   );\n///   .my-grid {\n///     @include css-vars($my-grid-theme);\n///   }\n@mixin css-vars($theme, $scope: null) {\n    $s: map.get($theme, 'selector');\n    $n: map.get($theme, 'name');\n    $name: if($scope, $scope, $s or $n);\n\n    @if not($n) or string.length($n) == 0 {\n        @error 'Theme should have a non-null or empty name property. Example: theme: (name: my-theme)';\n    }\n\n    @if is-root() {\n        #{$name} {\n            @include css-vars-from-theme($theme, $n);\n        }\n    } @else {\n        &,\n        #{$name} {\n            @include css-vars-from-theme($theme, $n);\n        }\n    }\n}\n\n/// Adds border-radius style with a value between an upper and a lower bound.\n/// @access private\n/// @param {Number} $radius - The preferred value.\n/// @param {Number} $min [rem(0)] - The minimum value.\n/// @param {Number} $max [$radius] - The maximum allowed value.\n/// @example scss\n///    @include border-radius(4px);\n@mixin border-radius($radius, $min: #{rem(0)}, $max: $radius) {\n    $factor: math.div($radius, $max);\n\n    border-radius: clamp(#{$min}, #{calc(var(--ig-radius-factor, #{$factor}) * #{$max})}, #{$max});\n}\n\n/// Truncates text to a specific number of lines.\n/// @access public\n/// @group utilities\n/// @param {number|string} $lines - The number of lines to show\n/// @param {Boolean} $inline - Sets whether an element displays inline-box or box\n/// @param {Boolean} $vertical - Sets whether an element lays out its contents horizontally or vertically\n/// @example scss Truncates text after the fourth line\n///    @include line-clamp(4, true, true);\n@mixin line-clamp($lines, $inline, $vertical) {\n    display: if($inline, -webkit-inline-box, -webkit-box);\n    -webkit-line-clamp: if($lines, $lines, initial);\n    -webkit-box-orient: if($vertical, vertical, initial);\n    overflow: hidden;\n}\n\n/// Applies text-overflow ellipsis to e text element.\n/// This won't work on display flex elements.\n/// @group utilities\n/// @access public\n/// @example scss\n///   .my-class {\n///     @include ellipsis();\n///   }\n@mixin ellipsis() {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n}\n\n/// Hides the element from the DOM.\n/// @group utilities\n/// @access public\n/// @example scss - Sample usage\n///   input[type=\"checkbox\"] {\n///     @include hide-default();\n///   }\n@mixin hide-default {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    margin: -1px;\n    border: none;\n    clip: rect(0, 0, 0, 0);\n    outline: 0;\n    pointer-events: none;\n    overflow: hidden;\n    appearance: none;\n}\n\n/// Adds the required CSS properties so that the scope can react to size changes.\n/// @group themes\n/// @access public\n/// @example scss - Sample usage\n///   .my-component {\n///     @include sizable();\n///   }\n@mixin sizable() {\n    --is-large: clamp(0, (var(--component-size, 1) + 1) - var(--ig-size-large, 3), 1);\n    --is-medium: min(\n        clamp(0, (var(--component-size, 1) + 1) - var(--ig-size-medium, 2), 1),\n        clamp(0, var(--ig-size-large, 3) - var(--component-size, 1), 1)\n    );\n    --is-small: clamp(0, var(--ig-size-medium) - var(--component-size, 1), 1);\n}\n","@use '../../base' as *;\n@use 'sass:string';\n\n/// @access private\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n@mixin component {\n    @include b(igx-icon) {\n        $this: bem--selector-to-string(&);\n        @include register-component(\n            $name: string.slice($this, 2, -1),\n            $deps: ()\n        );\n\n        @extend %igx-icon-display !optional;\n\n        @include m(inactive) {\n            @extend %igx-icon--inactive !optional;\n        }\n\n        @include m(success) {\n            @extend %igx-icon--success !optional;\n        }\n\n        @include m(error) {\n            @extend %igx-icon--error !optional;\n        }\n    }\n\n    @include b(igx-svg-container) {\n        visibility: hidden;\n        width: 0;\n        height: 0;\n        font-size: 0;\n        overflow: hidden;\n    }\n}\n","/// @access private\n/// Defines printing styles for all components in the library.\n@mixin layout {\n    @media print {\n        html,\n        body,\n        app-root {\n            min-height: 100vh;\n            min-width: 100vw;\n            margin: 0;\n        }\n\n        app-root {\n            display: block;\n        }\n\n        * {\n            -webkit-print-color-adjust: exact;\n            // Fix shadows if you print to PDF using chrome START\n            -webkit-filter: opacity(1);\n            filter: opacity(1);\n            // Fix shadows if you print to PDF using chrome END\n            print-color-adjust: exact;\n            text-shadow: none !important;\n        }\n\n        a[href^='http']::after {\n            content: '[' attr(href) ']';\n            color: blue;\n        }\n\n        .igx-no-print {\n            display: none !important;\n        }\n\n        // Forcing Grayscale Printing\n        .igx-bw-print {\n            // CSS3 filter, at the moment Webkit only. Prefix it for future implementations\n            -webkit-filter: grayscale(100%);\n            filter: grayscale(100%); /* future-proof */\n        }\n\n        igx-circular-bar,\n        igx-linear-bar,\n        .igx-carousel__indicators,\n        .igx-carousel__arrow--prev,\n        .igx-carousel__arrow--next,\n        .igx-ripple,\n        .igx-grid__tbody-scrollbar,\n        igx-switch__ripple,\n        igx-virtual-helper {\n            display: none !important;\n        }\n\n        igx-grid {\n            .igx-grid-th__title,\n            .igx-grid__td-text {\n                white-space: unset !important;\n                text-overflow: initial !important;\n                overflow: visible !important;\n            }\n        }\n    }\n}\n","@use 'sass:list';\n@use 'sass:meta';\n@use 'sass:string';\n@use '../schemas' as *;\n@use '../../base' as *;\n@use '../../components' as *;\n@use 'igniteui-theming/sass/color' as *;\n@use 'igniteui-theming/sass/elevations' as *;\n@use 'igniteui-theming/sass/elevations/presets' as elevations;\n@use 'igniteui-theming/sass/utils' as *;\n@use 'igniteui-theming/sass/themes' as *;\n@use 'igniteui-theming/sass/themes/charts' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// Default noop handler for theme map transforms\n/// @access private\n@function theme-noop($arg) { @return $arg; }\n\n/// Generates an Ignite UI for Angular global theme.\n/// @param {Map} $palette - An palette to be used by the global theme.\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the components.\n/// @param {List} $exclude [( )] - A list of igx components to be excluded from the global theme styles.\n/// @param {Number} $roundness [null] - Sets the global roundness factor (the value can be any decimal fraction between 0 and 1) for all components.\n/// @param {Boolean} $elevation [true] - Turns on/off elevations for all components in the theme.\n/// @param {Map} $elevations [$elevations] - The elevation map to be used by all component themes.\n/// @requires $light-material-schema\n/// @requires {function} is-component\n/// @requires {function} is-used\n@mixin theme(\n    $palette,\n    $schema: $light-material-schema,\n    $exclude: (),\n    $roundness: null,\n    $elevation: true,\n    $elevations: elevations.$material-elevations,\n) {\n    @include theme-internal(\n        $palette: $palette,\n        $schema: $schema,\n        $exclude: $exclude,\n        $roundness: $roundness,\n        $elevation: $elevation,\n        $elevations: $elevations\n    )\n}\n\n/// Generates an Ignite UI for Angular global theme.\n/// @access private\n/// @param {Map} $palette - An palette to be used by the global theme.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the components.\n/// @param {List} $exclude [( )] - A list of igx components to be excluded from the global theme styles.\n/// @param {Number} $roundness [null] - Sets the global roundness factor (the value can be any decimal fraction between 0 and 1) for all components.\n/// @param {Boolean} $elevation [true] - Turns on/off elevations for all components in the theme.\n/// @param {Map} $elevations [$elevations] - The elevation map to be used by all component themes.\n/// @requires $light-material-schema\n/// @requires {function} is-component\n/// @requires {function} is-used\n@mixin theme-internal(\n    $palette,\n    $schema: $light-material-schema,\n    $exclude: (),\n    $roundness: null,\n    $elevation: true,\n    $elevations: elevations.$material-elevations,\n    $theme-handler: meta.get-function('theme-noop'),\n) {\n    // Stores all excluded component styles\n    $excluded: ();\n    $scope: if(is-root(), ':root', '&');\n\n    #{$scope} {\n        --ig-size-small: 1;\n        --ig-size-medium: 2;\n        --ig-size-large: 3;\n\n        --ig-spacing-small: 1;\n        --ig-spacing-medium: 1;\n        --ig-spacing-large: 1;\n\n        --ig-spacing-inline-small: 1;\n        --ig-spacing-inline-medium: 1;\n        --ig-spacing-inline-large: 1;\n\n        --ig-spacing-block-small: 1;\n        --ig-spacing-block-medium: 1;\n        --ig-spacing-block-large: 1;\n    }\n\n    @if not(list.index($exclude, 'palette')) {\n        @include palette($palette);\n    }\n\n    @if not(list.index($exclude, 'elevations')) {\n        @include elevations($elevations);\n    }\n\n    @if $elevation == false {\n        #{$scope} {\n            --ig-elevation-factor: 0;\n        }\n    }\n\n    @if $roundness {\n        #{$scope} {\n            --ig-radius-factor: #{$roundness};\n        }\n    }\n\n    @if list.length($exclude) > 0 {\n        $excluded: is-component($exclude);\n    }\n\n    @if is-used('igx-ripple', $exclude) {\n        $ripple-theme-map: ripple-theme(\n            $schema: $schema,\n        );\n        $ripple-theme-map: meta.call($theme-handler, $ripple-theme-map);\n        @include ripple($ripple-theme-map);\n    }\n\n    @if is-used('igx-avatar', $exclude) {\n        $avatar-theme-map: avatar-theme(\n            $schema: $schema,\n        );\n        $avatar-theme-map: meta.call($theme-handler, $avatar-theme-map);\n        @include avatar($avatar-theme-map);\n    }\n\n    @if is-used('igx-action-strip', $exclude) {\n        $action-strip-theme-map: action-strip-theme(\n            $schema: $schema,\n        );\n        $action-strip-theme-map: meta.call($theme-handler, $action-strip-theme-map);\n        @include action-strip($action-strip-theme-map);\n    }\n\n    @if is-used('igx-badge', $exclude) {\n        $badge-theme-map: badge-theme(\n            $schema: $schema,\n        );\n        $badge-theme-map: meta.call($theme-handler, $badge-theme-map);\n        @include badge($badge-theme-map);\n    }\n\n    @if is-used('igx-bottom-nav', $exclude) {\n        $bottom-nav-theme-map: bottom-nav-theme(\n            $schema: $schema,\n        );\n        $bottom-nav-theme-map: meta.call($theme-handler, $bottom-nav-theme-map);\n        @include bottom-nav($bottom-nav-theme-map);\n    }\n\n    @if is-used('igx-button', $exclude) {\n        $button-theme-map: button-theme(\n            $schema: $schema,\n        );\n        $button-theme-map: meta.call($theme-handler, $button-theme-map);\n        @include button($button-theme-map);\n    }\n\n    @if is-used('igx-button-group', $exclude) {\n        $button-group-theme-map: button-group-theme(\n            $schema: $schema,\n        );\n        $button-group-theme-map: meta.call($theme-handler, $button-group-theme-map);\n        @include button-group($button-group-theme-map);\n    }\n\n    @if is-used('igx-banner', $exclude) {\n        $banner-theme-map: banner-theme(\n            $schema: $schema,\n        );\n        $banner-theme-map: meta.call($theme-handler, $banner-theme-map);\n        @include banner($banner-theme-map);\n    }\n\n    @if is-used('igx-calendar', $exclude) {\n        $calendar-theme-map: calendar-theme(\n            $schema: $schema,\n        );\n        $calendar-theme-map: meta.call($theme-handler, $calendar-theme-map);\n        @include calendar($calendar-theme-map);\n    }\n\n    @if is-used('igx-card', $exclude) {\n        $card-theme-map: card-theme(\n            $schema: $schema,\n        );\n        $card-theme-map: meta.call($theme-handler, $card-theme-map);\n        @include card($card-theme-map);\n    }\n\n    @if is-used('igx-carousel', $exclude) {\n        $carousel-theme-map: carousel-theme(\n            $schema: $schema,\n        );\n        $carousel-theme-map: meta.call($theme-handler, $carousel-theme-map);\n        @include carousel($carousel-theme-map);\n    }\n\n    @if is-used('igx-splitter', $exclude) {\n        $splitter-theme-map: splitter-theme(\n            $schema: $schema,\n        );\n        $splitter-theme-map: meta.call($theme-handler, $splitter-theme-map);\n        @include splitter($splitter-theme-map);\n    }\n\n    @if is-used('data-chart', $exclude) {\n        $data-chart-theme-map: data-chart-theme(\n            $schema: $schema,\n        );\n        $data-chart-theme-map: meta.call($theme-handler, $data-chart-theme-map);\n        @include  css-vars($data-chart-theme-map);\n    }\n\n    @if is-used('doughnut-chart', $exclude) {\n        $doughnut-chart-theme-map: doughnut-chart-theme(\n            $schema: $schema,\n        );\n        $doughnut-chart-theme-map: meta.call($theme-handler, $doughnut-chart-theme-map);\n        @include  css-vars($doughnut-chart-theme-map);\n    }\n\n    @if is-used('linear-gauge', $exclude) {\n        $linear-gauge-theme-map: linear-gauge-theme(\n            $schema: $schema,\n        );\n        $linear-gauge-theme-map: meta.call($theme-handler, $linear-gauge-theme-map);\n        @include  css-vars($linear-gauge-theme-map);\n    }\n\n    @if is-used('radial-gauge', $exclude) {\n        $radial-gauge-theme-map: radial-gauge-theme(\n            $schema: $schema,\n        );\n        $radial-gauge-theme-map: meta.call($theme-handler, $radial-gauge-theme-map);\n        @include  css-vars($radial-gauge-theme-map);\n    }\n\n    @if is-used('financial-chart', $exclude) {\n        $financial-chart-theme-map: financial-chart-theme(\n            $schema: $schema,\n        );\n        $financial-chart-theme-map: meta.call($theme-handler, $financial-chart-theme-map);\n        @include  css-vars($financial-chart-theme-map);\n    }\n\n    @if is-used('bullet-graph', $exclude) {\n        $bullet-graph-theme-map: bullet-graph-theme(\n            $schema: $schema,\n        );\n        $bullet-graph-theme-map: meta.call($theme-handler, $bullet-graph-theme-map);\n        @include  css-vars($bullet-graph-theme-map);\n    }\n\n    @if is-used('category-chart', $exclude) {\n        $category-chart-theme-map: category-chart-theme(\n            $schema: $schema,\n        );\n        $category-chart-theme-map: meta.call($theme-handler, $category-chart-theme-map);\n        @include  css-vars($category-chart-theme-map);\n    }\n\n    @if is-used('geo-map', $exclude) {\n        $geo-map-theme-map: geo-map-theme(\n            $schema: $schema,\n        );\n        $geo-map-theme-map: meta.call($theme-handler, $geo-map-theme-map);\n        @include  css-vars($geo-map-theme-map);\n    }\n\n    @if is-used('pie-chart', $exclude) {\n        $pie-chart-theme-map: pie-chart-theme(\n            $schema: $schema,\n        );\n        $pie-chart-theme-map: meta.call($theme-handler, $pie-chart-theme-map);\n        @include  css-vars($pie-chart-theme-map);\n    }\n\n    @if is-used('sparkline', $exclude) {\n        $sparkline-theme-map: sparkline-theme(\n            $schema: $schema,\n        );\n        $sparkline-theme-map: meta.call($theme-handler, $sparkline-theme-map);\n        @include  css-vars($sparkline-theme-map);\n    }\n\n    @if is-used('funnel-chart', $exclude) {\n        $funnel-chart-theme-map: funnel-chart-theme(\n            $schema: $schema,\n        );\n        $funnel-chart-theme-map: meta.call($theme-handler, $funnel-chart-theme-map);\n        @include  css-vars($funnel-chart-theme-map);\n    }\n\n    @if is-used('shape-chart', $exclude) {\n        $shape-chart-theme-map: shape-chart-theme(\n            $schema: $schema,\n        );\n        $shape-chart-theme-map: meta.call($theme-handler, $shape-chart-theme-map);\n        @include  css-vars($shape-chart-theme-map);\n    }\n\n    @if is-used('igx-checkbox', $exclude) {\n        $checkbox-theme-map: checkbox-theme(\n            $schema: $schema,\n        );\n        $checkbox-theme-map: meta.call($theme-handler, $checkbox-theme-map);\n        @include checkbox($checkbox-theme-map);\n    }\n\n    @if is-used('igx-chip', $exclude) {\n        $chip-theme-map: chip-theme(\n            $schema: $schema,\n        );\n        $chip-theme-map: meta.call($theme-handler, $chip-theme-map);\n        @include chip($chip-theme-map);\n    }\n\n    @if is-used('igx-column-actions', $exclude) {\n        $column-actions-theme-map: column-actions-theme(\n            $schema: $schema,\n        );\n        $column-actions-theme-map: meta.call($theme-handler, $column-actions-theme-map);\n        @include column-actions($column-actions-theme-map);\n    }\n\n    @if is-used('igx-combo', $exclude) {\n        $combo-theme-map: combo-theme(\n            $schema: $schema,\n        );\n        $combo-theme-map: meta.call($theme-handler, $combo-theme-map);\n        @include combo($combo-theme-map);\n    }\n\n    @if is-used('igx-select', $exclude) {\n        $select-theme-map: select-theme(\n            $schema: $schema,\n        );\n        $select-theme-map: meta.call($theme-handler, $select-theme-map);\n        @include select($select-theme-map);\n    }\n\n    @if is-used('igx-date-picker', $exclude) {\n        $calendar-theme-map: calendar-theme(\n            $schema: $schema,\n        );\n        $calendar-theme-map: meta.call($theme-handler, $calendar-theme-map);\n        @include date-picker($calendar-theme-map);\n    }\n\n    @if is-used('igx-date-range-picker', $exclude) {\n        $date-range-picker-theme-map: date-range-picker-theme(\n            $schema: $schema,\n        );\n        $date-range-picker-theme-map: meta.call($theme-handler, $date-range-picker-theme-map);\n        @include date-range-picker($date-range-picker-theme-map);\n    }\n\n    @if is-used('igx-dialog', $exclude) {\n        $dialog-theme-map: dialog-theme(\n            $schema: $schema,\n        );\n        $dialog-theme-map: meta.call($theme-handler, $dialog-theme-map);\n        @include dialog($dialog-theme-map);\n    }\n\n    @if is-used('igx-divider', $exclude) {\n        $divider-theme-map: divider-theme(\n            $schema: $schema,\n        );\n        $divider-theme-map: meta.call($theme-handler, $divider-theme-map);\n        @include divider($divider-theme-map);\n    }\n\n    @if is-used('igc-dockmanager', $exclude) {\n        $dock-manager-theme-map: dock-manager-theme(\n            $schema: $schema,\n        );\n        $dock-manager-theme-map: meta.call($theme-handler, $dock-manager-theme-map);\n        @include dock-manager($dock-manager-theme-map);\n    }\n\n    @if is-used('igc-rating', $exclude) {\n        $rating-theme-map: rating-theme(\n            $schema: $schema,\n        );\n        $rating-theme-map: meta.call($theme-handler, $rating-theme-map);\n        @include rating($rating-theme-map);\n    }\n\n    @if is-used('igx-drop-down', $exclude) {\n        $drop-down-theme-map: drop-down-theme(\n            $schema: $schema,\n        );\n        $drop-down-theme-map: meta.call($theme-handler, $drop-down-theme-map);\n        @include drop-down($drop-down-theme-map);\n    }\n\n    @if is-used('igx-expansion-panel', $exclude) {\n        $expansion-panel-theme-map: expansion-panel-theme(\n            $schema: $schema,\n        );\n        $expansion-panel-theme-map: meta.call($theme-handler, $expansion-panel-theme-map);\n        @include expansion-panel($expansion-panel-theme-map);\n    }\n\n    @if is-used('igx-grid', $exclude) {\n        $grid-theme-map: grid-theme(\n            $schema: $schema,\n        );\n        $grid-theme-map: meta.call($theme-handler, $grid-theme-map);\n        @include grid($grid-theme-map);\n    }\n\n    @if is-used('igx-grid-summary', $exclude) {\n        $grid-summary-theme-map: grid-summary-theme(\n            $schema: $schema,\n        );\n        $grid-summary-theme-map: meta.call($theme-handler, $grid-summary-theme-map);\n        @include grid-summary($grid-summary-theme-map);\n    }\n\n    @if is-used('igx-grid-toolbar', $exclude) {\n        $grid-toolbar-theme-map: grid-toolbar-theme(\n            $schema: $schema,\n        );\n        $grid-toolbar-theme-map: meta.call($theme-handler, $grid-toolbar-theme-map);\n        @include grid-toolbar($grid-toolbar-theme-map);\n    }\n\n    @if is-used('igx-pivot-data-selector', $exclude) {\n        $pivot-data-selector-theme-map: pivot-data-selector-theme(\n            $schema: $schema,\n        );\n        $pivot-data-selector-theme-map: meta.call($theme-handler, $pivot-data-selector-theme-map);\n        @include pivot-data-selector($pivot-data-selector-theme-map);\n    }\n\n    @if is-used('igx-highlight', $exclude) {\n        $highlight-theme-map: highlight-theme(\n            $schema: $schema,\n        );\n        $highlight-theme-map: meta.call($theme-handler, $highlight-theme-map);\n        @include highlight($highlight-theme-map);\n    }\n\n    @if is-used('igx-icon', $exclude) {\n        $icon-theme-map: icon-theme(\n            $schema: $schema,\n        );\n        $icon-theme-map: meta.call($theme-handler, $icon-theme-map);\n        @include icon($icon-theme-map);\n    }\n\n    @if is-used('igx-input-group', $exclude) {\n        $input-group-theme-map: input-group-theme(\n            $schema: $schema,\n        );\n        $input-group-theme-map: meta.call($theme-handler, $input-group-theme-map);\n        @include input-group($input-group-theme-map);\n    }\n\n    @if is-used('igx-list', $exclude) {\n        $list-theme-map: list-theme(\n            $schema: $schema,\n        );\n        $list-theme-map: meta.call($theme-handler, $list-theme-map);\n        @include list($list-theme-map);\n    }\n\n    @if is-used('igx-label', $exclude) {\n        $label-theme-map: label-theme(\n            $schema: $schema,\n        );\n        $label-theme-map: meta.call($theme-handler, $label-theme-map);\n        @include label($label-theme-map);\n    }\n\n    @if is-used('igx-navbar', $exclude) {\n        $navbar-theme-map: navbar-theme(\n            $schema: $schema,\n        );\n        $navbar-theme-map: meta.call($theme-handler, $navbar-theme-map);\n        @include navbar($navbar-theme-map);\n    }\n\n    @if is-used('igx-nav-drawer', $exclude) {\n        $navdrawer-theme-map: navdrawer-theme(\n            $schema: $schema,\n        );\n        $navdrawer-theme-map: meta.call($theme-handler, $navdrawer-theme-map);\n        @include navdrawer($navdrawer-theme-map);\n    }\n\n    @if is-used('igx-overlay', $exclude) {\n        $overlay-theme-map: overlay-theme(\n            $schema: $schema,\n        );\n        $overlay-theme-map: meta.call($theme-handler, $overlay-theme-map);\n        @include overlay($overlay-theme-map);\n    }\n\n    @if is-used('igx-paginator', $exclude) {\n        $paginator-theme-map: paginator-theme(\n            $schema: $schema,\n        );\n        $paginator-theme-map: meta.call($theme-handler, $paginator-theme-map);\n        @include paginator($paginator-theme-map);\n    }\n\n    @if is-used('igx-circular-bar', $exclude) {\n        $progress-circular-theme-map: progress-circular-theme(\n            $schema: $schema,\n        );\n        $progress-circular-theme-map: meta.call($theme-handler, $progress-circular-theme-map);\n        @include progress-circular($progress-circular-theme-map);\n    }\n\n    @if is-used('igx-linear-bar', $exclude) {\n        $progress-linear-theme-map: progress-linear-theme(\n            $schema: $schema,\n        );\n        $progress-linear-theme-map: meta.call($theme-handler, $progress-linear-theme-map);\n        @include progress-linear($progress-linear-theme-map);\n    }\n\n    @if is-used('igx-radio', $exclude) {\n        $radio-theme-map: radio-theme(\n            $schema: $schema,\n        );\n        $radio-theme-map: meta.call($theme-handler, $radio-theme-map);\n        @include radio($radio-theme-map);\n    }\n\n    @if is-used('igx-query-builder', $exclude) {\n        $query-builder-theme-map: query-builder-theme(\n            $schema: $schema,\n        );\n        $query-builder-theme-map: meta.call($theme-handler, $query-builder-theme-map);\n        @include query-builder($query-builder-theme-map);\n    }\n\n    @if is-used('ig-scrollbar', $exclude) {\n        $scrollbar-theme-map: scrollbar-theme(\n            $schema: $schema,\n        );\n        $scrollbar-theme-map: meta.call($theme-handler, $scrollbar-theme-map);\n        @include scrollbar($scrollbar-theme-map);\n    }\n\n    @if is-used('igx-slider', $exclude) {\n        $slider-theme-map: slider-theme(\n            $schema: $schema,\n        );\n        $slider-theme-map: meta.call($theme-handler, $slider-theme-map);\n        @include slider($slider-theme-map);\n    }\n\n    @if is-used('igx-snackbar', $exclude) {\n        $snackbar-theme-map: snackbar-theme(\n            $schema: $schema,\n        );\n        $snackbar-theme-map: meta.call($theme-handler, $snackbar-theme-map);\n        @include snackbar($snackbar-theme-map);\n    }\n\n    @if is-used('igx-switch', $exclude) {\n        $switch-theme-map: switch-theme(\n            $schema: $schema,\n        );\n        $switch-theme-map: meta.call($theme-handler, $switch-theme-map);\n        @include switch($switch-theme-map);\n    }\n\n    @if is-used('igx-tabs', $exclude) {\n        $tabs-theme-map: tabs-theme(\n            $schema: $schema,\n        );\n        $tabs-theme-map: meta.call($theme-handler, $tabs-theme-map);\n        @include tabs($tabs-theme-map);\n    }\n\n    @if is-used('igx-stepper', $exclude) {\n        $stepper-theme-map: stepper-theme(\n            $schema: $schema,\n        );\n        $stepper-theme-map: meta.call($theme-handler, $stepper-theme-map);\n        @include stepper($stepper-theme-map);\n    }\n\n    @if is-used('igx-toast', $exclude) {\n        $toast-theme-map: toast-theme(\n            $schema: $schema,\n        );\n        $toast-theme-map: meta.call($theme-handler, $toast-theme-map);\n        @include toast($toast-theme-map);\n    }\n\n    @if is-used('igx-tooltip', $exclude) {\n        $tooltip-theme-map: tooltip-theme(\n            $schema: $schema,\n        );\n        $tooltip-theme-map: meta.call($theme-handler, $tooltip-theme-map);\n        @include tooltip($tooltip-theme-map);\n    }\n\n    @if is-used('igx-time-picker', $exclude) {\n        $time-picker-theme-map: time-picker-theme(\n            $schema: $schema,\n        );\n        $time-picker-theme-map: meta.call($theme-handler, $time-picker-theme-map);\n        @include time-picker($time-picker-theme-map);\n    }\n\n    @if is-used('igx-tree', $exclude) {\n        $tree-theme-map: tree-theme(\n            $schema: $schema,\n        );\n        $tree-theme-map: meta.call($theme-handler, $tree-theme-map);\n        @include tree($tree-theme-map);\n    }\n\n    @if is-used('igx-watermark', $exclude) {\n        $watermark-theme-map: watermark-theme(\n            $schema: $schema,\n        );\n        $watermark-theme-map: meta.call($theme-handler, $watermark-theme-map);\n        @include watermark($watermark-theme-map);\n    }\n\n    @if list.length($dropped-themes) > 0 {\n        @warn string.unquote('You have excluded the following components from the theme: \"#{$dropped-themes}\".');\n    }\n}\n\n/// A wrapper around the theme mixin. Creates a global material theme that can be used with light backgrounds.\n/// @param {Map} $palette - An palette to be used by the global theme.\n/// @param {List} $exclude [( )] - A list of ig components to be excluded from the global theme styles.\n/// @see {mixin} theme\n@mixin light-theme(\n    $palette,\n    $exclude: (),\n    $roundness: null,\n    $elevation: true,\n) {\n    $gray: color($palette, 'gray');\n    $surface: color($palette, 'surface');\n\n    $light-palette: palette(\n        $primary: color($palette, 'primary'),\n        $secondary: color($palette, 'secondary'),\n        $info: color($palette, 'info'),\n        $success: color($palette, 'success'),\n        $warn: color($palette, 'warn'),\n        $error: color($palette, 'error'),\n        $surface: if($surface != #fff, $surface, #fff),\n        $gray: if($gray != #9e9e9e, $gray, #000),\n    );\n\n    @include theme(\n        $palette: $light-palette,\n        $schema: $light-material-schema,\n        $exclude: $exclude,\n        $roundness: $roundness,\n        $elevation: $elevation,\n    );\n}\n\n/// A wrapper around the theme mixin. Creates a global material theme that can be used with dark backgrounds.\n/// @param {Map} $palette - An palette to be used by the global theme.\n/// @param {List} $exclude [( )] - A list of igx components to be excluded from the global theme styles.\n/// @see {mixin} theme\n@mixin dark-theme(\n    $palette,\n    $exclude: (),\n    $roundness: null,\n    $elevation: true,\n) {\n    $gray: color($palette, 'gray');\n    $surface: color($palette, 'surface');\n\n    $dark-palette: palette(\n        $primary: color($palette, 'primary'),\n        $secondary: color($palette, 'secondary'),\n        $info: color($palette, 'info'),\n        $success: color($palette, 'success'),\n        $warn: color($palette, 'warn'),\n        $error: color($palette, 'error'),\n        $surface: if($surface != #fff, $surface, #222),\n        $gray: if($gray != #9e9e9e, $gray, #fff),\n    );\n\n    @include theme(\n        $palette: $dark-palette,\n        $schema: $dark-material-schema,\n        $exclude: $exclude,\n        $roundness: $roundness,\n        $elevation: $elevation,\n    );\n}\n","@use 'sass:map';\n@use 'sass:list';\n@use 'sass:meta';\n@use 'sass:math';\n@use 'sass:color';\n@use 'sass:string';\n@use '../utils/meta' as *;\n\n////\n/// @package theming\n////\n\n// Generates CSS variables for a base color\n// @access private\n@mixin _base($color, $shade, $value) {\n    @if $shade == 500 {\n        $_type: meta.type-of($value);\n\n        @if $_type == 'color' {\n            --ig-#{$color}-h: #{math.round(color.hue($value))};\n            --ig-#{$color}-s: #{math.round(color.saturation($value))};\n            --ig-#{$color}-l: #{math.round(color.lightness($value))};\n            --ig-#{$color}-a: #{color.alpha($value)};\n        }\n\n        // Cover handmade palettes with hsl values for base color\n        @if $_type == 'list' and list.length($value) == 3 {\n            --ig-#{$color}-h: #{list.nth($value, 1)};\n            --ig-#{$color}-s: #{list.nth($value, 2)};\n            --ig-#{$color}-l: #{list.nth($value, 3)};\n            --ig-#{$color}-a: 1;\n        }\n    }\n}\n\n// Generates CSS variables for a shade color\n// @access private\n@mixin _shade($color, $shade, $value, $contrast) {\n    $_shade: meta.type-of($shade) == 'string';\n    $_hsl: if($_shade, string.index($shade, 'hsl'), false);\n    $_contrast: if($_shade, string.index($shade, 'contrast'), false);\n\n    @if $_hsl {\n        $variant: string.slice($shade, 1, string.index($shade, '-hsl') - 1);\n\n        --ig-#{$color}-#{$variant}: #{$value};\n    }\n\n    @if not($_hsl) and not($_contrast) {\n        --ig-#{$color}-#{$shade}: #{$value};\n    }\n\n    @if $_contrast and $contrast {\n        --ig-#{$color}-#{$shade}: #{$value};\n    }\n}\n\n/// Generates CSS variables for a given palette.\n/// @access public\n/// @group Palettes\n/// @param {Map} $palette - The palette used to generate CSS variables.\n/// @param {Boolean} $contrast [true] - Specify if contrast colors should be included.\n/// @example scss Generate css variables for a palette\n///    $palette: palette($primary: red, $secondary: blue, $gray: #000);\n///    @include palette($palette);\n/// @require {function} is-root\n@mixin palette($palette, $contrast: true) {\n    $scope: if(is-root(), ':root', '&');\n\n    #{$scope} {\n        @each $color, $shades in map.remove($palette, '_meta') {\n            @each $shade, $value in $shades {\n                @include _base($color, $shade, $value);\n                @include _shade($color, $shade, $value, $contrast);\n            }\n        }\n    }\n}\n","@use '../utils/meta' as *;\n\n////\n/// @package theming\n/// @group Elevations\n////\n\n/// Generates CSS variables for a given elevations map.\n/// @access public\n/// @param {Map} $elevations - The elevations map to use to generate CSS variables.\n/// @example scss Generate CSS variables for elevations.\n///   $elevations: (\n///       small: box-shadow(0 .125rem .25rem rgba(0 0 0 / 75%)),\n///       medium: box-shadow(0 .25rem .5rem rgba(0 0 0 / 85%)),\n///       large: box-shadow(0 .75rem 1rem rgba(0 0 0 / 95%))\n///   );\n///   :root {\n///       @include elevations($elevations);\n///   }\n/// @require {function} is-root\n@mixin elevations($elevations) {\n    $scope: if(is-root(), ':root', '&');\n\n    #{$scope} {\n        @each $level, $shadow in $elevations {\n            --ig-elevation-#{$level}: #{$shadow};\n        }\n    }\n}\n\n/// Includes box-shadow styles for an elevation by name\n/// @access public\n/// @param {String} $name - The name of the shadow.\n/// @example scss Include a box shadow by its name.\n///   .my-class {\n///     @include elevation(small);\n///   }\n@mixin elevation($name) {\n    box-shadow: var(--ig-elevation-#{$name});\n}\n","@use 'sass:map';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Color} $color [null] - The color of the ripple.\n/// @requires $light-material-schema\n/// @example scss Change the color\n///   $my-ripple-theme: igx-ripple-theme($color: yellow);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-ripple-theme);\n@function ripple-theme(\n    $schema: $light-material-schema,\n    $color: null\n) {\n    $name: 'igx-ripple';\n    $selector: '[igxRipple]';\n\n    $ripple-schema: ();\n\n    @if map.has-key($schema, 'ripple') {\n        $ripple-schema: map.get($schema, 'ripple');\n    } @else {\n        $ripple-schema: $schema;\n    }\n\n    $theme: digest-schema($ripple-schema);\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        color: $color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin ripple($theme) {\n    @include css-vars($theme);\n\n    %igx-ripple-display {\n        display: block;\n        position: absolute;\n        border-radius: border-radius(50%);\n        background: var-get($theme, 'color');\n        pointer-events: none;\n        transform-origin: center;\n        transform: translate3d(0, 0, 0) scale(0);\n        will-change: opacity, transform;\n        opacity: .5;\n        margin: 0 !important;\n        border: none !important;\n    }\n\n    %igx-ripple-wrapper {\n        overflow: hidden;\n    }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:color';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// If only background color is specified, text/icon color\n/// will be assigned automatically to a contrasting color.\n/// Does ___not___ apply for disabled state colors.\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [$elevations] - The elevations (shadows) map to be used.\n/// @param {Color} $background [null] - The background color of the button.\n/// @param {Color} $foreground [null] - The text color of the button.\n/// @param {Color} $hover-background [null] - The hover background color of the button.\n/// @param {Color} $hover-foreground [null] - The hover text color of the button.\n/// @param {Color} $focus-background [null] - The focus background color of the button.\n/// @param {Color} $focus-foreground [null] - The focus text color of the button.\n/// @param {Color} $focus-visible-background [null] - The focus-visible background color of the button.\n/// @param {Color} $focus-visible-foreground [null] - The focus-visible text color of the button.\n/// @param {Color} $active-background [null] - The active background of the button.\n/// @param {Color} $active-foreground [null] - The active text color of the button.\n/// @param {List} $border-radius [null] - The border radius of the button.\n/// @param {Color} $border-color [null] - The border color of the button.\n/// @param {Color} $hover-border-color [null] - The hover border color of the button.\n/// @param {Color} $focus-border-color [null] - The focus border color of the button.\n/// @param {Color} $focus-visible-border-color [null] - The focus-visible border color of the button.\n/// @param {Color} $active-border-color [null] - The active border color of the button.\n/// @param {Color} $shadow-color [null] - The shadow color of the button.\n/// @param {Color} $resting-shadow [null] - The shadow of the button in its idle state.\n/// @param {Color} $hover-shadow [null] - The shadow of the button in its hover state.\n/// @param {Color} $focus-shadow [null] - The shadow of the button in its focus state.\n/// @param {Color} $active-shadow [null] - The shadow of the button in its focus state.\n/// @param {Color} $disabled-background [null] - The disabled background color of the button.\n/// @param {Color} $disabled-foreground [null] - The disabled text color of the button.\n/// @param {Color} $disabled-border-color [null] - The disabled border color of the button.\n///\n/// @requires $light-material-schema\n///\n/// @example scss Change the background and text colors in raised buttons\n///   $my-button-theme: button-theme(\n///     $foreground: white,\n///     $background: black\n///   );\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-button-theme);\n@function button-theme(\n    $schema: $light-material-schema,\n    $elevations: null,\n\n    $background: null,\n    $foreground: null,\n\n    $hover-background: null,\n    $hover-foreground: null,\n\n    $focus-background: null,\n    $focus-foreground: null,\n\n    $focus-visible-background: null,\n    $focus-visible-foreground: null,\n\n    $active-background: null,\n    $active-foreground: null,\n\n    $border-radius: null,\n    $border-color: null,\n    $hover-border-color: null,\n    $focus-border-color: null,\n    $focus-visible-border-color: null,\n    $active-border-color: null,\n\n    $shadow-color: null,\n\n    $resting-shadow: null,\n    $hover-shadow: null,\n    $focus-shadow: null,\n    $active-shadow: null,\n\n    $disabled-background: null,\n    $disabled-foreground: null,\n    $disabled-border-color: null,\n    $size: null,\n) {\n    $name: 'igx-button';\n    $button-schema: ();\n\n    @if map.has-key($schema, 'button') {\n        $button-schema: map.get($schema, 'button');\n    } @else {\n        $button-schema: $schema;\n    }\n\n    $themes: ();\n    $variant: null;\n\n    @each $_name, $_schema in $button-schema {\n        $_resting-shadow: $resting-shadow;\n        $_hover-shadow: $hover-shadow;\n        $_focus-shadow: $focus-shadow;\n        $_active-shadow: $active-shadow;\n        $_border-radius: $border-radius;\n\n        @if not($variant) {\n            $variant: map.get($schema, '_meta', 'theme');\n        }\n\n        @if not($foreground) and $background {\n            $foreground: text-contrast($background);\n        }\n\n        @if not($hover-background) and $background {\n            @if meta.type-of($background) == 'color' {\n                $hover-background: color.scale($background, $lightness: 5%);\n            }\n        }\n\n        @if not($hover-foreground) and $hover-background {\n            @if meta.type-of($hover-background) == 'color' {\n                $hover-foreground: text-contrast($hover-background);\n            }\n        }\n\n        @if not($focus-background) and $background {\n            $focus-background: color.scale($background, $lightness: 5%);\n        }\n\n        @if not($focus-foreground) and $focus-background {\n            $focus-foreground: text-contrast($focus-background);\n        }\n\n        @if not($focus-visible-background) and $focus-background {\n            $focus-visible-background: $focus-background;\n        }\n\n        @if not($focus-visible-foreground) and $focus-foreground {\n            $focus-visible-foreground: $focus-foreground;\n        }\n\n        @if not($focus-visible-border-color) and $focus-border-color {\n            $focus-visible-border-color: $focus-border-color;\n        }\n\n        @if not($_resting-shadow) {\n            $resting-elevation: map.get($_schema, 'resting-elevation');\n            $_resting-shadow: elevation($resting-elevation);\n        }\n\n        @if not($_hover-shadow) {\n            $hover-elevation: map.get($_schema, 'hover-elevation');\n            $_hover-shadow: elevation($hover-elevation);\n        }\n\n        @if not($_focus-shadow) {\n            $focus-elevation: map.get($_schema, 'focus-elevation');\n            $_focus-shadow: elevation($focus-elevation);\n        }\n\n        @if not($_active-shadow) {\n            $active-elevation: map.get($_schema, 'active-elevation');\n            $_active-shadow: elevation($active-elevation);\n        }\n\n        $themes: map.merge($themes, (\n            $_name: extend( digest-schema($_schema), (\n                name: $name,\n                background: $background,\n                foreground: $foreground,\n\n                hover-background: $hover-background,\n                hover-foreground: $hover-foreground,\n\n                focus-background: $focus-background,\n                focus-foreground: $focus-foreground,\n\n                focus-visible-background: $focus-visible-background,\n                focus-visible-foreground: $focus-visible-foreground,\n\n                active-background: $active-background,\n                active-foreground: $active-foreground,\n\n                border-radius: $_border-radius,\n                border-color: $border-color,\n                hover-border-color: $hover-border-color,\n                focus-border-color: $focus-border-color,\n                focus-visible-border-color: $focus-visible-border-color,\n                active-border-color: $active-border-color,\n\n                shadow-color: $shadow-color,\n\n                resting-shadow: $_resting-shadow,\n                hover-shadow: $_hover-shadow,\n                focus-shadow: $_focus-shadow,\n                active-shadow: $_active-shadow,\n\n                disabled-background: $disabled-background,\n                disabled-foreground: $disabled-foreground,\n                disabled-border-color: $disabled-border-color,\n                size: $size,\n            ))\n        ));\n    }\n\n    @return (\n        name: $name,\n        variant: $variant,\n        themes: $themes,\n    );\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin button($theme) {\n    $button-width: rem(88px);\n\n    $variant: map.get($theme, variant);\n\n    $flat-theme: map.get(map.get($theme, 'themes'), 'flat');\n    $outlined-theme: map.get(map.get($theme, 'themes'), 'outlined');\n    $raised-theme: map.get(map.get($theme, 'themes'), 'raised');\n    $fab-theme: map.get(map.get($theme, 'themes'), 'fab');\n    $icon-theme: map.get(map.get($theme, 'themes'), 'icon');\n\n    @include css-vars($flat-theme);\n    @include css-vars($outlined-theme);\n    @include css-vars($raised-theme);\n    @include css-vars($fab-theme);\n    @include css-vars($icon-theme);\n\n    $time: map.get((\n        material: .1s,\n        fluent: .1s,\n        bootstrap: .15s,\n        indigo-design: .15s\n    ), $variant);\n\n    $button-transition: color $time ease-in-out,\n        background-color $time ease-in-out,\n        border-color $time ease-in-out,\n        box-shadow $time ease-in-out;\n\n    $button-disabled-shadow: none;\n\n    $button-floating-width: rem(56px);\n    $button-floating-height: $button-floating-width;\n\n    $button-icon-width: map.get((\n        material: rem(36px, 16px),\n        fluent: rem(32px, 16px),\n        bootstrap: rem(36px, 16px),\n        indigo-design: rem(36px, 16px),\n    ), $variant);\n\n    $button-icon-height: $button-icon-width;\n\n    $button-padding-material-inline: (\n        comfortable: rem(16px, 16px),\n        cosy: rem(16px, 16px),\n        compact: rem(16px, 16px)\n    );\n\n    $button-padding-material-block: (\n        comfortable: rem(7px, 16px),\n        cosy: rem(4px, 16px),\n        compact: rem(1px, 16px)\n    );\n\n    $button-padding-fluent-inline: (\n        comfortable: rem(16px, 16px),\n        cosy: rem(16px, 16px),\n        compact: rem(16px, 16px)\n    );\n\n    $button-padding-fluent-block: (\n        comfortable: 0,\n        cosy: 0,\n        compact: 0\n    );\n\n    $button-padding-bootstrap-inline: (\n        comfortable: rem(12px, 16px),\n        cosy: rem(10px, 16px),\n        compact: rem(8px, 16px)\n    );\n\n    $button-padding-bootstrap-block: (\n        comfortable: rem(6px, 16px),\n        cosy: rem(4px, 16px),\n        compact: rem(2px, 16px)\n    );\n\n    $button-padding-indigo-inline: (\n        comfortable: rem(12px, 16px),\n        cosy: rem(12px, 16px),\n        compact: rem(8px, 16px)\n    );\n\n    $button-padding-indigo-block: (\n        comfortable: rem(3px, 16px),\n        cosy: rem(2px, 16px),\n        compact: rem(1px, 16px)\n    );\n\n    $outlined-button-padding-material-inline: (\n        comfortable: rem(14px, 16px),\n        cosy: rem(14px, 16px),\n        compact: rem(14px, 16px)\n    );\n\n    $outlined-button-padding-material-block: (\n        comfortable: rem(7px, 16px),\n        cosy: rem(4px, 16px),\n        compact: rem(1px, 16px)\n    );\n\n    $outlined-button-padding-indigo-inline: (\n        comfortable: rem(14px, 16px),\n        cosy: rem(10px, 16px),\n        compact: rem(6px, 16px)\n    );\n\n    $outlined-button-padding-indigo-block: (\n        comfortable: rem(6px, 16px),\n        cosy: rem(4px, 16px),\n        compact: rem(2px, 16px)\n    );\n\n    $button-padding-inline: map.get((\n        material: $button-padding-material-inline,\n        fluent: $button-padding-fluent-inline,\n        bootstrap: $button-padding-bootstrap-inline,\n        indigo-design: $button-padding-indigo-inline,\n    ), $variant);\n\n    $button-padding-block: map.get((\n        material: $button-padding-material-block,\n        fluent: $button-padding-fluent-block,\n        bootstrap: $button-padding-bootstrap-block,\n        indigo-design: $button-padding-indigo-block,\n    ), $variant);\n\n    $outlined-button-padding-inline: map.get((\n        material: $outlined-button-padding-material-inline,\n        fluent: $button-padding-fluent-inline,\n        bootstrap: $button-padding-bootstrap-inline,\n        indigo-design: $outlined-button-padding-indigo-inline\n    ), $variant);\n\n    $outlined-button-padding-block: map.get((\n        material: $outlined-button-padding-material-block,\n        fluent: $button-padding-fluent-block,\n        bootstrap: $button-padding-bootstrap-block,\n        indigo-design: $outlined-button-padding-indigo-block\n    ), $variant);\n\n    $button-floating-padding-block: (\n        comfortable: rem(8px),\n        cosy: rem(4px),\n        compact: 0\n    );\n\n    $button-floating-padding-inline: (\n        comfortable: rem(14px),\n        cosy: rem(10px),\n        compact: rem(6px)\n    );\n\n    $items-gap: (\n        comfortable: rem(12px),\n        cosy: rem(8px),\n        compact: rem(4px)\n    );\n\n    $icon-sizes: map.get((\n        material: rem(18px),\n        fluent: rem(16px),\n        bootstrap: rem(18px),\n        indigo-design: rem(18px),\n    ), $variant);\n\n    $filtering-row-button-size: (\n        comfortable: rem(40px),\n        cosy: rem(30px),\n        compact: rem(21px)\n    );\n\n    $icon-in-button-size: $icon-sizes;\n\n    $raised-shadow: map.get((\n        material: var-get($raised-theme, 'resting-shadow'),\n        fluent: var-get($raised-theme, 'resting-shadow'),\n        bootstrap: none,\n        indigo-design: none\n    ), $variant);\n\n    $raised-shadow--hover: map.get((\n        material: var-get($raised-theme, 'hover-shadow'),\n        fluent: var-get($raised-theme, 'hover-shadow'),\n        bootstrap: none,\n        indigo-design: none\n    ), $variant);\n\n    $raised-shadow--focus: map.get((\n        material: var-get($raised-theme, 'focus-shadow'),\n        fluent: 0 0 0 rem(3px) var-get($raised-theme, 'shadow-color'),\n        bootstrap: 0 0 0 rem(3px) var-get($raised-theme, 'shadow-color'),\n        indigo-design: 0 0 0 rem(3px) var-get($raised-theme, 'shadow-color')\n    ), $variant);\n\n    $raised-shadow--active: map.get((\n        material: var-get($raised-theme, 'active-shadow'),\n        fluent: 0 0 0 rem(3px) var-get($raised-theme, 'shadow-color'),\n        bootstrap: 0 0 0 rem(3px) var-get($raised-theme, 'shadow-color'),\n        indigo-design: 0 0 0 rem(3px) var-get($raised-theme, 'shadow-color')\n    ), $variant);\n\n    $fab-shadow: map.get((\n        material: var-get($fab-theme, 'resting-shadow'),\n        fluent: var-get($fab-theme, 'resting-shadow'),\n        bootstrap: none,\n        indigo-design: none\n    ), $variant);\n\n    $fab-shadow--hover: map.get((\n        material: var-get($fab-theme, 'hover-shadow'),\n        fluent: var-get($fab-theme, 'hover-shadow'),\n        bootstrap: none,\n        indigo-design: none\n    ), $variant);\n\n    $fab-shadow--focus: map.get((\n        material: var-get($fab-theme, 'focus-shadow'),\n        fluent:  0 0 0 rem(3px) var-get($fab-theme, 'shadow-color'),\n        bootstrap: 0 0 0 rem(3px) var-get($fab-theme, 'shadow-color'),\n        indigo-design: 0 0 0 rem(3px) var-get($fab-theme, 'shadow-color')\n    ), $variant);\n\n    $fab-shadow--active: map.get((\n        material: var-get($fab-theme, 'active-shadow'),\n        fluent:  0 0 0 rem(3px) var-get($fab-theme, 'shadow-color'),\n        bootstrap: 0 0 0 rem(3px) var-get($fab-theme, 'shadow-color'),\n        indigo-design: 0 0 0 rem(3px) var-get($fab-theme, 'shadow-color')\n    ), $variant);\n\n    $icon-shadow: map.get((\n        material: var-get($icon-theme, 'focus-shadow'),\n        fluent: 0 0 0 rem(3px) var-get($icon-theme, 'shadow-color'),\n        bootstrap: 0 0 0 rem(3px) var-get($icon-theme, 'shadow-color'),\n        indigo-design: 0 0 0 rem(3px) var-get($icon-theme, 'shadow-color')\n    ), $variant);\n\n    %igx-button-display {\n        @include sizable();\n        --component-size: var(--ig-size, var(--ig-size-large));\n\n        position: relative;\n        display: inline-flex;\n        align-items: center;\n        justify-content: center;\n        min-width: $button-width;\n        padding-inline: pad-inline(\n            map.get($button-padding-inline, 'compact'),\n            map.get($button-padding-inline, 'cosy'),\n            map.get($button-padding-inline, 'comfortable')\n        );\n        padding-block: pad-block(\n            map.get($button-padding-block, 'compact'),\n            map.get($button-padding-block, 'cosy'),\n            map.get($button-padding-block, 'comfortable')\n        );\n        min-height: var-get($flat-theme, 'size');\n        border: rem(1px) solid var-get($flat-theme, 'border-color');\n        cursor: pointer;\n        user-select: none;\n        outline-style: none;\n        -webkit-tap-highlight-color: transparent;\n        overflow: hidden;\n        white-space: nowrap;\n        transition: $button-transition;\n        gap: pad-inline(\n            map.get($items-gap, 'compact'),\n            map.get($items-gap, 'cosy'),\n            map.get($items-gap, 'comfortable')\n        );\n\n\n        @if ($variant == 'bootstrap') {\n            // important is needed to override the typography margins\n            margin: rem(4px) !important;\n        }\n\n        igx-icon {\n            --component-size: var(--ig-size, var(--ig-size-large));\n            display: flex;\n            justify-content: center;\n            width: var(--igx-icon-size, #{$icon-in-button-size});\n            height: var(--igx-icon-size, #{$icon-in-button-size});\n            font-size: var(--igx-icon-size, #{$icon-in-button-size});\n        }\n    }\n\n    igx-grid-filtering-row {\n        @if ($variant == 'bootstrap') {\n            --filtering-row-button-size: #{sizable(\n                #{map.get($filtering-row-button-size, 'compact')},\n                #{map.get($filtering-row-button-size, 'cosy')},\n                #{map.get($filtering-row-button-size, 'comfortable')}\n            )};\n\n            %igx-button-display {\n                min-height: var(--filtering-row-button-size);\n                padding-block: 0;\n\n                > * {\n                    display: flex;\n                    align-items: center;\n                    height: rem(18px);\n                }\n            }\n        }\n    }\n\n    %igx-button--flat {\n        background: var-get($flat-theme, 'background');\n        color: var-get($flat-theme, 'foreground');\n        border-radius: var-get($flat-theme, 'border-radius');\n\n        &:hover {\n            background: var-get($flat-theme, 'hover-background');\n            color: var-get($flat-theme, 'hover-foreground');\n            border-color: var-get($flat-theme, 'hover-border-color');\n        }\n\n        &:focus {\n            background: var-get($flat-theme, 'focus-background');\n            color: var-get($flat-theme, 'focus-foreground');\n            box-shadow: 0 0 0 rem(3px) var-get($flat-theme, 'shadow-color');\n            border-color: var-get($flat-theme, 'focus-border-color');\n        }\n\n        &:active {\n            background: var-get($flat-theme, 'active-background');\n            color: var-get($flat-theme, 'active-foreground');\n            box-shadow: 0 0 0 rem(3px) var-get($flat-theme, 'shadow-color');\n            border-color: var-get($flat-theme, 'active-border-color');\n        }\n\n        &:focus-visible {\n            background: var-get($flat-theme, 'focus-visible-background');\n            color: var-get($flat-theme, 'focus-visible-foreground');\n            border-color: var-get($flat-theme, 'focus-visible-border-color');\n        }\n\n        @if($variant == 'bootstrap') {\n            &:focus,\n            &:active,\n            &:focus-visible {\n                box-shadow: 0 0 0 rem(3px) var-get($outlined-theme, 'shadow-color');\n            }\n        }\n    }\n\n    %igx-button--outlined {\n        background: var-get($outlined-theme, 'background');\n        color: var-get($outlined-theme, 'foreground');\n        border-color: var-get($outlined-theme, 'border-color');\n        border-radius: var-get($outlined-theme, 'border-radius');\n        padding-block: pad-block(\n            map.get($outlined-button-padding-block, 'compact'),\n            map.get($outlined-button-padding-block, 'cosy'),\n            map.get($outlined-button-padding-block, 'comfortable')\n        );\n        padding-inline: pad-inline(\n            map.get($outlined-button-padding-inline, 'compact'),\n            map.get($outlined-button-padding-inline, 'cosy'),\n            map.get($outlined-button-padding-inline, 'comfortable')\n        );\n\n        @if $variant == 'indigo-design' {\n            border-width: rem(2px);\n        }\n\n        &:hover {\n            background: var-get($outlined-theme, 'hover-background');\n            color: var-get($outlined-theme, 'hover-foreground');\n            border-color: var-get($outlined-theme, 'hover-border-color');\n        }\n\n        &:focus {\n            background: var-get($outlined-theme, 'focus-background');\n            color: var-get($outlined-theme, 'focus-foreground');\n            border-color: var-get($outlined-theme, 'focus-border-color');\n\n            @if($variant == 'bootstrap') {\n                &:hover {\n                    background: var-get($outlined-theme, 'hover-background');\n                    color: var-get($outlined-theme, 'hover-foreground');\n                }\n                box-shadow: 0 0 0 rem(3px) var-get($outlined-theme, 'shadow-color');\n            } @else if($variant == 'indigo-design') {\n                box-shadow: 0 0 0 rem(3px) var-get($outlined-theme, 'shadow-color');\n            }\n        }\n\n        &:active {\n            background: var-get($outlined-theme, 'active-background');\n            color: var-get($outlined-theme, 'active-foreground');\n            border-color: var-get($outlined-theme, 'active-border-color');\n            box-shadow: 0 0 0 rem(3px) var-get($outlined-theme, 'shadow-color');\n        }\n\n        &:focus-visible {\n            background: var-get($outlined-theme, 'focus-visible-background');\n            color: var-get($outlined-theme, 'focus-visible-foreground');\n            border-color: var-get($outlined-theme, 'focus-visible-border-color');\n\n            &:hover {\n                background: var-get($outlined-theme, 'hover-background');\n                color: var-get($outlined-theme, 'hover-foreground');\n                border-color: var-get($outlined-theme, 'hover-border-color');\n            }\n\n            &:active {\n                background: var-get($outlined-theme, 'active-background');\n                color: var-get($outlined-theme, 'active-foreground');\n                border-color: var-get($outlined-theme, 'active-border-color');\n            }\n        }\n\n        @if($variant == 'fluent') {\n            &::after {\n                border-radius: inherit;\n            }\n\n            &:focus-visible {\n                &::after {\n                    $outline-btn-indent: rem(2px);\n                    content: '';\n                    position: absolute;\n                    top: $outline-btn-indent;\n                    inset-inline-start: $outline-btn-indent;\n                    pointer-events: none;\n                    width: calc(100% - (#{$outline-btn-indent} * 2));\n                    height: calc(100% - (#{$outline-btn-indent} * 2));\n                    box-shadow: 0 0 0 rem(1px) var-get($outlined-theme, 'focus-visible-foreground');\n                }\n\n                /* stylelint-disable */\n                &:hover {\n                    &::after {\n                        box-shadow: 0 0 0 rem(1px) var-get($outlined-theme, 'hover-foreground');\n                    }\n                }\n\n                &:active {\n                    &::after {\n                        box-shadow: 0 0 0 rem(1px) var-get($outlined-theme, 'active-foreground');\n                    }\n                }\n                /* stylelint-enable */\n            }\n        }\n    }\n\n    %igx-button--raised {\n        color: var-get($raised-theme, 'foreground');\n        background: var-get($raised-theme, 'background');\n        box-shadow: $raised-shadow;\n        border-radius: var-get($raised-theme, 'border-radius');\n\n        &:hover {\n            color: var-get($raised-theme, 'hover-foreground');\n            background: var-get($raised-theme, 'hover-background');\n            border-color: var-get($raised-theme, 'hover-border-color');\n            box-shadow: $raised-shadow--hover;\n        }\n\n        &:focus {\n            color: var-get($raised-theme, 'focus-foreground');\n            background: var-get($raised-theme, 'focus-background');\n            border-color: var-get($raised-theme, 'focus-border-color');\n\n            @if $variant == 'material' or  $variant == 'fluent' {\n                box-shadow: 0 0 0 rem(3px) var-get($raised-theme, 'shadow-color'), $raised-shadow--focus;\n            } @else {\n                box-shadow: $raised-shadow--focus;\n            }\n        }\n\n        &:active {\n            color: var-get($raised-theme, 'active-foreground');\n            background: var-get($raised-theme, 'active-background');\n            border-color: var-get($raised-theme, 'active-border-color');\n\n            @if $variant == 'material' or  $variant == 'fluent' {\n                box-shadow: 0 0 0 rem(3px) var-get($raised-theme, 'shadow-color'), $raised-shadow--active;\n            } @else {\n                box-shadow: $raised-shadow--active;\n            }\n        }\n\n        &:focus-visible {\n            background: var-get($raised-theme, 'focus-visible-background');\n            color: var-get($raised-theme, 'focus-visible-foreground');\n            border-color: var-get($raised-theme, 'focus-visible-border-color');\n\n            &:hover {\n                color: var-get($raised-theme, 'hover-foreground');\n                background: var-get($raised-theme, 'hover-background');\n                border-color: var-get($raised-theme, 'hover-border-color');\n            }\n\n            &:active {\n                color: var-get($raised-theme, 'active-foreground');\n                background: var-get($raised-theme, 'active-background');\n                border-color: var-get($raised-theme, 'active-border-color');\n            }\n        }\n\n        @if($variant == 'fluent') {\n            &::after {\n                border-radius: inherit;\n            }\n\n            &:focus-visible {\n                &::after {\n                    $outline-btn-indent: rem(3px);\n                    content: '';\n                    position: absolute;\n                    top: $outline-btn-indent;\n                    inset-inline-start: $outline-btn-indent;\n                    pointer-events: none;\n                    width: calc(100% - (#{$outline-btn-indent} * 2));\n                    height: calc(100% - (#{$outline-btn-indent} * 2));\n                    box-shadow: 0 0 0 rem(1px) var-get($outlined-theme, 'focus-visible-foreground');\n                }\n\n                /* stylelint-disable */\n                &:hover {\n                    &::after {\n                        box-shadow: 0 0 0 rem(1px) var-get($outlined-theme, 'hover-foreground');\n                    }\n                }\n\n                &:active {\n                    &::after {\n                        box-shadow: 0 0 0 rem(1px) var-get($outlined-theme, 'active-foreground');\n                    }\n                }\n                /* stylelint-enable */\n            }\n        }\n    }\n\n    %igx-button--round {\n        display: inline-flex;\n        position: relative;\n        flex-direction: row;\n        justify-content: center;\n        align-items: center;\n        outline: none;\n        cursor: pointer;\n        transition: $button-transition;\n        user-select: none;\n        -webkit-tap-highlight-color: transparent;\n        overflow: hidden;\n        // hack to allow circular overflow in safari...\n        filter: blur(0);\n    }\n\n    %igx-button--fab {\n        padding-block: pad-block(\n            map.get($button-floating-padding-block, 'compact'),\n            map.get($button-floating-padding-block, 'cosy'),\n            map.get($button-floating-padding-block, 'comfortable')\n        );\n        padding-inline: pad-inline(\n            map.get($button-floating-padding-inline, 'compact'),\n            map.get($button-floating-padding-inline, 'cosy'),\n            map.get($button-floating-padding-inline, 'comfortable')\n        );\n        min-width: var-get($fab-theme, 'size');\n        min-height: var-get($fab-theme, 'size');\n        line-height: unset;\n        white-space: nowrap;\n        color: var-get($fab-theme, 'foreground');\n        background: var-get($fab-theme, 'background');\n        border-color: var-get($flat-theme, 'border-color');\n        box-shadow: $fab-shadow;\n        border-radius: var-get($fab-theme, 'border-radius');\n\n        &:hover {\n            color: var-get($fab-theme, 'hover-foreground');\n            background: var-get($fab-theme, 'hover-background');\n            border-color: var-get($flat-theme, 'hover-border-color');\n            box-shadow: $fab-shadow;\n        }\n\n        &:focus {\n            color: var-get($fab-theme, 'focus-foreground');\n            background: var-get($fab-theme, 'focus-background');\n            border-color: var-get($flat-theme, 'focus-border-color');\n\n            @if $variant == 'material' or  $variant == 'fluent' {\n                box-shadow: 0 0 0 rem(3px) var-get($fab-theme, 'shadow-color'), $fab-shadow--focus;\n            } @else {\n                box-shadow: $raised-shadow--focus;\n            }\n        }\n\n        &:active {\n            color: var-get($fab-theme, 'active-foreground');\n            background: var-get($fab-theme, 'active-background');\n            border-color: var-get($flat-theme, 'active-border-color');\n\n            @if $variant == 'material' or  $variant == 'fluent' {\n                box-shadow: 0 0 0 rem(3px) var-get($fab-theme, 'shadow-color'), $fab-shadow--active;\n            } @else {\n                box-shadow: $raised-shadow--active;\n            }\n        }\n\n        &:focus-visible {\n            background: var-get($fab-theme, 'focus-visible-background');\n            color: var-get($fab-theme, 'focus-visible-foreground');\n            border-color: var-get($fab-theme, 'focus-visible-border-color');\n\n            &:hover {\n                color: var-get($fab-theme, 'hover-foreground');\n                background: var-get($fab-theme, 'hover-background');\n                border-color: var-get($fab-theme, 'hover-border-color');\n            }\n\n            &:active {\n                color: var-get($fab-theme, 'active-foreground');\n                background: var-get($fab-theme, 'active-background');\n                border-color: var-get($fab-theme, 'active-border-color');\n            }\n        }\n\n        @if($variant == 'fluent') {\n            &::after {\n                border-radius: inherit;\n            }\n\n            &:focus-visible {\n                &::after {\n                    $outline-btn-indent: rem(3px);\n                    content: '';\n                    position: absolute;\n                    top: $outline-btn-indent;\n                    inset-inline-start: $outline-btn-indent;\n                    pointer-events: none;\n                    border-radius: calc(#{var-get($fab-theme, 'border-radius')} - #{$outline-btn-indent});\n                    width: calc(100% - (#{$outline-btn-indent} * 2));\n                    height: calc(100% - (#{$outline-btn-indent} * 2));\n                    box-shadow: 0 0 0 rem(1px) var-get($outlined-theme, 'focus-visible-foreground');\n                }\n\n                /* stylelint-disable */\n                &:hover {\n                    &::after {\n                        box-shadow: 0 0 0 rem(1px) var-get($outlined-theme, 'hover-foreground');\n                    }\n                }\n\n                &:active {\n                    &::after {\n                        box-shadow: 0 0 0 rem(1px) var-get($outlined-theme, 'active-foreground');\n                    }\n                }\n                /* stylelint-enable */\n            }\n        }\n    }\n\n    %igx-button--icon {\n        width: var-get($icon-theme, 'size');\n        height: var-get($icon-theme, 'size');\n        min-width: unset;\n        min-height: unset;\n        font-size: rem(24px, 24px);\n        padding: 0;\n        color: var-get($icon-theme, 'foreground');\n        background: var-get($icon-theme, 'background');\n        border-radius: var-get($icon-theme, 'border-radius');\n        border-color: var-get($icon-theme, 'border-color');\n\n        @if $variant == 'indigo-design' {\n            border-width: rem(3px);\n        }\n\n        &:hover {\n            @if $variant != 'fluent' {\n                transition: $button-transition;\n            }\n\n            color: var-get($icon-theme, 'hover-foreground');\n            background: var-get($icon-theme, 'hover-background');\n            border-color: var-get($icon-theme, 'hover-border-color');\n        }\n\n        &:focus {\n            color: var-get($icon-theme, 'focus-foreground');\n            background: var-get($icon-theme, 'focus-background');\n            border-color: var-get($icon-theme, 'focus-border-color');\n\n            @if $variant == 'fluent' {\n                &:hover {\n                    color: var-get($icon-theme, 'hover-foreground');\n                    background: var-get($icon-theme, 'hover-background');\n                    border-color: var-get($icon-theme, 'hover-border-color');\n                }\n\n                &:active {\n                    color: var-get($icon-theme, 'active-foreground');\n                    background: var-get($icon-theme, 'active-background');\n                    border-color: var-get($icon-theme, 'active-border-color');\n                }\n            }\n        }\n\n        &:active {\n            color: var-get($icon-theme, 'active-foreground');\n            background: var-get($icon-theme, 'active-background');\n            border-color: var-get($flat-theme, 'active-border-color');\n        }\n\n        &:focus-visible {\n            color: var-get($icon-theme, 'focus-visible-foreground');\n            background: var-get($icon-theme, 'focus-visible-background');\n            border-color: var-get($icon-theme, 'focus-visible-border-color') ;\n\n            &:hover {\n                color: var-get($icon-theme, 'hover-foreground');\n                background: var-get($icon-theme, 'hover-background');\n                border-color: var-get($icon-theme, 'focus-visible-border-color');\n            }\n\n            &:active {\n                color: var-get($icon-theme, 'active-foreground');\n                background: var-get($icon-theme, 'active-background');\n                border-color: var-get($icon-theme, 'focus-visible-border-color');\n            }\n        }\n\n        &:focus,\n        &:active {\n            @if $variant == 'material' or  $variant == 'fluent' {\n                box-shadow: 0 0 0 rem(3px) var-get($icon-theme, 'shadow-color'), $icon-shadow;\n            } @else {\n                box-shadow: $icon-shadow;\n            }\n        }\n    }\n\n    %igx-button--disabled {\n        background: var-get($flat-theme, 'disabled-background');\n        color: var-get($flat-theme, 'disabled-foreground');\n        border-color: var-get($flat-theme, 'disabled-border-color');\n        pointer-events: none;\n        box-shadow: none;\n\n        &:focus {\n            box-shadow: none;\n        }\n    }\n}\n\n/// Adds typography styles for the igx-button component.\n/// Uses the 'button' category from the typographic scale.\n/// @group typography\n/// @param {String} $categories [(text: 'button')] - The category from the typographic scale used for type styles.\n@mixin button-typography($categories: (text: 'button')) {\n    $text: map.get($categories, 'text');\n\n    %igx-button-display {\n        @include type-style($text) {\n            text-align: center;\n        }\n    }\n\n    %igx-button--fab {\n        @include type-style($text) {\n            text-align: center;\n            margin: 0;\n        }\n    }\n}\n","@use '../mixins' as *;\n\n////\n/// @package theming\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @requires {mixin} keyframes\n@mixin scale-up-center {\n    @include keyframes(scale-up-center) {\n        0% {\n            transform: scale(0.5);\n        }\n\n        100% {\n            transform: scale(1);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-bl {\n    @include keyframes(scale-up-bl) {\n        0% {\n            transform: scale(0.5);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-ver-center {\n    @include keyframes(scale-up-ver-center) {\n        0% {\n            transform: scaleY(0.4);\n        }\n\n        100% {\n            transform: scaleY(1);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-top {\n    @include keyframes(scale-up-top) {\n        0% {\n            transform: scale(0.5);\n            transform-origin: 50% 0%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 50% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-left {\n    @include keyframes(scale-up-left) {\n        0% {\n            transform: scale(0.5);\n            transform-origin: 0% 50%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 50%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-ver-top {\n    @include keyframes(scale-up-ver-top) {\n        0% {\n            transform: scaleY(0.4);\n            transform-origin: 100% 0%;\n        }\n\n        100% {\n            transform: scaleY(1);\n            transform-origin: 100% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-tr {\n    @include keyframes(scale-up-tr) {\n        0% {\n            transform: scale(0.5);\n            transform-origin: 100% 0%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-tl {\n    @include keyframes(scale-up-tl) {\n        0% {\n            transform: scale(0.5);\n            transform-origin: 0% 0%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-ver-bottom {\n    @include keyframes(scale-up-ver-bottom) {\n        0% {\n            transform: scaleY(0.4);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: scaleY(1);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-right {\n    @include keyframes(scale-up-right) {\n        0% {\n            transform: scale(0.5);\n            transform-origin: 100% 50%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 50%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-hor-center {\n    @include keyframes(scale-up-hor-center) {\n        0% {\n            transform: scaleX(0.4);\n        }\n\n        100% {\n            transform: scaleX(1);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-br {\n    @include keyframes(scale-up-br) {\n        0% {\n            transform: scale(0.5);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-hor-left {\n    @include keyframes(scale-up-hor-left) {\n        0% {\n            transform: scaleX(0.4);\n            transform-origin: 0% 0%;\n        }\n\n        100% {\n            transform: scaleX(1);\n            transform-origin: 0% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-bottom {\n    @include keyframes(scale-up-bottom) {\n        0% {\n            transform: scale(0.5);\n            transform-origin: 50% 100%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 50% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-hor-right {\n    @include keyframes(scale-up-hor-right) {\n        0% {\n            transform: scaleX(0.4);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: scaleX(1);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-center {\n    @include keyframes(scale-down-center) {\n        0% {\n            transform: scale(1);\n        }\n\n        100% {\n            transform: scale(0.5);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-bl {\n    @include keyframes(scale-down-bl) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: scale(0.5);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-ver-center {\n    @include keyframes(scale-down-ver-center) {\n        0% {\n            transform: scaleY(1);\n        }\n\n        100% {\n            transform: scaleY(0.3);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-top {\n    @include keyframes(scale-down-top) {\n        0% {\n            transform: scale(1);\n            transform-origin: 50% 0%;\n        }\n\n        100% {\n            transform: scale(0.5);\n            transform-origin: 50% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-left {\n    @include keyframes(scale-down-left) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0% 50%;\n        }\n\n        100% {\n            transform: scale(0.5);\n            transform-origin: 0% 50%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-ver-top {\n    @include keyframes(scale-down-ver-top) {\n        0% {\n            transform: scaleY(1);\n            transform-origin: 100% 0%;\n        }\n\n        100% {\n            transform: scaleY(0.3);\n            transform-origin: 100% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-tr {\n    @include keyframes(scale-down-tr) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 0%;\n        }\n\n        100% {\n            transform: scale(0.5);\n            transform-origin: 100% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-tl {\n    @include keyframes(scale-down-tl) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0% 0%;\n        }\n\n        100% {\n            transform: scale(0.5);\n            transform-origin: 0% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-ver-top-bottom {\n    @include keyframes(scale-down-ver-to-bottom) {\n        0% {\n            transform: scaleY(1);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: scaleY(0.3);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-right {\n    @include keyframes(scale-down-right) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 50%;\n        }\n\n        100% {\n            transform: scale(0.5);\n            transform-origin: 100% 50%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-hor-center {\n    @include keyframes(scale-down-hor-center) {\n        0% {\n            transform: scaleX(1);\n        }\n\n        100% {\n            transform: scaleX(0.3);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-br {\n    @include keyframes(scale-down-br) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: scale(0.5);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-hor-left {\n    @include keyframes(scale-down-hor-left) {\n        0% {\n            transform: scaleX(1);\n            transform-origin: 0% 0%;\n        }\n\n        100% {\n            transform: scaleX(0.3);\n            transform-origin: 0% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-bottom {\n    @include keyframes(scale-down-bottom) {\n        0% {\n            transform: scale(1);\n            transform-origin: 50% 100%;\n        }\n\n        100% {\n            transform: scale(0.5);\n            transform-origin: 50% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-hor-right {\n    @include keyframes(scale-down-hor-right) {\n        0% {\n            transform: scaleX(1);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: scaleX(0.3);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @param {number} $start-scale [.5] - The scale to start the animation from.\n/// @param {number} $end-scale [1] - The scale to end the animation at.\n/// @requires {mixin} keyframes\n@mixin scale-in-out($start-scale: 0.5, $end-scale: 1) {\n    @include keyframes(scale-in-out) {\n        50% {\n            transform: scale($start-scale);\n            transform-origin: 50% 50%;\n        }\n\n        100% {\n            transform: scale($end-scale);\n            transform-origin: 50% 50%;\n        }\n    }\n}\n","@use '../mixins' as *;\n\n////\n/// @package theming\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @requires {mixin} keyframes\n@mixin scale-in-center {\n    @include keyframes(scale-in-center) {\n        0% {\n            transform: scale(0);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-bl {\n    @include keyframes(scale-in-bl) {\n        0% {\n            transform: scale(0);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-ver-center {\n    @include keyframes(scale-in-ver-center) {\n        0% {\n            transform: scaleY(0);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(1);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-top {\n    @include keyframes(scale-in-top) {\n        0% {\n            transform: scale(0);\n            transform-origin: 50% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 50% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-left {\n    @include keyframes(scale-in-left) {\n        0% {\n            transform: scale(0);\n            transform-origin: 0% 50%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 50%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-ver-top {\n    @include keyframes(scale-in-ver-top) {\n        0% {\n            transform: scaleY(0);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(1);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-tr {\n    @include keyframes(scale-in-tr) {\n        0% {\n            transform: scale(0);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-tl {\n    @include keyframes(scale-in-tl) {\n        0% {\n            transform: scale(0);\n            transform-origin: 0% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-ver-bottom {\n    @include keyframes(scale-in-ver-bottom) {\n        0% {\n            transform: scaleY(0);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(1);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-right {\n    @include keyframes(scale-in-right) {\n        0% {\n            transform: scale(0);\n            transform-origin: 100% 50%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 50%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-hor-center {\n    @include keyframes(scale-in-hor-center) {\n        0% {\n            transform: scaleX(0);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(1);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-br {\n    @include keyframes(scale-in-br) {\n        0% {\n            transform: scale(0);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-hor-left {\n    @include keyframes(scale-in-hor-left) {\n        0% {\n            transform: scaleX(0);\n            transform-origin: 0% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(1);\n            transform-origin: 0% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-bottom {\n    @include keyframes(scale-in-bottom) {\n        0% {\n            transform: scale(0);\n            transform-origin: 50% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 50% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-hor-right {\n    @include keyframes(scale-in-hor-right) {\n        0% {\n            transform: scaleX(0);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(1);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n    }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../../base' as *;\n@use '../ripple/ripple-component' as *;\n@use '../ripple/ripple-theme' as *;\n@use 'igniteui-theming/sass/animations' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Checkbox Theme\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Color} $label-color [null]- The text color used for the label text.\n/// @param {Color} $empty-color [null] - The unchecked border color.\n/// @param {Color} $fill-color [null] - The checked border and fill colors.\n/// @param {Color} $fill-color-hover [null] - The checked border and fill colors on hover.\n/// @param {Color} $tick-color [null] - The checked mark color.\n/// @param {Color} tick-color-hover [null] - The checked mark color on hover.\n/// @param {Color} $disabled-color [null] - The disabled border and fill colors.\n/// @param {Color} $disabled-indeterminate-color [null] - The disabled border and fill colors in indeterminate state.\n/// @param {Color} $disabled-color-label [null] - The disabled label color.\n/// @param {List} $border-radius [null] - The border radius used for checkbox component.\n/// @param {List} $border-radius-ripple [null] - The border radius used for checkbox ripple.\n/// @param {Color} $focus-outline-color [null] - The focus outlined color.\n/// @param {Color} $error-color [null] - The border and fill colors in invalid state.\n/// @param {Color} $error-color-hover [null] - The border and fill colors in invalid state on hover.\n/// Set to light when the surrounding area is dark.\n///\n/// @requires $light-material-schema\n///\n/// @example scss Change the checked fill color\n///   $my-checkbox-theme: igx-checkbox-theme($fill-color: magenta);\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($my-checkbox-theme);\n@function checkbox-theme(\n    $schema: $light-material-schema,\n\n    $border-radius: null,\n    $label-color: null,\n    $empty-color: null,\n    $fill-color: null,\n    $fill-color-hover: null,\n    $tick-color: null,\n    $tick-color-hover: null,\n    $disabled-color: null,\n    $disabled-indeterminate-color: null,\n    $disabled-color-label: null,\n    $border-radius-ripple: null,\n    $focus-outline-color: null,\n    $error-color: null,\n    $error-color-hover: null,\n) {\n    $name: 'igx-checkbox';\n    $checkbox-schema: ();\n\n    @if map.has-key($schema, 'checkbox') {\n        $checkbox-schema: map.get($schema, 'checkbox');\n    } @else {\n        $checkbox-schema: $schema;\n    }\n\n    $theme: digest-schema($checkbox-schema);\n    $meta: map.get($theme, '_meta');\n\n    @return extend($theme, (\n        name: $name,\n        label-color: $label-color,\n        empty-color: $empty-color,\n        fill-color: $fill-color,\n        fill-color-hover: $fill-color-hover,\n        tick-color: $tick-color,\n        tick-color-hover: $tick-color-hover,\n        disabled-color: $disabled-color,\n        disabled-indeterminate-color: $disabled-indeterminate-color,\n        disabled-color-label: $disabled-color-label,\n        border-radius: $border-radius,\n        border-radius-ripple: $border-radius-ripple,\n        focus-outline-color: $focus-outline-color,\n        error-color: $error-color,\n        error-color-hover: $error-color-hover,\n        _meta: map.merge(if($meta, $meta, ()), (\n            variant: map.get($schema, '_meta', 'theme'),\n            theme-variant: map.get($schema, '_meta', 'variant')\n        )),\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} ripple\n/// @requires ripple-theme\n@mixin checkbox($theme) {\n    @include css-vars($theme);\n    $theme-variant: map.get($theme, '_meta', 'theme-variant');\n    $variant: map.get($theme, '_meta', 'variant');\n    $material-theme: $variant == 'material';\n    $bootstrap-theme: $variant == 'bootstrap';\n\n    @include scale-in-out($start-scale: .9);\n\n    // If updating the WIDTH of the checkbox here, please update it in the grid theme as well.\n    // It is under the name of $cbx-size\n    $size: rem(20px);\n    $size-bs: rem(16px);\n    $checkbox-radius: math.div($size, 2);\n\n    $size: map.get((\n        material: $size,\n        fluent: $size,\n        bootstrap: $size-bs,\n        indigo-design: $size,\n    ), $variant);\n\n    $border-width: map.get((\n        material: rem(2px),\n        fluent: rem(1px),\n        bootstrap: rem(1px),\n        indigo-design: rem(2px),\n    ), $variant);\n\n    $ripple-display: map.get((\n        material: block,\n        fluent: none,\n        bootstrap: none,\n        indigo-design: none,\n    ), $variant);\n\n    $label-margin: rem(8px);\n\n    $mark-stroke: map.get((\n        material: 3,\n        fluent: 1,\n        bootstrap: 3,\n        indigo-design: 3,\n    ), $variant);\n\n    $mark-offset: map.get((\n        material: 0,\n        fluent: -1px,\n        bootstrap: 0,\n        indigo-design: 0,\n    ), $variant);\n\n    $mark-length: 24;\n    $mark-x-factor: math.div($mark-stroke, $mark-length);\n\n    $ripple-size: rem(40px);\n    $ripple-radius: math.div($ripple-size, 2);\n\n    $ripple-theme: ripple-theme(\n        $schema: $light-material-schema,\n        $color: var-get($theme, 'fill-color')\n    );\n\n    @include scale-in-center();\n\n    %cbx-display {\n        position: relative;\n        display: inline-flex;\n        flex-flow: row nowrap;\n        align-items: center;\n        outline-style: none;\n    }\n\n    %cbx-display--disabled {\n        user-select: none;\n        pointer-events: none;\n        cursor: initial;\n    }\n\n    %cbx-input {\n        @include hide-default();\n    }\n\n    %cbx-composite-wrapper {\n        align-items: center;\n        justify-content: center;\n        display: flex;\n        position: relative;\n        width: $size;\n        height: $size;\n    }\n\n    %cbx-composite {\n        position: relative;\n        display: inline-block;\n        cursor: pointer;\n        width: $size;\n        height: $size;\n        min-width: $size;\n        border-width: $border-width;\n        border-style: solid;\n        border-color: var-get($theme, 'empty-color');\n        border-radius: var-get($theme, 'border-radius');\n        -webkit-tap-highlight-color: transparent;\n        transition: border-color .2s $ease-out-quad, background .2s $ease-out-quad;\n        overflow: hidden;\n    }\n\n    %cbx-composite--x {\n        border-color: var-get($theme, 'fill-color');\n        background: var-get($theme, 'fill-color');\n    }\n\n    %cbx-composite--invalid {\n        border-color: var-get($theme, 'error-color');\n    }\n\n    %cbx-composite--invalid--hover {\n        @if $variant == 'material' or  $variant == 'fluent' {\n            border-color: var-get($theme, 'error-color-hover');\n        } @else {\n            border-color: var-get($theme, 'error-color');\n        }\n    }\n\n    %cbx-composite--x--invalid {\n        border-color: var-get($theme, 'error-color');\n        background: var-get($theme, 'error-color');\n    }\n\n    %cbx-composite--x--hover {\n        border-color: var-get($theme, 'fill-color-hover');\n        background: var-get($theme, 'fill-color-hover');\n    }\n\n    %cbx-composite--x--invalid--hover {\n        @if $variant == 'material' or  $variant == 'fluent' {\n            border-color: var-get($theme, 'error-color-hover');\n            background: var-get($theme, 'error-color-hover');\n        } @else {\n            border-color: var-get($theme, 'error-color');\n            background: var-get($theme, 'error-color');\n        }\n    }\n\n    %cbx-composite--disabled {\n        border-color: var-get($theme, 'disabled-color');\n        background: transparent;\n\n        @if $bootstrap-theme {\n            border-color: var-get($theme, 'disabled-color-label');\n        }\n    }\n\n    %cbx-composite--x--disabled {\n        @if $variant != 'indigo-design' {\n            background: var-get($theme, 'disabled-color');\n        }\n\n        @if $variant == 'indigo-design' {\n            background: var-get($theme, 'disabled-indeterminate-color');\n            border-color: var-get($theme, 'disabled-indeterminate-color');\n        }\n\n        @if $bootstrap-theme {\n            border-color: var-get($theme, 'disabled-color');\n        }\n    }\n\n    %cbx-composite-mark {\n        position: absolute;\n        inset: 0;\n        stroke: var-get($theme, 'tick-color');\n        stroke-linecap: square;\n        stroke-width: $mark-stroke;\n        stroke-dasharray: $mark-length;\n        stroke-dashoffset: $mark-length;\n        fill: none;\n        opacity: 0;\n        z-index: 1;\n        transition: opacity .1s $ease-out-quad;\n    }\n\n    %igx-checkbox--indeterminate {\n        %cbx-composite-mark {\n            top: $mark-offset;\n            inset-inline-start: $mark-offset;\n        }\n\n        &:hover {\n            %cbx-composite {\n                border-color: var-get($theme, 'fill-color-hover');\n\n                @if $variant != 'fluent' {\n                    background: var-get($theme, 'fill-color-hover');\n                }\n\n                &::before {\n                    background: var-get($theme, 'fill-color-hover');\n                }\n            }\n        }\n\n        @if $variant == 'material' {\n            %cbx-composite--x--disabled {\n                border-color: var-get($theme, 'disabled-indeterminate-color');\n                background: var-get($theme, 'disabled-indeterminate-color');\n            }\n        }\n\n        @if $variant == 'fluent' {\n            %cbx-composite-mark {\n                stroke: transparent;\n            }\n\n            %cbx-composite {\n                background: transparent;\n\n                &::before {\n                    content: '';\n                    position: absolute;\n                    top: calc($size / 2 - rem(6px));\n                    inset-inline-start: calc($size / 2 - rem(6px));\n                    width: rem(10px);\n                    height: rem(10px);\n                    border-radius: border-radius(rem(2px));\n                    background: var-get($theme, 'fill-color');\n                    z-index: 1;\n                }\n            }\n\n            %cbx-composite--x--disabled {\n                background: transparent;\n\n                &::before {\n                    background: var-get($theme, 'disabled-color');\n                }\n            }\n        }\n    }\n\n    %igx-checkbox--indeterminate--invalid {\n        %cbx-composite--x {\n            background: var-get($theme, 'error-color');\n        }\n\n        @if $variant == 'fluent' {\n            %cbx-composite {\n                border-color: var-get($theme, 'error-color');\n\n                &::before {\n                    background: var-get($theme, 'error-color');\n                }\n            }\n\n            %cbx-composite--x {\n                background: transparent;\n            }\n\n            &:hover {\n                %cbx-composite {\n                    border-color: var-get($theme, 'error-color-hover');\n\n                    &::before {\n                        background: var-get($theme, 'error-color-hover');\n                    }\n                }\n            }\n        }\n    }\n\n    %cbx-composite-mark--x {\n        stroke-dashoffset: 0;\n        opacity: 1;\n        transition: all .2s $ease-out-quad, opacity .2s $ease-out-quad;\n    }\n\n    %cbx-composite-mark--in {\n        stroke-dashoffset: 41; /* length of path - adjacent line length */\n        opacity: 1;\n        transform: rotate(45deg) translateX(-#{$mark-x-factor}em);\n    }\n\n    %cbx-composite-mark--fluent {\n        @if $variant == 'fluent' {\n            @extend %cbx-composite-mark;\n            @extend %cbx-composite-mark--x;\n            stroke: var-get($theme, 'tick-color-hover');\n        }\n    }\n\n    %cbx-composite-mark--x--fluent {\n        @if $variant == 'fluent' {\n            stroke: var-get($theme, 'tick-color');\n        }\n    }\n\n    %cbx-composite-mark--invalid--fluent {\n        @if $variant == 'fluent' {\n            stroke: var-get($theme, 'error-color');\n        }\n    }\n\n    %cbx-composite-mark--in--fluent {\n        @if $variant == 'fluent' {\n            stroke: transparent;\n        }\n    }\n\n    %cbx-label {\n        display: inline-block;\n        color: var-get($theme, 'label-color');\n        cursor: pointer;\n        user-select: none;\n        word-wrap: break-all;\n\n        &:empty {\n            margin: 0;\n        }\n    }\n\n    %cbx-label-pos--before,\n    %cbx-label-pos--after {\n        &:empty {\n            margin: 0;\n        }\n    }\n\n    %cbx-label-pos--after {\n        margin-inline-start: $label-margin;\n    }\n\n    %cbx-label-pos--before {\n        margin-inline-end: $label-margin;\n        order: -1;\n    }\n\n    %cbx-label--invalid {\n        color: var-get($theme, 'error-color');\n    }\n\n    %cbx-label--disabled {\n        color: var-get($theme, 'disabled-color-label');\n    }\n\n    %cbx-ripple {\n        @include ripple($ripple-theme);\n        @include css-vars($ripple-theme);\n        display: $ripple-display;\n        position: absolute;\n        top: calc(50% - #{$ripple-radius});\n        width: $ripple-size;\n        height: $ripple-size;\n        border-radius: var-get($theme, 'border-radius-ripple');\n        overflow: hidden;\n        pointer-events: none;\n        filter: opacity(1);\n    }\n\n    %cbx-ripple--hover {\n        background: var-get($theme, 'empty-color');\n        transition: background .2s $ease-out-quad;\n        opacity: .06;\n\n        @if $theme-variant == 'dark' {\n            opacity: .12;\n        }\n    }\n\n    %cbx-ripple--hover-checked {\n        background: var-get($theme, 'fill-color');\n    }\n\n    %cbx-ripple--hover-invalid {\n        background: var-get($theme, 'error-color');\n    }\n\n    %igx-checkbox--focused {\n        @if $variant == 'fluent' {\n            position: relative;\n            $focus-outline-offset-top: rem(2px);\n            $focus-outline-offset-left: rem(2px);\n\n            &::after {\n                content: '';\n                position: absolute;\n                top: -$focus-outline-offset-top;\n                inset-inline-start: -$focus-outline-offset-left;\n                box-shadow: 0 0 0 rem(1px) var-get($theme, 'focus-outline-color');\n                width: calc(100% + (#{$focus-outline-offset-left} * 2));\n                height: calc(100% + (#{$focus-outline-offset-top} * 2));\n            }\n        }\n\n        @if $variant == 'bootstrap' {\n            %cbx-composite {\n                border-radius: var-get($theme, 'border-radius');\n                box-shadow: 0 0 0 rem(2px) var-get($theme, 'focus-outline-color');\n            }\n        }\n\n        @if $variant == 'indigo-design' {\n            %cbx-composite {\n                border-radius: var-get($theme, 'border-radius');\n                box-shadow: 0 0 0 rem(3px) var-get($theme, 'focus-outline-color');\n            }\n        }\n    }\n\n    %igx-checkbox--focused-checked {\n        @if $variant == 'indigo-design' {\n            %cbx-composite {\n                border-radius: var-get($theme, 'border-radius');\n                box-shadow: 0 0 0 rem(3px) var-get($theme, 'focus-outline-color-focused');\n            }\n        }\n    }\n\n    %igx-checkbox--focused-invalid {\n        @if $variant == 'bootstrap' {\n            %cbx-composite {\n                box-shadow: 0 0 0 rem(2px) var-get($theme, 'error-color-hover');\n            }\n        }\n\n        @if $variant == 'indigo-design' {\n            %cbx-composite {\n                box-shadow: 0 0 0 rem(3px) var-get($theme, 'error-color-hover');\n            }\n        }\n    }\n\n    %cbx-ripple--focused {\n        background: var-get($theme, 'empty-color');\n        transition: background .2s $ease-out-quad;\n        opacity: .12;\n\n        @if $theme-variant == 'dark' {\n            opacity: .24;\n        }\n    }\n\n    %cbx-ripple--focused-checked {\n        background: var-get($theme, 'fill-color');\n    }\n\n    %cbx-ripple--focused-invalid {\n        background: var-get($theme, 'error-color');\n    }\n\n    %cbx-ripple--pressed {\n        opacity: .12;\n\n        @if $theme-variant == 'dark' {\n            opacity: .24;\n        }\n    }\n\n    %cbx-display--plain {\n        %cbx-composite,\n        %cbx-composite::after,\n        %cbx-composite-mark,\n        %cbx-composite-mark--x {\n            transition: none;\n        }\n    }\n}\n\n/// Adds typography styles for the igx-checkbox component.\n/// Uses the 'subtitle-1' category from the typographic scale.\n/// @group typography\n/// @param {Map} $categories [(label: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n@mixin checkbox-typography(\n    $categories: (label: 'subtitle-1')\n) {\n    $label: map.get($categories, 'label');\n\n    %cbx-label {\n        @include type-style($label) {\n            margin-top: 0;\n            margin-bottom: 0;\n        }\n    }\n}\n","@use 'sass:map';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @requires $light-material-schema\n/// @param {Color} $toggle-button-background [null] - The select toggle button background color.\n/// @param {Color} $toggle-button-background-focus [null] - The select toggle button background color when the select is focused.\n/// @param {Color} $toggle-button-background-disabled [null] - The select toggle button background color when the select is disabled.\n/// @param {Color} $toggle-button-foreground [null] - The select toggle button foreground color.\n/// @param {Color} $toggle-button-foreground-focus [null] - The select toggle button foreground color when the select is focused.\n/// @param {Color} $toggle-button-foreground-disabled [null] - The select toggle button foreground color when the select is disabled.\n/// @param {Color} $toggle-button-foreground-filled [null] - The select toggle button foreground color when the select is filled.\n/// @param {Color} $toggle-button-background-focus--border [null] - The select toggle button background color when the select is focused in material border variant.\n/// @example scss Change the select empty list background\n///   $my-select-theme: igx-select-theme($empty-list-background);\n///   // Pass the theme to the css-vars mixin\n///   @include css-vars($my-select-theme);\n@function select-theme(\n    $schema: $light-material-schema,\n    $toggle-button-background: null,\n    $toggle-button-background-focus: null,\n    $toggle-button-background-disabled: null,\n    $toggle-button-foreground: null,\n    $toggle-button-foreground-focus: null,\n    $toggle-button-foreground-disabled: null,\n    $toggle-button-foreground-filled: null,\n    $toggle-button-background-focus--border: null,\n) {\n    $name: 'igx-select';\n    $selector: 'igx-select';\n\n    $select-schema: ();\n\n    @if map.has-key($schema, 'select') {\n        $select-schema: map.get($schema, 'select');\n    } @else {\n        $select-schema: $schema;\n    }\n\n    $theme: digest-schema($select-schema);\n    $meta: map.get($theme, '_meta');\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        toggle-button-background: $toggle-button-background,\n        toggle-button-background-focus: $toggle-button-background-focus,\n        toggle-button-background-disabled: $toggle-button-background-disabled,\n        toggle-button-foreground: $toggle-button-foreground,\n        toggle-button-foreground-focus: $toggle-button-foreground-focus,\n        toggle-button-foreground-disabled: $toggle-button-foreground-disabled,\n        toggle-button-foreground-filled: $toggle-button-foreground-filled,\n        toggle-button-background-focus--border: $toggle-button-background-focus--border,\n        _meta: map.merge(if($meta, $meta, ()), (\n            variant: map.get($schema, '_meta', 'theme')\n        )),\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin select($theme) {\n    @include css-vars($theme);\n    $variant: map.get($theme, '_meta', 'variant');\n\n    %igx-select {\n        position: relative;\n        display: block;\n    }\n\n    @if $variant == 'bootstrap' {\n        .igx-input-group--disabled {\n            %igx-select__toggle-button {\n                border-inline-start-width: rem(1px);\n                border-inline-start-style: solid;\n                border-inline-start-color: inherit;\n            }\n        }\n\n        igx-suffix + %igx-select__toggle-button {\n            border-inline-start-width: rem(1px);\n            border-inline-start-style: solid;\n            border-inline-start-color: inherit;\n        }\n    }\n\n    .igx-input-group {\n        %igx-select__toggle-button {\n            background: var-get($theme, 'toggle-button-background');\n            color: var-get($theme, 'toggle-button-foreground');\n        }\n    }\n\n    .igx-input-group--filled {\n        %igx-select__toggle-button {\n            color: var-get($theme, 'toggle-button-foreground-filled');\n        }\n    }\n\n    .igx-input-group--focused %igx-select__toggle-button {\n        background: var-get($theme, 'toggle-button-background-focus');\n        color: var-get($theme, 'toggle-button-foreground-focus');\n    }\n\n    .igx-input-group.igx-input-group--focused:not(.igx-input-group--box) {\n        %igx-select__toggle-button {\n            background: var-get($theme, 'toggle-button-background-focus--border');\n        }\n    }\n\n    .igx-input-group.igx-input-group--disabled.igx-input-group--filled,\n    .igx-input-group.igx-input-group--disabled {\n        %igx-select__toggle-button {\n            background: var-get($theme, 'toggle-button-background-disabled');\n            color: var-get($theme, 'toggle-button-foreground-disabled');\n        }\n    }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Dialog Theme\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n/// @param {Color} $background [null] - The dialog background color.\n/// @param {Color} $title-color [null] - The dialog title text color.\n/// @param {Color} $message-color [null] - The dialog message text color.\n/// @param {box-shadow} $shadow [null] - The shadow used for the dialog.\n/// @param {List} $border-radius [null] - The border radius used for dialog component.\n/// @param {Color} $border-color [null] - The border color used for dialog component.\n/// @requires $light-material-schema\n/// @example scss Change the background color\n///   $my-dialog-theme: dialog-theme($background: black);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-dialog-theme);\n@function dialog-theme(\n    $schema: $light-material-schema,\n    $elevations: null,\n\n    $border-radius: null,\n    $border-color: null,\n\n    $background: null,\n    $title-color: null,\n    $message-color: null,\n    $shadow: null,\n) {\n    $name: 'igx-dialog';\n    $selector: '.igx-dialog';\n\n    $dialog-schema: ();\n\n    @if map.has-key($schema, 'dialog') {\n        $dialog-schema: map.get($schema, 'dialog');\n    } @else {\n        $dialog-schema: $schema;\n    }\n\n    $theme: digest-schema($dialog-schema);\n    $meta: map.get($theme, '_meta');\n\n    @if not($title-color) and $background{\n        $title-color: text-contrast($background);\n    }\n\n    @if not($message-color) and $background{\n        @if meta.type-of($background) == 'color' {\n            $message-color: rgba(text-contrast($background), .8);\n        }\n    }\n\n    @if not($shadow) {\n        $elevation: map.get($dialog-schema, 'elevation');\n        $shadow: elevation($elevation);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        border-radius: $border-radius,\n        background: $background,\n        title-color: $title-color,\n        message-color: $message-color,\n        shadow: $shadow,\n        border-color: $border-color,\n        _meta: map.merge(if($meta, $meta, ()), (\n            variant: map.get($schema, '_meta', 'theme')\n        )),\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin dialog($theme) {\n    @include css-vars($theme);\n\n    $variant: map.get($theme, '_meta', 'variant');\n    $bootstrap-theme: map.get($theme, variant) == 'bootstrap';\n\n    $dialog-min-width: map.get((\n        material: rem(280px),\n        fluent: rem(288px),\n        bootstrap: rem(288px),\n    ), $variant);\n\n    $dialog-title-padding: map.get((\n        material: rem(24px) rem(24px) rem(12px) rem(24px),\n        fluent: rem(16px) rem(24px) rem(24px) rem(24px),\n        bootstrap: rem(16px),\n        indigo-design: rem(16px) rem(24px),\n    ), $variant);\n\n    $dialog-message-padding: map.get((\n        material: rem(12px) rem(24px),\n        fluent: 0 rem(24px) rem(20px) rem(24px),\n        bootstrap: rem(16px),\n        indigo-design: 0 rem(24px) rem(8px) rem(24px),\n    ), $variant);\n\n    $dialog-actions-padding: map.get((\n        material: rem(8px),\n        fluent: 0 rem(24px) rem(24px) rem(24px),\n        bootstrap: rem(16px),\n        indigo-design: rem(8px),\n    ), $variant);\n\n    %igx-dialog-display {\n        outline-style: none;\n    }\n\n    %igx-dialog--hidden {\n        display: none;\n    }\n\n    %igx-dialog-window {\n        position: relative;\n        min-width: $dialog-min-width;\n        border: rem(1px) solid var-get($theme, 'border-color');\n        border-radius: var-get($theme, 'border-radius');\n        background: var-get($theme, 'background');\n        box-shadow: var-get($theme, 'shadow');\n        overflow: hidden;\n\n        .igx-calendar {\n            min-width: rem(320px);\n        }\n\n        .igx-calendar--vertical {\n            min-width: rem(496px);\n        }\n    }\n\n    %igx-dialog-title {\n        display: flex;\n        color: var-get($theme, 'title-color');\n        padding: $dialog-title-padding;\n\n        @if $bootstrap-theme {\n            border-bottom: rem(1px) solid var-get($theme, 'border-color');\n        }\n    }\n\n    %igx-dialog-content {\n        color: var-get($theme, 'message-color');\n        padding: $dialog-message-padding;\n        // The 2 rules below are related to https://github.com/IgniteUI/igniteui-angular/issues/11300\n        position: relative;\n        z-index: 0;\n    }\n\n    %igx-dialog-message {\n        display: inline-block;\n        max-width: 40ch;\n\n        @media all and (-ms-high-contrast: none)\n        {\n            max-width: map.get((\n                material: 62ch,\n                fluent: 48ch,\n                bootstrap: 60ch,\n                indigo-design: 48ch,\n            ), $variant);\n        }\n    }\n\n    %igx-dialog-actions {\n        display: flex;\n        flex-flow: row nowrap;\n        justify-content: flex-end;\n        padding: $dialog-actions-padding;\n\n        @if $bootstrap-theme {\n            border-top: rem(1px) solid var-get($theme, 'border-color');\n        }\n\n        button + button {\n            margin-inline-start: rem(8px);\n        }\n    }\n}\n\n/// Adds typography styles for the igx-dialog component.\n/// Uses the 'h6' and 'body-1' category from the typographic scale.\n/// @group typography\n/// @param {Map} $categories [(title: 'h6', content: 'body-1')] - The categories from the typographic scale used for type styles.\n@mixin dialog-typography($categories: (\n    title: 'h6',\n    content: 'body-1')\n) {\n    $title: map.get($categories, 'title');\n    $content: map.get($categories, 'content');\n\n    %igx-dialog-title {\n        @include type-style($title) {\n            margin: 0;\n        }\n    }\n\n    %igx-dialog-content {\n        @include type-style($content) {\n            margin: 0;\n        }\n\n        > * {\n            letter-spacing: normal;\n        }\n    }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// Generates a drop-down theme.\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n/// @param {Color} $background-color [null] - The drop-down background color.\n/// @param {Color} $header-text-color [null] - The drop-down header text color.\n/// @param {Color} $item-text-color [null] - The drop-down text color.\n/// @param {Color} $hover-item-text-color [null] - The drop-down hover text color.\n/// @param {Color} $hover-item-background [null] - The drop-down hover item background color.\n/// @param {Color} $focused-item-background [null] - The drop-down focused item background color.\n/// @param {Color} $focused-item-text-color [null] - The drop-down focused item text color.\n/// @param {Color} $selected-item-background [null] - The drop-down selected item background color.\n/// @param {Color} $selected-item-text-color [null] - The drop-down selected item text color.\n/// @param {Color} $selected-hover-item-background [null] - The drop-down selected item hover background color.\n/// @param {Color} $selected-hover-item-text-color [null] - The drop-down selected item hover text color.\n/// @param {Color} $selected-focus-item-background [null] - The drop-down selected item focus background color.\n/// @param {Color} selected-focus-item-text-color [null] - The drop-down selected item focus text color.\n/// @param {Color} $disabled-item-background [null] - The drop-down disabled item background color.\n/// @param {Color} $disabled-item-text-color [null] - The drop-down disabled item text color.\n/// @param {box-shadow} $shadow [null] - Sets a shadow to be used for the drop-down.\n/// @param {Number} $border-width [null] - The border width used for drop-down component.\n/// @param {Color} $border-color [null] - The border color used for drop-down component.\n/// @param {List} $border-radius [null] - The border radius used for drop-down component.\n/// @param {List} $item-border-radius [null] - The border radius used for drop-down items.\n/// @requires $light-material-schema\n/// @example scss Change the background-color of the dropdown\n///   $my-dropdown-theme: drop-down-theme($background-color: #09f);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-dropdown-theme);\n@function drop-down-theme(\n    $schema: $light-material-schema,\n    $elevations: null,\n\n    $border-radius: null,\n    $item-border-radius: null,\n\n    $background-color: null,\n    $header-text-color: null,\n\n    $item-text-color: null,\n    $hover-item-text-color: null,\n\n    $hover-item-background: null,\n\n    $focused-item-background: null,\n    $focused-item-text-color: null,\n\n    $selected-item-background: null,\n    $selected-item-text-color: null,\n\n    $selected-hover-item-background: null,\n    $selected-hover-item-text-color: null,\n\n    $selected-focus-item-background: null,\n    $selected-focus-item-text-color: null,\n\n    $disabled-item-background: null,\n    $disabled-item-text-color: null,\n    $border-color: null,\n    $border-width: null,\n    $shadow: null,\n    $size: null\n) {\n    $name: 'igx-drop-down';\n    $selector: '.igx-drop-down__list, .igx-grid-toolbar__dd-list';\n    $drop-down-schema: ();\n\n    @if map.has-key($schema, 'drop-down') {\n        $drop-down-schema: map.get($schema, 'drop-down');\n    } @else {\n        $drop-down-schema: $schema;\n    }\n\n    $theme: digest-schema($drop-down-schema);\n    $meta: map.get($theme, '_meta');\n\n    @if not($item-text-color) and $background-color {\n        $item-text-color: text-contrast($background-color);\n    }\n\n    @if not($hover-item-background) and $background-color {\n        $hover-item-text-color: text-contrast($background-color);\n\n        @if meta.type-of($background-color) == 'color' {\n            $hover-item-background: rgba(text-contrast($background-color), .12);\n        }\n    }\n\n    @if not($hover-item-text-color) and $background-color {\n        $hover-item-text-color: text-contrast($background-color);\n    }\n\n    @if not($focused-item-background) and $background-color {\n        $focused-item-text-color: text-contrast($background-color);\n\n        @if meta.type-of($background-color) == 'color' {\n            $focused-item-background: rgba(text-contrast($background-color), .12);\n        }\n    }\n\n    @if not($focused-item-text-color) and $focused-item-background {\n        $focused-item-text-color: text-contrast($focused-item-background);\n    }\n\n    @if not($selected-item-text-color) and $selected-item-background {\n        $selected-item-text-color: text-contrast($selected-item-background);\n    }\n\n    @if not($selected-hover-item-text-color) and $selected-hover-item-background {\n        $selected-hover-item-text-color: text-contrast($selected-hover-item-background);\n    }\n\n    @if not($selected-focus-item-text-color) and $selected-focus-item-background {\n        $selected-focus-item-text-color: text-contrast($selected-focus-item-background);\n    }\n\n    @if not($selected-focus-item-text-color) and $selected-focus-item-background {\n        $selected-focus-item-text-color: text-contrast($selected-focus-item-background);\n    }\n\n    @if not($disabled-item-text-color) and $background-color {\n        @if meta.type-of($background-color) == 'color' {\n            $disabled-item-text-color: rgba(text-contrast($background-color), .36);\n        }\n    }\n\n    @if not($disabled-item-text-color) and $disabled-item-background {\n        @if meta.type-of($disabled-item-background) == 'color' {\n            $disabled-item-text-color: rgba(text-contrast($disabled-item-background), .36);\n        }\n    }\n\n    @if not($header-text-color) and $background-color {\n        @if meta.type-of($background-color) == 'color' {\n            $header-text-color: rgba(text-contrast($background-color), .7);\n        }\n    }\n\n    @if not($shadow) {\n        $elevation: map.get($drop-down-schema, 'elevation');\n        $shadow: elevation($elevation);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        background-color: $background-color,\n        border-radius: $border-radius,\n        item-border-radius: $item-border-radius,\n        header-text-color: $header-text-color,\n        item-text-color: $item-text-color,\n        hover-item-text-color: $hover-item-text-color,\n        hover-item-background: $hover-item-background,\n        focused-item-background: $focused-item-background,\n        focused-item-text-color: $focused-item-text-color,\n        selected-item-background: $selected-item-background,\n        selected-item-text-color: $selected-item-text-color,\n        selected-hover-item-background: $selected-hover-item-background,\n        selected-hover-item-text-color: $selected-hover-item-text-color,\n        selected-focus-item-background: $selected-focus-item-background,\n        selected-focus-item-text-color: $selected-focus-item-text-color,\n        disabled-item-background: $disabled-item-background,\n        disabled-item-text-color: $disabled-item-text-color,\n        shadow: $shadow,\n        border-color: $border-color,\n        border-width: $border-width,\n        size: $size,\n        _meta: map.merge(if($meta, $meta, ()), (\n            variant: map.get($schema, '_meta', 'theme')\n        )),\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin drop-down($theme) {\n    @include css-vars($theme);\n    $variant: map.get($theme, '_meta', 'variant');\n\n    %igx-drop-down {\n        position: absolute;\n    }\n\n    %igx-drop-down__list {\n        @include sizable();\n\n        --component-size: var(--ig-size, var(--ig-size-large));\n        --dropdown-size: var(--component-size);\n        overflow: hidden;\n        border-radius: var-get($theme, 'border-radius');\n        background: var-get($theme, 'background-color');\n        box-shadow: var-get($theme, 'shadow');\n        min-width: rem(128px);\n        border: var-get($theme, 'border-width') solid var-get($theme, 'border-color');\n    }\n\n    %igx-drop-down__list-scroll {\n        overflow-y: auto;\n        overflow-x: hidden;\n        -webkit-overflow-scrolling: touch;\n        position: relative;\n    }\n\n    %igx-drop-down__content {\n        display: flex;\n        width: 100%;\n        align-items: center;\n        gap: rem(8px)\n    }\n\n    %igx-drop-down__inner {\n        display: block;\n        @include ellipsis();\n        margin-inline-end: auto;\n    }\n\n    %igx-drop-down__inner + [igxSuffix],\n    %igx-drop-down__inner + igx-suffix {\n        margin-inline-end: 0;\n    }\n\n    %igx-drop-down__header,\n    %igx-drop-down__item {\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n        width: 100%;\n        white-space: nowrap;\n        position: relative;\n        height: var-get($theme, 'size');\n\n        igx-divider {\n            position: absolute;\n            width: 100%;\n            inset-inline-start: 0;\n            bottom: 0;\n        }\n\n        igx-icon {\n            justify-content: center;\n            --component-size: var(--dropdown-size);\n        }\n    }\n\n    %igx-drop-down__item {\n        @include sizable();\n        --component-size: (--dropdown-size);\n\n        color: var-get($theme, 'item-text-color');\n        cursor: pointer;\n        padding-inline: pad-inline(rem(16px), rem(20px), rem(24px));\n        border-radius: var-get($theme, 'item-border-radius');\n\n        &:focus {\n            outline: 0;\n            outline-color: transparent;\n            background: var-get($theme, 'focused-item-background');\n            color: var-get($theme, 'focused-item-text-color');\n        }\n\n        &:hover {\n            background: var-get($theme, 'hover-item-background');\n            color: var-get($theme, 'hover-item-text-color');\n        }\n    }\n\n    %igx-drop-down__header {\n        color: var-get($theme, 'header-text-color');\n        pointer-events: none;\n        padding-inline: pad-inline(rem(8px), rem(12px), rem(16px));\n    }\n\n    %igx-drop-down__group {\n        pointer-events: auto;\n\n        label {\n            @extend %igx-drop-down__header !optional;\n        }\n    }\n\n    %igx-drop-down__item--focused {\n        background: var-get($theme, 'focused-item-background');\n        color: var-get($theme, 'focused-item-text-color');\n\n        &:hover {\n            color: var-get($theme, 'focused-item-text-color');\n            background: var-get($theme, 'focused-item-background');\n        }\n    }\n\n    %igx-drop-down__item--selected {\n        background: var-get($theme, 'selected-item-background');\n        color: var-get($theme, 'selected-item-text-color');\n\n        &:hover {\n            background: var-get($theme, 'selected-hover-item-background');\n            color: var-get($theme, 'selected-hover-item-text-color');\n        }\n    }\n\n    %igx-drop-down__item--selected--focused {\n        background: var-get($theme, 'selected-focus-item-background');\n        color: var-get($theme, 'selected-focus-item-text-color');\n    }\n\n    %igx-drop-down__item--disabled {\n        background: var-get($theme, 'disabled-item-background');\n        color: var-get($theme, 'disabled-item-text-color');\n        cursor: default;\n        pointer-events: none;\n\n        &:hover {\n            background: var-get($theme, 'disabled-item-background');\n        }\n    }\n}\n\n/// Adds typography styles for the igx-list component.\n/// Uses the 'caption' and 'subtitle-2'\n/// categories from the typographic scale.\n/// @group typography\n/// @param {Map} $categories [(header: 'overline', item: 'body-2', select-item: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n@mixin drop-down-typography(\n    $categories: (\n        header: 'overline',\n        item: 'body-2',\n        select-item: 'subtitle-1'\n    )\n) {\n    $header: map.get($categories, 'header');\n    $item: map.get($categories, 'item');\n    $select-item: map.get($categories, 'select-item');\n\n    %igx-drop-down__header,\n    %igx-drop-down__group > label {\n        @include type-style($header) {\n            margin: 0;\n        }\n    }\n\n    %igx-drop-down__item {\n        @include type-style($item) {\n            margin: 0;\n        }\n    }\n}\n","@use 'sass:map';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Color} $color [null] - The icon color.\n/// @param {String} $size [null] - The icon size.\n/// @param {Color} $disabled-color [null] - The disabled icon color.\n/// @requires $light-material-schema\n/// @example scss Change the icon color\n///   $my-icon-theme: icon-theme($color: orange);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-icon-theme);\n@function icon-theme(\n    $schema: $light-material-schema,\n\n    $color: null,\n    $size: null,\n    $disabled-color: null\n) {\n    $name: 'igx-icon';\n    $icon-schema: ();\n\n    @if map.has-key($schema, 'icon') {\n        $icon-schema: map.get($schema, 'icon');\n    } @else {\n        $icon-schema: $schema;\n    }\n\n    $theme: digest-schema($icon-schema);\n\n    @return extend($theme, (\n        name: $name,\n        color: $color,\n        size: $size,\n        disabled-color: $disabled-color\n    ));\n}\n\n// stylelint-disable font-family-no-missing-generic-family-keyword\n/// @param {Map} $theme - The theme used to style the component.\n@mixin icon($theme) {\n    @include css-vars($theme);\n\n    $size: var-get($theme, 'size');\n\n    // The igx-icon tag selector in front of the placeholder is on purpose\n    // this approach effectively enables us to eliminate any potential style conflicts without the need of !important\n    %igx-icon-display {\n        @include sizable();\n        --component-size: var(--ig-size, var(--ig-size-large));\n\n        display: inline-flex;\n        font-size: $size;\n        color: var-get($theme, 'color');\n        direction: inherit;\n\n        div,\n        svg {\n            display: block;\n            width: inherit;\n            height: inherit;\n            fill: currentColor;\n        }\n\n        &[igxPrefix].material-icons,\n        &[igxSuffix].material-icons {\n            font-family: 'Material Icons';\n        }\n    }\n\n    // Using \"em\" unit here is on purpose see:\n    // https://github.com/IgniteUI/igniteui-angular/issues/13394#event-10241243103\n    igx-icon%igx-icon-display {\n        width: 1em;\n        height: 1em;\n    }\n\n    %igx-icon--success {\n        color: color($color: 'success');\n    }\n\n    %igx-icon--error {\n        color: color($color: 'error');\n    }\n\n    %igx-icon--inactive {\n        color: var-get($theme, 'disabled-color') !important;\n        opacity: .54;\n    }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'igniteui-theming/sass/animations/easings' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n/// @param {Color} $idle-text-color [null] - The input text color in the idle state.\n/// @param {Color} $filled-text-color [null] - The input text color in the filled state.\n/// @param {Color} $focused-text-color [null] - The input text color in the focused state.\n/// @param {Color} $disabled-text-color [null] - The input text color in the disabled state.\n/// @param {Color} $helper-text-color [null] - The helper text color.\n/// @param {Color} $input-prefix-color [null] - The input prefix color in the idle state.\n/// @param {Color} $input-prefix-background [null] - The background color of an input prefix in the idle state.\n/// @param {Color} $input-prefix-color--filled [null] - The input prefix color in the filled state.\n/// @param {Color} $input-prefix-background--filled] - The background color of an input prefix in the filled state.\n/// @param {Color} $input-prefix-color--focused [null] - The input prefix color in the focused state.\n/// @param {Color} $input-prefix-background--focused [null] - The background color of an input prefix in the focused state.\n/// @param {Color} $input-suffix-color [null] - The input suffix color in the idle state.\n/// @param {Color} $input-suffix-background [null] - The background color of an input suffix in the idle state.\n/// @param {Color} $input-suffix-color--filled [null] - The input suffix color in the filled state.\n/// @param {Color} $input-suffix-background-filled [null] - The background color of an input suffix in the filled state.\n/// @param {Color} $input-suffix-color--focused [null] - The input suffix color in the focused state.\n/// @param {Color} $input-suffix-background--focused [null] - The background color of an input suffix in the focused state.\n/// @param {Color} $idle-secondary-color [null] - The label color in the idle state.\n/// @param {Color} $filled-secondary-color [null] - The label color in the filled state.\n/// @param {Color} $focused-secondary-color [null] - The label color in the focused state.\n/// @param {Color} $idle-bottom-line-color [null] - The bottom line and border colors in the idle state.\n/// @param {Color} $hover-bottom-line-color [null] - The bottom line and border colors in the hover state.\n/// @param {Color} $focused-bottom-line-color [null] - The bottom line and border colors in the focused state.\n/// @param {Color} $interim-bottom-line-color [null] - The bottom line and border colors during the to-focused transition.\n/// @param {Color} $disabled-bottom-line-color [null] - The bottom line and border colors in the disabled state.\n/// @param {Color} $border-color [null] - The border color for input groups of type border and fluent.\n/// @param {Color} $hover-border-color [null] - The hover input border for input groups of type border and fluent.\n/// @param {Color} $focused-border-color [null] - The focused input border color for input groups of type border and fluent.\n/// @param {Color} $disabled-border-color [null] - The disabled border color for input groups of type border and fluent.\n/// @param {Color} $box-background [null] - The background color of an input group of type box.\n/// @param {Color} $box-background-hover [null] - The background color on hover of an input group of type box.\n/// @param {Color} $box-background-focus [null] - The background color on focus of an input group of type box.\n/// @param {Color} $box-disabled-background [null] - The background color of an input group of type box in the disabled state.\n/// @param {Color} $border-background [null] - The background color of an input group of type border.\n/// @param {Color} $border-disabled-background [null] - The background color of an input group of type border in the disabled state.\n/// @param {Color} $search-background [null] - The background color of an input group of type search.\n/// @param {Color} $search-disabled-background [null] - The background color of an input group of type search in the disabled state.\n/// @param {box-shadow} $search-resting-shadow [null] - The shadow color of an input group of type search in its resting state.\n/// @param {box-shadow} $search-hover-shadow [null] - The shadow color of an input group of type search in its hover state.\n/// @param {box-shadow} $search-disabled-shadow [null] - The shadow color of an input group of type search in its disabled state.\n/// @param {Color} $success-secondary-color [null] - The success color used in the valid state.\n/// @param {Color} $warning-secondary-color [null] - The warning color used in the warning state.\n/// @param {Color} $error-secondary-color [null] - The error color used in the error state.\n/// @param {List} $box-border-radius [null] - The border radius used for box input.\n/// @param {List} $border-border-radius [null] - The border radius used for border input.\n/// @param {List} $search-border-radius [null] - The border radius used for search input.\n/// @param {Color} placeholder-color [null] - The placeholder color of an input group.\n/// @param {Color} disabled-placeholder-color [null] - The disabled placeholder color of an input group.\n/// @example scss Change the focused border and label colors\n///   $my-input-group-theme: input-group-theme($focused-secondary-color: pink, $focused-bottom-line-color: pink);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-input-group-theme);\n@function input-group-theme(\n    $schema: $light-material-schema,\n    $elevations: null,\n\n    $box-background: null,\n    $box-background-hover: null,\n    $box-background-focus: null,\n    $box-disabled-background: null,\n    $box-border-radius: null,\n\n    $idle-text-color: null,\n    $filled-text-color: null,\n    $focused-text-color: null,\n    $helper-text-color: null,\n    $disabled-text-color: null,\n\n    $idle-secondary-color: null,\n    $filled-secondary-color: null,\n    $focused-secondary-color: null,\n\n    $idle-bottom-line-color: null,\n    $hover-bottom-line-color: null,\n    $focused-bottom-line-color: null,\n    $interim-bottom-line-color: null,\n    $disabled-bottom-line-color: null,\n\n    $border-color: null,\n    $hover-border-color: null,\n    $focused-border-color: null,\n    $disabled-border-color: null,\n\n    $border-border-radius: null,\n    $border-background: null,\n    $border-disabled-background: null,\n\n    $search-background: null,\n    $search-disabled-background: null,\n    $search-border-radius: null,\n    $search-resting-shadow: null,\n    $search-hover-shadow: null,\n    $search-disabled-shadow: null,\n\n    $success-secondary-color: null,\n    $warning-secondary-color: null,\n    $error-secondary-color: null,\n    $success-shadow-color: null,\n    $error-shadow-color: null,\n\n    $placeholder-color: null,\n    $disabled-placeholder-color: null,\n\n    $input-prefix-color: null,\n    $input-prefix-background: null,\n    $input-prefix-color--filled: null,\n    $input-prefix-background--filled: null,\n    $input-prefix-color--focused: null,\n    $input-prefix-background--focused: null,\n\n    $input-suffix-color: null,\n    $input-suffix-background: null,\n    $input-suffix-color--filled: null,\n    $input-suffix-background--filled: null,\n    $input-suffix-color--focused: null,\n    $input-suffix-background--focused: null,\n    $size: null,\n) {\n    $name: 'igx-input-group';\n    $selector: 'igx-input-group, igx-date-range-start, igx-date-range-end';\n    $input-group-schema: ();\n\n    @if map.has-key($schema, 'input-group') {\n        $input-group-schema: map.get($schema, 'input-group');\n    } @else {\n        $input-group-schema: $schema;\n    }\n\n    $theme: digest-schema($input-group-schema);\n    $search-resting-elevation: map.get($input-group-schema, 'search-resting-elevation');\n    $search-hover-elevation: map.get($input-group-schema, 'search-hover-elevation');\n    $search-disabled-elevation: map.get($input-group-schema, 'search-disabled-elevation');\n\n    @if not($placeholder-color) and $box-background {\n        $placeholder-color: text-contrast($box-background);\n    }\n\n    @if not($placeholder-color) and $box-background-hover {\n        $placeholder-color: text-contrast($box-background-hover);\n    }\n\n    @if not($placeholder-color) and $box-background-focus {\n        $placeholder-color: text-contrast($box-background-focus);\n    }\n\n    @if not($placeholder-color) and $search-background {\n        $placeholder-color: text-contrast($search-background);\n    }\n\n    @if not($search-resting-shadow) {\n        $search-resting-shadow: elevation($search-resting-elevation);\n    }\n\n    @if not($search-hover-shadow) {\n        $search-hover-shadow: elevation($search-hover-elevation);\n    }\n\n    @if not($search-disabled-shadow) {\n        $search-disabled-shadow: elevation($search-disabled-elevation);\n    }\n\n    @if not($input-prefix-background--filled) and $input-prefix-background {\n        $input-prefix-background--filled: $input-prefix-background;\n    }\n\n    @if not($input-prefix-background--focused) and $input-prefix-background {\n        $input-prefix-background--focused: $input-prefix-background;\n    }\n\n    @if not($input-prefix-color) and $input-prefix-background {\n        $input-prefix-color: text-contrast($input-prefix-background);\n    }\n\n    @if not($input-prefix-color--filled) and $input-prefix-background--filled {\n        $input-prefix-color--filled: text-contrast($input-prefix-background--filled);\n    }\n\n    @if not($input-prefix-color--focused) and $input-prefix-background--focused {\n        $input-prefix-color--focused: text-contrast($input-prefix-background--focused);\n    }\n\n    @if not($input-suffix-color) and $input-suffix-background {\n        $input-suffix-color: text-contrast($input-suffix-background);\n    }\n\n    @if not($input-suffix-color--filled) and $input-suffix-background--filled {\n        $input-suffix-color--filled: text-contrast($input-suffix-background--filled);\n    }\n\n    @if not($input-suffix-color--focused) and $input-suffix-background--focused {\n        $input-suffix-color--focused: text-contrast($input-suffix-background--focused);\n    }\n\n    @if not($box-border-radius) {\n        $box-border-radius: map.get($theme, 'box-border-radius');\n    }\n\n    @if not($border-border-radius) {\n        $border-border-radius: map.get($theme, 'border-border-radius');\n    }\n\n    @if not($search-border-radius) {\n        $search-border-radius: map.get($theme, 'search-border-radius');\n    }\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        idle-text-color: $idle-text-color,\n        filled-text-color: $filled-text-color,\n        focused-text-color: $focused-text-color,\n        disabled-text-color: $disabled-text-color,\n        helper-text-color: $helper-text-color,\n        box-border-radius: $box-border-radius,\n        border-border-radius: $border-border-radius,\n        search-border-radius: $search-border-radius,\n        idle-secondary-color: $idle-secondary-color,\n        filled-secondary-color: $filled-secondary-color,\n        focused-secondary-color: $focused-secondary-color,\n        idle-bottom-line-color: $idle-bottom-line-color,\n        hover-bottom-line-color: $hover-bottom-line-color,\n        focused-bottom-line-color: $focused-bottom-line-color,\n        interim-bottom-line-color: $interim-bottom-line-color,\n        disabled-bottom-line-color: $disabled-bottom-line-color,\n        border-color: $border-color,\n        hover-border-color: $hover-border-color,\n        focused-border-color: $focused-border-color,\n        disabled-border-color: $disabled-border-color,\n        box-background: $box-background,\n        box-background-hover: $box-background-hover,\n        box-background-focus: $box-background-focus,\n        box-disabled-background: $box-disabled-background,\n        border-background: $border-background,\n        border-disabled-background: $border-disabled-background,\n        search-background: $search-background,\n        search-disabled-background: $search-disabled-background,\n        search-resting-shadow: $search-resting-shadow,\n        search-hover-shadow: $search-hover-shadow,\n        search-disabled-shadow: $search-disabled-shadow,\n        success-secondary-color: $success-secondary-color,\n        warning-secondary-color: $warning-secondary-color,\n        error-secondary-color: $error-secondary-color,\n        success-shadow-color: $success-shadow-color,\n        error-shadow-color: $error-shadow-color,\n        placeholder-color: $placeholder-color,\n        disabled-placeholder-color: $disabled-placeholder-color,\n        input-prefix-color: $input-prefix-color,\n        input-prefix-background: $input-prefix-background,\n        input-prefix-color--filled: $input-prefix-color--filled,\n        input-prefix-background--filled: $input-prefix-background--filled,\n        input-prefix-color--focused: $input-prefix-color--focused,\n        input-prefix-background--focused: $input-prefix-background--focused,\n        input-suffix-color: $input-suffix-color,\n        input-suffix-background: $input-suffix-background,\n        input-suffix-color--filled: $input-suffix-color--filled,\n        input-suffix-background--filled: $input-suffix-background--filled,\n        input-suffix-color--focused: $input-suffix-color--focused,\n        input-suffix-background--focused: $input-suffix-background--focused,\n        variant: map.get($schema, '_meta', 'theme'),\n        size: $size,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin input-group($theme) {\n    // The --variant CSS produced by css-vars is needed also\n    // when dynamically switching between the input `type` attribute.\n    @include css-vars($theme);\n\n    $variant: map.get($theme, 'variant');\n    $transition-timing: .25s $out-cubic;\n    $material-theme: $variant == 'material';\n    $indigo-theme: $variant == 'indigo-design';\n    $fluent-theme: $variant == 'fluent';\n    $bootstrap-theme: $variant == 'bootstrap';\n    $NOT-material-theme: $variant != 'material';\n    $NOT-indigo-theme: $variant != 'indigo-design';\n    $NOT-fluent-theme: $variant != 'fluent';\n    $NOT-bootstrap-theme: $variant != 'bootstrap';\n\n    $required-symbol: '*';\n    $required-symbol-margin: rem(2px);\n\n    // This creates an inverse relationship\n    // between the value of the base scale size and\n    // the sizing of all inner elements.\n    // i.e. the bigger the scale size,\n    // the smaller the padding of the inner items.\n    $base-scale-size: (\n        'comfortable': 16px,\n        'cosy': 19px,\n        'compact': 22px\n    );\n\n    $bootstrap-inline-padding: (\n        'comfortable': rem(16px),\n        'cosy': rem(12px),\n        'compact': rem(8px)\n    );\n\n    $bootstrap-block-padding: (\n        'comfortable': rem(8px),\n        'cosy': rem(6px),\n        'compact': rem(4px)\n    );\n\n    $bootstrap-font-size: (\n        'comfortable': rem(20px),\n        'cosy': rem(16px),\n        'compact': rem(14px),\n    );\n\n    $input-top-padding: rem(20px);\n    $input-bottom-padding: rem(6px);\n\n    $bundle-padding-top: (\n        'comfortable': rem(18px, map.get($base-scale-size, 'comfortable')),\n        'cosy': rem(18px, map.get($base-scale-size, 'cosy')),\n        'compact': rem(18px, map.get($base-scale-size, 'compact')),\n    );\n\n    $hint-spacing-block: map.get((\n        material: rem(5px),\n        fluent: rem(5px),\n        bootstrap: rem(4px),\n        indigo-design: rem(6px),\n    ), $variant);\n\n    $hint-spacing-inline: map.get((\n        material: rem(16px),\n        fluent: 0,\n        bootstrap: 0,\n        indigo-design: rem(12px),\n    ), $variant);\n\n    // Base Start\n    %form-group-prefix--upload {\n        padding: 0;\n    }\n\n    %form-group-prefix {\n        color: var-get($theme, 'input-prefix-color');\n        background: var-get($theme, 'input-prefix-background');\n        grid-area: 1 / 1 / auto / auto;\n    }\n\n    %form-group-suffix {\n        color: var-get($theme, 'input-suffix-color');\n        background: var-get($theme, 'input-suffix-background');\n        grid-area: 1 / 3 / auto / auto;\n    }\n\n    %form-group-prefix,\n    %form-group-suffix {\n        position: relative;\n        display: inline-flex;\n        width: max-content;\n        align-items: center;\n\n        @if $indigo-theme {\n            height: calc(100% - #{rem(1px)}) !important;\n        } @else {\n            height: 100% !important;\n        }\n        transition: color $transition-timing, background $transition-timing;\n\n        @if $material-theme {\n            padding-inline: pad-inline(rem(12px), rem(14px), rem(16px));\n        } @else {\n            padding-inline: pad-inline(rem(8px), rem(12px), rem(16px));\n        }\n    }\n\n    igx-input-group,\n    igx-date-range-start,\n    igx-date-range-end {\n        --theme: #{map.get($theme, 'variant')};\n    }\n\n    %form-group-display--box {\n        %form-group-border {\n            margin-bottom: 0;\n        }\n    }\n\n    %form-group-display {\n        @include sizable();\n        --component-size: var(--ig-size, var(--ig-size-large));\n        --input-size: var(--component-size);\n\n        position: relative;\n        display: block;\n        color: var-get($theme, 'idle-text-color');\n\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix;\n            outline-style: none;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix;\n            outline-style: none;\n        }\n\n        input,\n        textarea,\n        span {\n            font: inherit;\n            margin: 0;\n        }\n\n        input[type='file'] {\n            @include hide-default();\n        }\n\n        textarea {\n            overflow: auto;\n        }\n\n        input[type='number'] {\n            -moz-appearance: textfield;\n        }\n\n        // Don't show the number spinner\n        input[type='number']::-webkit-inner-spin-button {\n            -webkit-appearance: none;\n            height: auto;\n        }\n\n        input[type='search']::-webkit-search-cancel-button,\n        input[type='search']::-webkit-search-decoration {\n            -webkit-appearance: none;\n        }\n\n        igx-icon,\n        igx-icon[igxPrefix],\n        igx-icon[igxSuffix] {\n            --component-size: var(--input-size);\n        }\n    }\n\n    %form-group-display--no-margin {\n        margin-block-start: 0;\n    }\n\n    %form-group-display--filled {\n        color: var-get($theme, 'input-prefix-color--filled');\n\n        igx-prefix,\n        [igxPrefix] {\n            color: var-get($theme, 'input-prefix-color--filled');\n            background: var-get($theme, 'input-prefix-background--filled');\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            color: var-get($theme, 'input-suffix-color--filled');\n            background: var-get($theme, 'input-suffix-background--filled');\n        }\n    }\n\n    %form-group-display--focused {\n        color: var-get($theme, 'input-prefix-color--focused');\n\n        igx-prefix,\n        [igxPrefix] {\n            color: var-get($theme, 'input-prefix-color--focused');\n            background: var-get($theme, 'input-prefix-background--focused');\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            color: var-get($theme, 'input-suffix-color--focused');\n            background: var-get($theme, 'input-suffix-background--focused');\n        }\n    }\n\n    %form-group-display--disabled {\n        user-select: none;\n        color: var-get($theme, 'disabled-text-color') !important;\n\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--disabled;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix--disabled;\n        }\n    }\n\n    %form-group-box-wrapper {\n        @if $variant != 'bootstrap' {\n            border-radius: var-get($theme, 'box-border-radius');\n        }\n\n        @if $variant == 'material' {\n            border-end-start-radius: 0;\n            border-end-end-radius: 0;\n        }\n        overflow: hidden;\n    }\n\n    %form-group-bundle {\n        display: grid;\n        grid-template-columns: auto 1fr auto;\n        grid-area: 1 / 2 / span 1 / span 2;\n        height: var-get($theme, 'size');\n        position: relative;\n        max-width: 100%;\n        font-size: rem(16px);\n\n        &::after {\n            content: '';\n            position: absolute;\n            bottom: 0%;\n            width: 100%;\n            border-block-end: rem(1px) solid var-get($theme, 'idle-bottom-line-color');\n            transition: all $transition-timing\n        }\n\n        %form-group-bundle-start {\n            border: {\n                start: {\n                    start-radius: calc(var-get($theme, 'box-border-radius') - rem(1px));\n                };\n            }\n        }\n\n        %form-group-bundle-end {\n            border: {\n                start: {\n                    end-radius: calc(var-get($theme, 'box-border-radius') - rem(1px));\n                }\n            }\n        }\n    }\n\n    // We need to target the bundle :after here with classes since we have cases that\n    // The theme is for example indigo but the input stays fluent, that's the case in the grid.\n    .igx-input-group--fluent,\n    .igx-input-group--bootstrap {\n        %form-group-bundle {\n            &::after {\n                display: none;\n            }\n        }\n    }\n\n    %form-group-bundle--hover {\n        cursor: pointer;\n\n        &::after {\n            border-block-end-width: rem(1px);\n            border-block-end-color: var-get($theme, 'hover-bottom-line-color');\n        }\n    }\n\n    %form-group-bundle--focus {\n        &::after {\n            border-block-end-width: rem(2px);\n            border-block-end-color: var-get($theme, 'focused-bottom-line-color');\n        }\n    }\n\n    %form-group-bundle--success {\n        &::after {\n            border-block-end-color: var-get($theme, 'success-secondary-color');\n        }\n    }\n\n    %form-group-bundle--error {\n        &::after {\n            border-block-end-color: var-get($theme, 'error-secondary-color');\n        }\n    }\n\n    %form-group-bundle--disabled {\n        cursor: default;\n\n        &::after {\n            border-block-end-color: var-get($theme, 'disabled-bottom-line-color');\n            border-block-end-style: dashed;\n        }\n    }\n\n    %form-group-bundle-start {\n        grid-area: 1 / 1;\n    }\n\n    %form-group-bundle-main {\n        grid-area: 1 / 2 / span 1 / span 2;\n        flex-grow: 1;\n        position: relative;\n        max-width: inherit;\n    }\n\n    %form-group-bundle--box {\n        // padding 0 is needed here because of the search variant\n        padding: 0 !important;\n\n        background: var-get($theme, 'box-background');\n\n        &:hover {\n            background: var-get($theme, 'box-background-hover');\n        }\n    }\n\n    %form-group-bundle--box-focus {\n        background: var-get($theme, 'box-background-focus');\n    }\n\n    %form-group-bundle--box-disabled {\n        background-color: var-get($theme, 'box-disabled-background');\n    }\n\n    @if $material-theme {\n        %form-group-bundle-main,\n        %igx-input-group__notch {\n            padding-inline: rem(4px);\n        }\n    }\n\n    %igx-input-group__notch {\n        display: flex;\n        align-items: center;\n        width: auto;\n        min-width: 0;\n        height: 100%;\n        position: relative;\n\n        grid-area: 1 / 2;\n    }\n\n    %igx-input-group__notch--border {\n        padding: 0 rem(4px);\n    }\n\n    %igx-input-group__filler {\n        grid-area: 1 / 3;\n    }\n\n    %form-group-bundle-end {\n        grid-area: 1 / 4;\n    }\n\n\n    %form-group-bundle-start,\n    %form-group-bundle-end {\n        display: flex;\n        align-items: center;\n        min-width: 0;\n        min-height: 100%;\n\n        @if $variant == 'material' {\n            overflow: hidden;\n            min-width: pad(rem(10px), rem(12px), rem(14px));\n        }\n    }\n\n    %form-group-bundle--border {\n        grid-template-columns: auto auto 1fr auto;\n        display: grid;\n        align-items: initial;\n        padding: 0;\n        box-shadow: none;\n        border-radius: var-get($theme, 'border-border-radius');\n        background: var-get($theme, 'border-background');\n\n        %form-group-bundle-start {\n            width: auto;\n            flex-shrink: 0;\n\n            border: {\n                color: var-get($theme, 'border-color');\n                style: solid;\n\n                inline: {\n                    start-width: rem(1px);\n                    end-width: 0;\n                };\n\n                block: {\n                    start-width: rem(1px);\n                    end-width: rem(1px);\n                };\n\n                start: {\n                    start-radius: var-get($theme, 'border-border-radius');\n                };\n\n                end: {\n                    start-radius: var-get($theme, 'border-border-radius');\n                };\n            }\n        }\n\n        %igx-input-group__filler {\n            border: {\n                width: rem(1px);\n                style: solid;\n                color: var-get($theme, 'border-color');\n                left: none;\n                right: none;\n            }\n        }\n\n        %igx-input-group__notch {\n            border-block-start: rem(1px) solid var-get($theme, 'border-color');\n            border-block-end: rem(1px) solid var-get($theme, 'border-color');\n            overflow: visible;\n\n            %form-group-label {\n                position: relative;\n            }\n\n            &:empty {\n                display: none;\n            }\n        }\n\n        %form-group-bundle-end {\n            display: flex;\n            justify-content: flex-end;\n            flex-grow: 1;\n            height: 100%;\n            grid-area: 1 / 4;\n\n            border: {\n                color: var-get($theme, 'border-color');\n                style: solid;\n\n                inline: {\n                    start-width: 0;\n                    end-width: rem(1px);\n                };\n\n                block: {\n                    start-width: rem(1px);\n                    end-width: rem(1px);\n                };\n\n                start: {\n                    end-radius: var-get($theme, 'border-border-radius');\n                };\n\n                end: {\n                    end-radius: var-get($theme, 'border-border-radius');\n                };\n            }\n        }\n\n        %form-group-prefix,\n        %form-group-suffix {\n            height: 100%;\n        }\n\n        &::after {\n            display: none;\n        }\n    }\n\n    %form-group-bundle-border--disabled {\n        background: var-get($theme, 'border-disabled-background');\n    }\n\n    %form-group-input--border {\n        width: 100%;\n        height: 100% !important;\n        padding-block: 0;\n        border: none;\n        outline-style: none;\n        z-index: 1;\n    }\n\n    /* stylelint-disable */\n    %igx-input-group__notch--search,\n    %form-group-bundle-main--search {\n        @if $material-theme {\n            padding-inline-start: pad-inline(rem(14px), rem(16px), rem(18px));\n        }\n    }\n\n    %igx-input-group__notch--search,\n    %form-group-bundle-main--search {\n        @if $material-theme {\n            padding-inline-end: pad-inline(rem(14px), rem(16px), rem(18px));\n        }\n    }\n    /* stylelint-enable */\n\n    %form-group-display--search {\n        %igx-input-group__notch--search,\n        %form-group-bundle-main--search {\n            padding-inline: rem(4px);\n        }\n    }\n\n    %form-group-bundle--search {\n        background: var-get($theme, 'search-background');\n        box-shadow: var-get($theme, 'search-resting-shadow');\n\n        @if $variant != 'bootstrap' {\n            border-radius: var-get($theme, 'search-border-radius');\n            overflow: hidden;\n        }\n\n        &::after {\n            display: none;\n        }\n    }\n\n    %form-group-bundle-search--hover {\n        box-shadow: var-get($theme, 'search-hover-shadow');\n        border-color: var-get($theme, 'hover-border-color');\n    }\n\n    %form-group-bundle-search--focus {\n        box-shadow: var-get($theme, 'search-hover-shadow');\n        border-color: var-get($theme, 'hover-border-color');\n    }\n\n    %form-group-bundle-search--error {\n        box-shadow: var-get($theme, 'search-hover-shadow');\n        border-color: var-get($theme, 'search-hover-shadow');\n    }\n\n    %form-group-bundle-search--success {\n        box-shadow: var-get($theme, 'search-hover-shadow');\n        border-color: var-get($theme, 'search-hover-shadow');\n    }\n\n    %form-group-bundle-search--disabled {\n        background: var-get($theme, 'search-disabled-background');\n        box-shadow: var-get($theme, 'search-disabled-shadow');\n        border-color: var-get($theme, 'disabled-border-color');\n    }\n\n    %form-group-bundle-main--border {\n        background: transparent;\n        padding: 0 rem(4px);\n        font-size: rem(16px);\n    }\n\n    %form-group-label {\n        padding-inline-end: rem(4px);\n        backface-visibility: hidden;\n        will-change: transform;\n        transform-origin: top left;\n        transition: all $transition-timing;\n        margin-inline-start: pad-inline(0, rem(-2px), rem(-4px));\n    }\n\n    %form-group-label--border {\n        padding-inline-end: 0;\n        display: inline-block;\n        position: relative;\n        background: transparent;\n    }\n\n    %form-group-label--border,\n    %form-group-label--search {\n        transform: translateY(0);\n    }\n\n    %form-group-label--search {\n        + %form-group-input--search {\n            transform: translateY(0);\n        }\n    }\n\n    %form-group-label--float {\n        --floating-label-position: -73%;\n        transform: translateY(var(--floating-label-position));\n        font-size: rem(12px);\n    }\n\n    %form-group-label--focused-border,\n    %form-group-label--filled-border,\n    %form-group-label--placeholder-border,\n    %form-group-label--file-border {\n        %igx-input-group__notch {\n            border-block-start-color: transparent !important;\n        }\n    }\n\n    %form-group-label--focused-border {\n        %form-group-bundle-start {\n            border-inline-start-width: rem(2px);\n            border-block-start-width: rem(2px);\n            border-block-end-width: rem(2px);\n            border-inline-start-color: var-get($theme, 'focused-border-color');\n            border-block-start-color: var-get($theme, 'focused-border-color');\n            border-block-end-color: var-get($theme, 'focused-border-color');\n        }\n\n        %form-group-bundle-end {\n            border-inline-end-width: rem(2px);\n            border-block-start-width: rem(2px);\n            border-block-end-width: rem(2px);\n            border-inline-end-color: var-get($theme, 'focused-border-color');\n            border-block-start-color: var-get($theme, 'focused-border-color');\n            border-block-end-color: var-get($theme, 'focused-border-color');\n        }\n\n        %igx-input-group__filler,\n        %igx-input-group__notch {\n            border-block-width: rem(2px);\n        }\n\n        %igx-input-group__filler {\n            border-block-color: var-get($theme, 'focused-border-color');\n        }\n\n        %igx-input-group__notch {\n            border-block-end-color: var-get($theme, 'focused-border-color');\n        }\n\n        %form-group-prefix {\n            &:first-child {\n                margin-inline-start: rem(-1px);\n            }\n        }\n\n        %form-group-suffix {\n            &:last-child {\n                margin-inline-end: rem(-1px);\n            }\n        }\n    }\n\n    %form-group-label--float-border {\n        --label-position: #{sizable(18px, 22px, 26px)};\n        transform: translateY(calc(var(--label-position) * -1));\n        font-size: rem(12px);\n        margin-top: 0;\n        overflow: hidden;\n        will-change: font-size, color, transform;\n    }\n\n    %form-group-textarea-group-bundle {\n        // 3 lines * 22px + 8px bottom padding + 8px top padding\n        --textarea-size: #{sizable(\n            rem(82px, map.get($base-scale-size, 'compact')),\n            rem(82px, map.get($base-scale-size, 'cosy')),\n            rem(82px, map.get($base-scale-size, 'comfortable'))\n        )};\n        min-height: var(--textarea-size) !important;\n        height: auto !important;\n\n        %form-group-label {\n            position: absolute;\n        }\n    }\n\n    %form-group-textarea-label {\n        transition-duration: 0ms;\n    }\n\n    @if $material-theme {\n        %textarea-group-label--focused {\n            transform: translateY(0);\n            top: calc(#{$input-top-padding} / 4);\n        }\n\n        %textarea-group-label--filled--border,\n        %textarea-group-label--focused--border {\n            top: 0;\n            transform: translateY(-50%);\n            margin-block-end: auto !important;\n        }\n\n        %textarea-group-notch--focused {\n            border-block-start-width: rem(2px);\n        }\n    }\n\n    %form-group-label--focus {\n        color: var-get($theme, 'focused-secondary-color');\n    }\n\n    %form-group-label--success {\n        color: var-get($theme, 'success-secondary-color');\n    }\n\n    %form-group-label--error {\n        color: var-get($theme, 'error-secondary-color');\n    }\n\n    %form-group-label--required {\n        &::after {\n            content: '#{$required-symbol}';\n            font-size: inherit;\n            vertical-align: top;\n            margin-inline-start: $required-symbol-margin; /* rem(2px) base is 16px */\n            display: inline-block;\n        }\n    }\n\n    %form-group-label--disabled {\n        color: var-get($theme, 'disabled-text-color') !important;\n    }\n\n    %form-group-input {\n        position: relative;\n        display: block;\n        border: none;\n        padding-block-start: $input-top-padding;\n        padding-block-end: $input-bottom-padding;\n        padding-inline: 0;\n        height: calc(var-get($theme, 'size') - 2px);\n        width: 100%;\n        min-width: 0;\n        background: transparent;\n        color: var-get($theme, 'filled-text-color');\n        outline-style: none;\n        box-shadow: none;\n        overflow: hidden;\n        text-overflow: ellipsis;\n\n        &:not([type='date']) {\n            line-height: 0 !important; /* Reset typography */\n        }\n\n        &::-webkit-input-placeholder {\n            line-height: normal;\n        }\n\n        &::placeholder {\n            color: var-get($theme, 'placeholder-color');\n            opacity: 1;\n            line-height: normal; /* Fix placeholder position in Safari */\n        }\n    }\n\n    %igx-input-group__notch:empty + %form-group-bundle-main {\n        %form-group-input {\n            padding-block: 0;\n        }\n    }\n\n    %form-group-file-input {\n        width: 100%;\n        max-width: 100%;\n        overflow: hidden;\n        padding-block-start: $input-top-padding;\n        padding-block-end: $input-bottom-padding;\n        height: calc(var-get($theme, 'size') - 2px);\n        color: var-get($theme, 'filled-text-color');\n\n        span {\n            @include ellipsis();\n            position: relative;\n            display: inline-block;\n            width: inherit;\n            max-width: inherit;\n            top: 50%;\n            transform: translateY(-50%);\n        }\n    }\n\n    %form-group-clear-icon {\n        &:focus {\n            background-color: color($color: 'primary', $variant: 500);\n            color: contrast-color($color: 'primary', $variant: 600);\n\n            @if $variant == 'material' {\n                background-color: transparent;\n                color: color($color: 'secondary', $variant: 500);\n            }\n\n            @if $variant == 'bootstrap' {\n                color: contrast-color($color: 'primary', $variant: 600);\n            }\n        }\n    }\n\n    %chrome-autofill-fix {\n        &:-webkit-autofill,\n        &:-webkit-autofill:hover,\n        &:-webkit-autofill:focus,\n        &:-webkit-autofill:active {\n            -webkit-transition-delay: 99999s;\n            transition-delay: 99999s;\n        }\n    }\n\n    %edge-clear-icon-fix {\n        &::-ms-clear {\n            display: none;\n        }\n    }\n\n    %form-group-file-input-indigo {\n        padding-block: 0;\n    }\n\n    %form-group-input--hover {\n        cursor: pointer;\n    }\n\n    %form-group-input--focus {\n        cursor: text;\n        color: var-get($theme, 'focused-text-color');\n    }\n\n    %form-group-input--disabled {\n        cursor: default;\n\n        color: var-get($theme, 'disabled-text-color') !important;\n\n        &::placeholder {\n            color: var-get($theme, 'disabled-placeholder-color');\n        }\n    }\n\n    %form-group-textarea {\n        --textarea-size: #{sizable(\n            rem(82px, map.get($base-scale-size, 'compact')),\n            rem(82px, map.get($base-scale-size, 'cosy')),\n            rem(82px, map.get($base-scale-size, 'comfortable'))\n        )};\n\n        min-height: var(--textarea-size);\n        height: auto;\n        resize: vertical;\n        overflow: hidden;\n\n        @if $material-theme {\n            padding: 0;\n        }\n\n        // resets typography styles\n        line-height: normal !important;\n\n        z-index: 1;\n\n        &:not([type='*']) {\n            line-height: normal !important; /* resets typography styles */\n        }\n    }\n\n    %form-group-textarea-group-bundle-main {\n        overflow: hidden;\n\n        @if $material-theme or $indigo-theme {\n            height: calc(100% - #{rem(2px)});\n            top: rem(1px);\n        }\n\n        @if $material-theme {\n            padding-block-start: $input-top-padding;\n        }\n    }\n\n    %form-group-textarea--disabled {\n        color: var-get($theme, 'disabled-text-color') !important;\n\n        &::placeholder {\n            color: var-get($theme, 'disabled-placeholder-color');\n        }\n    }\n\n    @if $material-theme {\n        %form-group-line {\n            position: absolute;\n            width: 100%;\n            inset-inline-end: 0;\n            height: rem(2px);\n            align-self: end;\n            transform: scaleX(0);\n            transform-origin: center;\n            background: var-get($theme, 'focused-secondary-color');\n            z-index: 1;\n        }\n    }\n\n    %form-group-line--success {\n        background: var-get($theme, 'success-secondary-color');\n    }\n\n    %form-group-border--success {\n        %form-group-bundle-start {\n            border-inline-start-color: var-get($theme, 'success-secondary-color');\n            border-block-start-color: var-get($theme, 'success-secondary-color');\n            border-block-end-color: var-get($theme, 'success-secondary-color');\n        }\n\n        %form-group-bundle-end {\n            border-inline-end-color: var-get($theme, 'success-secondary-color');\n            border-block-start-color: var-get($theme, 'success-secondary-color');\n            border-block-end-color: var-get($theme, 'success-secondary-color');\n        }\n\n        %igx-input-group__notch,\n        %igx-input-group__filler {\n            border-block-color: var-get($theme, 'success-secondary-color');\n        }\n    }\n\n    %form-group-line--warning {\n        background: var-get($theme, 'error-secondary-color');\n    }\n\n    %form-group-border--warning {\n        %form-group-bundle-start {\n            border-inline-start-color: var-get($theme, 'warning-secondary-color');\n            border-block-start-color: var-get($theme, 'warning-secondary-color');\n            border-block-end-color: var-get($theme, 'warning-secondary-color');\n        }\n\n        %form-group-bundle-end {\n            border-inline-end-color: var-get($theme, 'warning-secondary-color');\n            border-block-start-color: var-get($theme, 'warning-secondary-color');\n            border-block-end-color: var-get($theme, 'warning-secondary-color');\n        }\n\n        %igx-input-group__notch,\n        %igx-input-group__filler {\n            border-block-color: var-get($theme, 'warning-secondary-color');\n        }\n    }\n\n    %form-group-line--error {\n        background: var-get($theme, 'error-secondary-color');\n    }\n\n    %form-group-border--error {\n        %form-group-bundle-start {\n            border-inline-start-color: var-get($theme, 'error-secondary-color');\n            border-block-start-color: var-get($theme, 'error-secondary-color');\n            border-block-end-color: var-get($theme, 'error-secondary-color');\n        }\n\n        %form-group-bundle-end {\n            border-inline-end-color: var-get($theme, 'error-secondary-color');\n            border-block-start-color: var-get($theme, 'error-secondary-color');\n            border-block-end-color: var-get($theme, 'error-secondary-color');\n        }\n\n        %igx-input-group__notch,\n        %igx-input-group__filler {\n            border-block-color: var-get($theme, 'error-secondary-color');\n        }\n    }\n\n    %form-group-border--disabled {\n        %form-group-bundle-start {\n            border-inline-start-color: var-get($theme, 'disabled-border-color');\n            border-block-start-color: var-get($theme, 'disabled-border-color');\n            border-block-end-color: var-get($theme, 'disabled-border-color');\n        }\n\n        %form-group-bundle-end {\n            border-inline-end-color: var-get($theme, 'disabled-border-color');\n            border-block-start-color: var-get($theme, 'disabled-border-color');\n            border-block-end-color: var-get($theme, 'disabled-border-color');\n        }\n\n        %igx-input-group__notch,\n        %igx-input-group__filler {\n            border-block-color: var-get($theme, 'disabled-border-color');\n        }\n    }\n\n    %form-group-line--focus {\n        transform: scaleX(1);\n        transition: transform $transition-timing;\n    }\n\n    // Hides the border for border type input\n    %form-group-line--hidden {\n        display: none;\n    }\n\n    %form-group-helper {\n        color: var-get($theme, 'helper-text-color');\n        position: relative;\n        display: flex;\n        padding-block-start: $hint-spacing-block;\n        padding-inline-start: $hint-spacing-inline;\n\n        justify-content: space-between;\n\n        > * {\n            margin-inline-end: rem(8px);\n\n            &:last-child {\n                margin-inline-end: 0;\n            }\n        }\n\n        &:empty {\n            @if $variant == 'fluent' {\n                padding: 0;\n            } @else {\n                display: none;\n            }\n        }\n    }\n\n    %form-group-helper--success {\n        color: var-get($theme, 'success-secondary-color');\n    }\n\n    %form-group-helper--error {\n        color: var-get($theme, 'error-secondary-color');\n    }\n\n    %form-group-helper-item {\n        display: flex;\n        align-items: center;\n        position: relative;\n    }\n\n    %form-group-helper-item--start {\n        justify-content: flex-start;\n    }\n\n    %form-group-helper-item--end {\n        justify-content: flex-end;\n    }\n\n    %form-group-helper-item--start,\n    %form-group-helper-item--end {\n        width: 100%;\n    }\n\n    %form-group-prefix--disabled,\n    %form-group-suffix--disabled {\n        color: var-get($theme, 'disabled-text-color');\n        background: inherit;\n        pointer-events: none;\n    }\n\n    %form-group-helper--disabled {\n        color: var-get($theme, 'disabled-text-color');\n    }\n\n    // BASE END\n\n    // ==============================================\n\n    // INDIGO START\n    @if $variant == 'indigo-design' {\n        %form-group-display.igx-input-group--prefixed {\n            input,\n            textarea {\n                padding-inline-start: rem(4px);\n            }\n        }\n\n        %form-group-display.igx-input-group--suffixed {\n            input,\n            textarea {\n                padding-inline-end: rem(4px);\n            }\n        }\n    }\n\n    %form-group-bundle--indigo {\n        border-radius: var-get($theme, 'box-border-radius') var-get($theme, 'box-border-radius') 0 0;\n        transition: background $transition-timing;\n        padding-top: 0;\n\n        &:hover,\n        &:focus {\n            background: var-get($theme, 'box-background-hover');\n        }\n    }\n\n    %indigo-label--focused {\n        color: var-get($theme, 'focused-secondary-color');\n    }\n\n    %indigo-label--invalid {\n        color: var-get($theme, 'error-secondary-color');\n    }\n\n    %indigo-label--success {\n        color: var-get($theme, 'success-secondary-color');\n    }\n\n    %form-group-input--indigo {\n        padding-block: rem(8px);\n        padding-inline: pad-inline(rem(8px), rem(12px), rem(16px));\n    }\n\n    %indigo--box-focused {\n        background: var-get($theme, 'box-background-hover');\n    }\n\n    %form-group-bundle--indigo--disabled {\n        background: transparent;\n\n        &:hover,\n        &:focus {\n            background: transparent;\n        }\n\n        &::after {\n            border-bottom-style: solid;\n        }\n    }\n    // INDIGO END\n\n    // ==============================================\n\n    // FLUENT START\n    // Input\n    %igx-input-group-fluent {\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix-fluent;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix-fluent;\n        }\n\n        igx-prefix,\n        [igxPrefix],\n        igx-suffix,\n        [igxSuffix] {\n            outline-style: none;\n        }\n\n        select {\n            width: calc(100% + #{rem(8px)});\n            margin-inline-start: rem(-8px) !important;\n            cursor: pointer !important;\n        }\n    }\n\n    %igx-input-group-fluent-search {\n        display: flex;\n        flex-direction: column;\n\n        igx-prefix,\n        [igxPrefix] {\n            overflow: hidden;\n        }\n    }\n\n    %igx-input-group-fluent-search--focused {\n        igx-prefix,\n        [igxPrefix] {\n            display: none;\n        }\n    }\n\n    // Bundle\n    %form-group-bundle-required--fluent {\n        &::before {\n            content: '*';\n            position: absolute;\n            top: rem(-8px);\n            inset-inline-start: calc(100% + #{rem(4px)});\n            color: var-get($theme, 'error-secondary-color');\n        }\n    }\n\n    %form-group-bundle-bootstrap--textarea,\n    %form-group-bundle-fluent--textarea {\n        display: flex;\n    }\n\n    %form-group-label-required--fluent {\n        &::after {\n            color: var-get($theme, 'error-secondary-color');\n        }\n    }\n\n    %form-group-label-required--disabled--fluent {\n        &::after {\n            color: var-get($theme, 'disabled-text-color');\n        }\n    }\n\n    %form-group-bundle--fluent {\n        --min-width: #{sizable(rem(4px), rem(6px), rem(8px))};\n\n        min-height: var-get($theme, 'size');\n        padding: 0;\n        border: rem(1px) solid var-get($theme, 'border-color');\n        background: var-get($theme, 'border-background');\n        align-items: stretch;\n        overflow: hidden;\n\n        @if $variant == 'fluent' {\n            border-radius: var-get($theme, 'border-border-radius');\n        }\n\n        // Those focus styles are needed since when we focus the button inside\n        // the file type input the class .igx-input-group--focused is not added but the input is focused.\n        &:focus,\n        &:focus-within {\n            %form-group-bundle-start {\n                margin-block-start: rem(-1px);\n                margin-inline-start: rem(-1px);\n            }\n\n            %form-group-bundle-end {\n                margin-block-start: rem(-1px);\n                margin-inline-end: rem(-1px);\n            }\n\n            %form-group-bundle-start:empty + %form-group-bundle-main,\n            %form-group-bundle-end:empty + %form-group-bundle-main {\n                margin-inline-start: rem(-1px);\n            }\n\n            %form-group-bundle-main {\n                margin-block-start: rem(-1px);\n            }\n        }\n    }\n\n    %form-group-bundle--fluent--hover {\n        border-color: var-get($theme, 'hover-border-color');\n    }\n\n    %form-group-bundle--fluent--focus {\n        border-color: var-get($theme, 'focused-border-color');\n        border-width: rem(2px);\n    }\n\n    %form-group-bundle-error--fluent,\n    %form-group-bundle-error--fluent--hover,\n    %form-group-bundle-error--fluent--focus {\n        border-color: var-get($theme, 'error-secondary-color');\n    }\n\n    %form-group-bundle-success--fluent,\n    %form-group-bundle-success--fluent--hover,\n    %form-group-bundle-success--fluent--focus {\n        border-color: var-get($theme, 'success-secondary-color');\n    }\n\n    %form-group-bundle--fluent--hover-disabled,\n    %form-group-bundle--fluent-disabled {\n        border-color: var-get($theme, 'disabled-border-color');\n        background: var-get($theme, 'border-disabled-background');\n    }\n\n    %form-group-bundle-main--fluent {\n        align-self: center;\n        cursor: default;\n    }\n\n    @if $fluent-theme {\n        %form-group-bundle-start--fluent--focused {\n            margin-block-start: rem(-1px);\n            margin-inline-start: rem(-1px);\n        }\n\n        %form-group-bundle-end--fluent--focused {\n            margin-block-start: rem(-1px);\n            margin-inline-end: rem(-1px);\n        }\n\n        %form-group-bundle-start--fluent--focused:empty + %form-group-bundle-main--fluent--focused,\n        %form-group-bundle-end--fluent--focused:empty + %form-group-bundle-main--fluent--focused {\n            margin-inline-start: rem(-1px);\n        }\n\n        %form-group-bundle-main--fluent--focused {\n            margin-block-start: rem(-1px);\n        }\n    }\n\n    %form-group-bundle-textarea-start--fluent,\n    %form-group-bundle-textarea-end--fluent {\n        &:empty {\n            display: none;\n        }\n    }\n\n    // Native input\n    %fluent-input {\n        font-size: rem(14px);\n        padding-block: 0;\n        padding-inline: rem(8px);\n        margin: 0;\n        border: none;\n    }\n\n    %indigo-textarea {\n        padding-block: rem(8px);\n        padding-inline: pad-inline(rem(8px), rem(12px), rem(16px));\n    }\n\n    %fluent-textarea {\n        padding: rem(8px);\n    }\n\n    %fluent-input-disabled {\n        color: var-get($theme, 'disabled-text-color');\n    }\n\n    // Label\n    %fluent-label {\n        display: block;\n        font-size: rem(14px);\n        font-weight: 600;\n        position: static;\n        transform: translateY(0);\n        transform-origin: top left;\n        margin-top: 0 !important;\n        height: auto;\n        margin-block-end: rem(4px);\n        color: var-get($theme, 'idle-secondary-color');\n\n        [dir='rtl'] & {\n            transform-origin: top right;\n        }\n    }\n\n    %fluent-label + %form-group-bundle-required--fluent {\n        &::before {\n            display: none;\n        }\n    }\n\n    %fluent-label-success {\n        color: var-get($theme, 'idle-text-color');\n    }\n\n    %fluent-label-error {\n        color: var-get($theme, 'idle-text-color');\n    }\n\n    %fluent-label-disabled {\n        color: var-get($theme, 'disabled-text-color') !important;\n    }\n\n    %fluent-label-filled {\n        transform: translateY(0);\n    }\n\n    %fluent-label-focused {\n        color: color(null, 'gray', 800);\n        transform: translateY(0) scale(1);\n    }\n\n    %form-group-helper--textarea--fluent--focused {\n        margin-block-start: rem(-1px);\n    }\n\n    %fluent-placeholder-label {\n        transform: translateY(0) scale(1);\n    }\n\n    %form-group-prefix-fluent,\n    %form-group-suffix-fluent {\n        .ig-typography [igx-button],\n        .ig-typography igx-button,\n        .ig-typography button,\n        button {\n            border-radius: 0;\n            height: 100%;\n        }\n    }\n\n    .igx-input-group--fluent [igxPrefix],\n    .igx-input-group--fluent igx-prefix {\n        &:first-child {\n            [igxButton]::after,\n            button::after {\n                border: {\n                    start: {\n                        start-radius: var-get($theme, 'border-border-radius');\n                    };\n                    end: {\n                        start-radius: var-get($theme, 'border-border-radius');\n                    };\n                }\n            }\n        }\n    }\n\n    %form-group-prefix-fluent,\n    %form-group-suffix-fluent,\n    %form-group-prefix-fluent-search,\n    %form-group-suffix-fluent-search {\n        padding-inline: pad-inline(rem(8px), rem(12px), rem(16px));\n    }\n\n    %fluent-upload-button {\n        padding: 0;\n    }\n    // FLUENT END\n\n    // ==============================================\n\n    // === BOOTSTRAP START === //\n    // Input group host\n    %form-group-display--bootstrap-prefixed {\n        %bootstrap-file-input,\n        %bootstrap-input {\n            border: {\n                start: {\n                    start-radius: 0;\n                };\n                end: {\n                    start-radius: 0;\n                };\n            }\n        }\n    }\n\n    %form-group-display--bootstrap-suffixed {\n        %bootstrap-file-input,\n        %bootstrap-input {\n            border: {\n                start: {\n                    end-radius: 0;\n                };\n                end: {\n                    end-radius: 0;\n                };\n            }\n        }\n    }\n\n    %form-group-display--disabled-bootstrap {\n        background-image: none;\n\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--disabled-bootstrap;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix--disabled-bootstrap;\n        }\n\n        %form-group-bundle-start--bootstrap,\n        %form-group-bundle-end--bootstrap {\n            border-color: var-get($theme, 'disabled-border-color');\n        }\n    }\n\n    // Bundle\n    %form-group-bundle--bootstrap {\n        padding: 0;\n        box-shadow: none;\n        z-index: 0;\n    }\n\n    %form-group-bundle--bootstrap-focused,\n    %form-group-bundle--bootstrap-hover {\n        border: none;\n        box-shadow: none;\n    }\n\n    %form-group-bundle-start--bootstrap,\n    %form-group-bundle-end--bootstrap {\n        flex: none;\n\n        &:empty {\n            display: none;\n        }\n\n        border-width: rem(1px);\n        border-style: solid;\n        border-color: var-get($theme, 'border-color');\n        overflow: hidden;\n    }\n\n    %form-group-bundle-start--bootstrap {\n        grid-area: 1 / 1;\n\n        border: {\n            inline: {\n                start-width: rem(1px);\n                end-width: 0;\n            };\n            block: {\n                start-width: rem(1px);\n                end-width: rem(1px);\n            };\n            start: {\n                start-radius: var-get($theme, 'box-border-radius');\n            };\n            end: {\n                start-radius: var-get($theme, 'box-border-radius');\n            };\n        }\n    }\n    %form-group-bundle-end--bootstrap {\n        grid-area: 1 / 3;\n\n        border: {\n            inline: {\n                start-width: 0;\n                end-width: rem(1px);\n            };\n            block: {\n                start-width: rem(1px);\n                end-width: rem(1px);\n            };\n            start: {\n                end-radius: var-get($theme, 'box-border-radius');\n            };\n            end: {\n                end-radius: var-get($theme, 'box-border-radius');\n            };\n        }\n    }\n\n    // Label\n    %bootstrap-label {\n        position: static;\n        display: block;\n        color: var-get($theme, 'idle-secondary-color');\n        padding: 0;\n        line-height: rem(24px);\n        transform: translateY(0);\n        transform-origin: top left;\n        margin-block-start: 0 !important;\n        margin-block-end: rem(4px);\n        height: auto;\n        font-size: rem(16px);\n\n        [dir='rtl'] & {\n            transform-origin: top right;\n        }\n    }\n\n    // Native Input\n    %bootstrap-input {\n        height: auto;\n        line-height: 1.5;\n        margin: 0;\n        font-size: pad(\n            map.get($bootstrap-font-size, 'compact'),\n            map.get($bootstrap-font-size, 'cosy'),\n            map.get($bootstrap-font-size, 'comfortable')\n        );\n        padding-block: pad-inline(\n            map.get($bootstrap-block-padding, 'compact'),\n            map.get($bootstrap-block-padding, 'cosy'),\n            map.get($bootstrap-block-padding, 'comfortable')\n        );\n        padding-inline: pad-inline(\n            map.get($bootstrap-inline-padding, 'compact'),\n            map.get($bootstrap-inline-padding, 'cosy'),\n            map.get($bootstrap-inline-padding, 'comfortable')\n        );\n        transition: box-shadow .15s ease-out, border .15s ease-out;\n    }\n\n    %bootstrap-input,\n    %bootstrap-file-input {\n        border: rem(1px) solid var-get($theme, 'border-color');\n        padding-block: pad-inline(\n            map.get($bootstrap-block-padding, 'compact'),\n            map.get($bootstrap-block-padding, 'cosy'),\n            map.get($bootstrap-block-padding, 'comfortable')\n        );\n        padding-inline: pad-inline(\n            map.get($bootstrap-inline-padding, 'compact'),\n            map.get($bootstrap-inline-padding, 'cosy'),\n            map.get($bootstrap-inline-padding, 'comfortable')\n        );\n        grid-area: 1 / 2 / auto / auto;\n        border-radius: var-get($theme, 'box-border-radius');\n        z-index: 1;\n    }\n\n    %bootstrap-file-input {\n        height: inherit;\n    }\n\n    %bootstrap-input--focus {\n        border: rem(1px) solid var-get($theme, 'focused-border-color');\n        box-shadow: 0 0 0 rem(4px) var-get($theme, 'focused-secondary-color');\n    }\n\n    %bootstrap-input--success {\n        border: rem(1px) solid var-get($theme, 'success-secondary-color');\n        box-shadow: 0 0 0 rem(4px) var-get($theme, 'success-shadow-color');\n    }\n\n    %bootstrap-input--error {\n        border: rem(1px) solid var-get($theme, 'error-secondary-color');\n        box-shadow: 0 0 0 rem(4px) var-get($theme, 'error-shadow-color');\n    }\n\n    %bootstrap-input--disabled {\n        background: var-get($theme, 'border-disabled-background');\n        border: rem(1px) solid var-get($theme, 'disabled-border-color');\n        box-shadow: none;\n    }\n\n    %bootstrap-input--search {\n        transform: translateY(0);\n    }\n\n    %form-group-prefix--disabled-bootstrap,\n    %form-group-suffix--disabled-bootstrap {\n        background: var-get($theme, 'border-disabled-background');\n        border-color: var-get($theme, 'disabled-border-color');\n        color: var-get($theme, 'disabled-text-color');\n    }\n\n    // Upload button for file type input\n    %bootstrap-upload-button {\n        padding: 0;\n\n        [igxButton] {\n            min-height: 0;\n            height: calc(100% - #{rem(8px)});\n        }\n    }\n}\n\n/// Adds typography styles for the igx-input-group component.\n/// Uses the 'body-1', 'caption'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $categories [(helper-text: 'caption', input-text: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n@mixin input-group-typography(\n    $categories: (\n        helper-text: 'caption',\n        input-text: 'subtitle-1'\n    )\n) {\n    $helper-text: map.get($categories, 'helper-text');\n    $input-text: map.get($categories, 'input-text');\n\n    %form-group-input {\n        @include type-style($input-text) {\n            margin: 0;\n        }\n    }\n\n    %form-group-helper {\n        @include type-style($helper-text) {\n            margin: 0;\n        }\n    }\n\n    %form-group-prefix,\n    %form-group-suffix {\n        &:not(igx-icon) {\n            @include type-style($input-text) {\n                margin: 0;\n            }\n        }\n    }\n}\n","@use 'sass:map';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'igniteui-theming/sass/animations/easings' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n/// @param {Color} $background-color [null] - The background color used for modal overlays.\n/// @requires $light-material-schema\n/// @example scss Change the background color\n///   $my-overlay-theme: overlay-theme($background-color: rgba(yellow, .74));\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-overlay-theme);\n@function overlay-theme(\n    $schema: $light-material-schema,\n    $background-color: null\n) {\n    $name: 'igx-overlay';\n    $selector: '.igx-overlay__wrapper--modal, .igx-overlay__content--modal';\n    $overlay-schema: ();\n\n    @if map.has-key($schema, 'overlay') {\n        $overlay-schema: map.get($schema, 'overlay');\n    } @else {\n        $overlay-schema: $schema;\n    }\n\n    $theme: digest-schema($overlay-schema);\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        background-color: $background-color,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin overlay($theme) {\n    @include css-vars($theme);\n\n    %overlay-display {\n        width: 0;\n        height: 0;\n        box-sizing: content-box;\n    }\n\n    %overlay-wrapper {\n        position: fixed;\n        inset: 0;\n        background: transparent;\n        transition: background .25s $in-out-quad;\n        pointer-events: none;\n        z-index: 10005;\n        box-sizing: content-box;\n    }\n\n    %overlay-wrapper--modal {\n        background: var-get($theme, 'background-color');\n        pointer-events: initial;\n    }\n\n    %overlay-wrapper--flex {\n        display: flex;\n    }\n\n    %overlay-wrapper--flex-container {\n        display: flex;\n        position: absolute;\n    }\n\n    %overlay-content {\n        position: absolute;\n        pointer-events: all;\n        box-sizing: content-box;\n    }\n\n    %overlay-content--modal {\n        pointer-events: initial;\n    }\n\n    %overlay-content--elastic {\n        overflow: auto;\n    }\n\n    %overlay-content--relative {\n        position: relative;\n    }\n\n    %igx-toggle--hidden {\n        display: none !important;\n    }\n}\n","@use 'sass:map';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified,\n/// the text-color will be assigned automatically to a contrasting color.\n///\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $background [null] - The background color used for the toast.\n/// @param {Color} $text-color [null] - The text-color used for the toast.\n/// @param {Color} $border-color [null] - The border-color used for the toast.\n///\n/// @param {List} $border-radius [null] - The border radius used for the toast component.\n/// @param {box-shadow} $shadow [null] - Sets a shadow to be used for the toast.\n///\n/// @requires $light-material-schema\n///\n/// @example scss Set a custom background color\n///   $my-toast-theme: toast-theme($background: green);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-toast-theme);\n@function toast-theme(\n    $schema: $light-material-schema,\n\n    $border-radius: null,\n    $border-color: null,\n    $background: null,\n    $text-color: null,\n    $shadow: null,\n) {\n    $name: 'igx-toast';\n    $toast-schema: ();\n\n    @if map.has-key($schema, 'toast') {\n        $toast-schema: map.get($schema, 'toast');\n    } @else {\n        $toast-schema: $schema;\n    }\n\n    $theme: digest-schema($toast-schema);\n    $meta: map.get($theme, '_meta');\n\n    @if not($shadow) {\n        $elevation: map.get($toast-schema, 'elevation');\n        $shadow: elevation($elevation);\n    }\n\n    @if not($text-color) and $background {\n        $text-color: text-contrast($background);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        background: $background,\n        border-radius: $border-radius,\n        text-color: $text-color,\n        border-color: $border-color,\n        shadow: $shadow,\n        _meta: map.merge(if($meta, $meta, ()), (\n            variant: map.get($schema, '_meta', 'theme')\n        )),\n    ));\n}\n\n/// Toast Component\n/// @param {Map} $theme - The theme used to style the component.\n@mixin toast($theme) {\n    @include css-vars($theme);\n    $variant: map.get($theme, '_meta', 'variant');\n\n    $width: rem(52px);\n    $margin: rem(42px) auto;\n\n    $padding: map.get((\n        'material': rem(16px) rem(24px),\n        'fluent': rem(16px) rem(24px),\n        'bootstrap': rem(12px),\n        'indigo-design': rem(14px) rem(24px)\n    ), $variant);\n\n    %igx-toast-display {\n        display: inline-flex;\n        justify-content: center;\n        align-items: center;\n        margin: $margin;\n        padding: $padding;\n        min-width: $width;\n        color: var-get($theme, 'text-color');\n        background: var-get($theme, 'background');\n        border: rem(1px) solid var-get($theme, 'border-color');\n        border-radius: var-get($theme, 'border-radius');\n        box-shadow: map.get($theme, 'shadow');\n        backdrop-filter: blur(10px);\n    }\n}\n\n/// Adds typography styles for the igx-toast component.\n/// Uses the 'body-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $categories [(text: 'body-2')] - The categories from the typographic scale used for type styles.\n@mixin toast-typography($categories: (text: 'body-2')) {\n    $text: map.get($categories, 'text');\n\n    %igx-toast-display,\n    %igx-toast-display > * {\n        @include type-style($text) {\n            margin: 0;\n        }\n    }\n}\n","@use 'sass:map';\n@use '../../base' as *;\n@use '../../themes/schemas' as *;\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Returns a map containing all style properties related to the theming the tooltip directive.\n/// @param {Map} $schema [$light-material-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $background [null] - The background color of the tooltip.\n/// @param {Color} $text-color [null] - The text color of the tooltip.\n///\n/// @param {List} $border-radius [null] - The border radius used for the tooltip component.\n///\n/// @requires $light-material-schema\n///\n/// @example scss Change the tooltip background\n///   $my-tooltip-theme: tooltip-theme($background: magenta);\n///   // Pass the theme to the css-vars() mixin\n///   @include css-vars($my-checkbox-theme);\n@function tooltip-theme(\n    $schema: $light-material-schema,\n\n    $border-radius: null,\n    $background: null,\n    $text-color: null\n) {\n    $name: 'igx-tooltip';\n    $selector: '.igx-tooltip--desktop, .igx-tooptip--mobile';\n    $tooltip-schema: ();\n\n    @if map.has-key($schema, 'tooltip') {\n        $tooltip-schema: map.get($schema, 'tooltip');\n    } @else {\n        $tooltip-schema: $schema;\n    }\n\n    $theme: digest-schema($tooltip-schema);\n\n    @if not($text-color) and $background {\n        $text-color: text-contrast($background);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        background: $background,\n        border-radius: $border-radius,\n        text-color: $text-color,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n@mixin tooltip($theme) {\n    @include css-vars($theme);\n\n    %tooltip-display {\n        display: inline-flex;\n        justify-content: center;\n        flex-flow: column wrap;\n        background: var-get($theme, 'background');\n        color: var-get($theme, 'text-color');\n        border-radius: var-get($theme, 'border-radius');\n        margin: 0 auto;\n    }\n\n    %tooltip--desktop {\n        padding: 0 rem(8px);\n        min-height: rem(24px);\n    }\n\n    %tooltip--mobile {\n        padding: 0 rem(16px);\n        min-height: rem(32px);\n    }\n\n    %tooltip--hidden {\n        display: none;\n    }\n}\n\n/// Adds typography styles for the igx-tooltip component.\n/// Uses the 'body-2' category from the typographic scale for mobile tooltips and custom typography for desktop tooltips.\n/// @group typography\n/// @param {Map} $categories [(text-desktop: null, text-mobile: 'body-2')] - The categories from the typographic scale used for type styles.\n@mixin tooltip-typography(\n    $categories: (text-desktop: null, text-mobile: 'body-2')\n) {\n    $text-desktop: map.get($categories, 'text-desktop');\n    $text-mobile: map.get($categories, 'text-mobile');\n\n    %tooltip--mobile {\n        @include type-style($text-mobile);\n    }\n\n    @if $text-desktop != null {\n        %tooltip--desktop {\n            @include type-style($text-desktop);\n        }\n    } @else {\n        %tooltip--desktop {\n            font-size: rem(10px);\n            font-weight: 600;\n        }\n    }\n}\n","@tailwind base;\n","@tailwind utilities;\n"],"mappings":"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AA,qBAAA,EAAA,GAAA,EAAA,KAAA,EAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,kBAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,EAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,kBAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,EAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,kBAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,kBAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,kBAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,kBAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,mBAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,mBAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,mBAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,mBAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,mBAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,mBAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,mBAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,mBAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,mBAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,mBAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,mBAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,mBAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,mBAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,mBAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,KAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,mBAAA,EAAA,KAAA,IAAA,qBAAA,EAAA,GAAA,EAAA,MAAA,KAAA,IA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","names":[],"sourceRoot":"webpack:///","file":"styles.896cd9b419316be8.css","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83]}